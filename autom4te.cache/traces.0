m4trace:/usr/share/aclocal-1.15/amversion.m4:14: -1- AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version='1.15'
dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to
dnl require some minimum version.  Point them to the right macro.
m4_if([$1], [1.15], [],
      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl
])
m4trace:/usr/share/aclocal-1.15/amversion.m4:33: -1- AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION], [AM_AUTOMAKE_VERSION([1.15])dnl
m4_ifndef([AC_AUTOCONF_VERSION],
  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])
m4trace:/usr/share/aclocal-1.15/auxdir.m4:47: -1- AC_DEFUN([AM_AUX_DIR_EXPAND], [AC_REQUIRE([AC_CONFIG_AUX_DIR_DEFAULT])dnl
# Expand $ac_aux_dir to an absolute path.
am_aux_dir=`cd "$ac_aux_dir" && pwd`
])
m4trace:/usr/share/aclocal-1.15/cond.m4:12: -1- AC_DEFUN([AM_CONDITIONAL], [AC_PREREQ([2.52])dnl
 m4_if([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],
       [$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl
AC_SUBST([$1_TRUE])dnl
AC_SUBST([$1_FALSE])dnl
_AM_SUBST_NOTMAKE([$1_TRUE])dnl
_AM_SUBST_NOTMAKE([$1_FALSE])dnl
m4_define([_AM_COND_VALUE_$1], [$2])dnl
if $2; then
  $1_TRUE=
  $1_FALSE='#'
else
  $1_TRUE='#'
  $1_FALSE=
fi
AC_CONFIG_COMMANDS_PRE(
[if test -z "${$1_TRUE}" && test -z "${$1_FALSE}"; then
  AC_MSG_ERROR([[conditional "$1" was never defined.
Usually this means the macro was only invoked conditionally.]])
fi])])
m4trace:/usr/share/aclocal-1.15/depend.m4:26: -1- AC_DEFUN([_AM_DEPENDENCIES], [AC_REQUIRE([AM_SET_DEPDIR])dnl
AC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl
AC_REQUIRE([AM_MAKE_INCLUDE])dnl
AC_REQUIRE([AM_DEP_TRACK])dnl

m4_if([$1], [CC],   [depcc="$CC"   am_compiler_list=],
      [$1], [CXX],  [depcc="$CXX"  am_compiler_list=],
      [$1], [OBJC], [depcc="$OBJC" am_compiler_list='gcc3 gcc'],
      [$1], [OBJCXX], [depcc="$OBJCXX" am_compiler_list='gcc3 gcc'],
      [$1], [UPC],  [depcc="$UPC"  am_compiler_list=],
      [$1], [GCJ],  [depcc="$GCJ"  am_compiler_list='gcc3 gcc'],
                    [depcc="$$1"   am_compiler_list=])

AC_CACHE_CHECK([dependency style of $depcc],
               [am_cv_$1_dependencies_compiler_type],
[if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
  # We make a subdir and do the tests there.  Otherwise we can end up
  # making bogus files that we don't know about and never remove.  For
  # instance it was reported that on HP-UX the gcc test will end up
  # making a dummy file named 'D' -- because '-MD' means "put the output
  # in D".
  rm -rf conftest.dir
  mkdir conftest.dir
  # Copy depcomp to subdir because otherwise we won't find it if we're
  # using a relative directory.
  cp "$am_depcomp" conftest.dir
  cd conftest.dir
  # We will build objects and dependencies in a subdirectory because
  # it helps to detect inapplicable dependency modes.  For instance
  # both Tru64's cc and ICC support -MD to output dependencies as a
  # side effect of compilation, but ICC will put the dependencies in
  # the current directory while Tru64 will put them in the object
  # directory.
  mkdir sub

  am_cv_$1_dependencies_compiler_type=none
  if test "$am_compiler_list" = ""; then
     am_compiler_list=`sed -n ['s/^#*\([a-zA-Z0-9]*\))$/\1/p'] < ./depcomp`
  fi
  am__universal=false
  m4_case([$1], [CC],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac],
    [CXX],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac])

  for depmode in $am_compiler_list; do
    # Setup a source with many dependencies, because some compilers
    # like to wrap large dependency lists on column 80 (with \), and
    # we should not choose a depcomp mode which is confused by this.
    #
    # We need to recreate these files for each test, as the compiler may
    # overwrite some of them when testing with obscure command lines.
    # This happens at least with the AIX C compiler.
    : > sub/conftest.c
    for i in 1 2 3 4 5 6; do
      echo '#include "conftst'$i'.h"' >> sub/conftest.c
      # Using ": > sub/conftst$i.h" creates only sub/conftst1.h with
      # Solaris 10 /bin/sh.
      echo '/* dummy */' > sub/conftst$i.h
    done
    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf

    # We check with '-c' and '-o' for the sake of the "dashmstdout"
    # mode.  It turns out that the SunPro C++ compiler does not properly
    # handle '-M -o', and we need to detect this.  Also, some Intel
    # versions had trouble with output in subdirs.
    am__obj=sub/conftest.${OBJEXT-o}
    am__minus_obj="-o $am__obj"
    case $depmode in
    gcc)
      # This depmode causes a compiler race in universal mode.
      test "$am__universal" = false || continue
      ;;
    nosideeffect)
      # After this tag, mechanisms are not by side-effect, so they'll
      # only be used when explicitly requested.
      if test "x$enable_dependency_tracking" = xyes; then
	continue
      else
	break
      fi
      ;;
    msvc7 | msvc7msys | msvisualcpp | msvcmsys)
      # This compiler won't grok '-c -o', but also, the minuso test has
      # not run yet.  These depmodes are late enough in the game, and
      # so weak that their functioning should not be impacted.
      am__obj=conftest.${OBJEXT-o}
      am__minus_obj=
      ;;
    none) break ;;
    esac
    if depmode=$depmode \
       source=sub/conftest.c object=$am__obj \
       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
         >/dev/null 2>conftest.err &&
       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
      # icc doesn't choke on unknown options, it will just issue warnings
      # or remarks (even with -Werror).  So we grep stderr for any message
      # that says an option was ignored or not supported.
      # When given -MP, icc 7.0 and 7.1 complain thusly:
      #   icc: Command line warning: ignoring option '-M'; no argument required
      # The diagnosis changed in icc 8.0:
      #   icc: Command line remark: option '-MP' not supported
      if (grep 'ignoring option' conftest.err ||
          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
        am_cv_$1_dependencies_compiler_type=$depmode
        break
      fi
    fi
  done

  cd ..
  rm -rf conftest.dir
else
  am_cv_$1_dependencies_compiler_type=none
fi
])
AC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])
AM_CONDITIONAL([am__fastdep$1], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_$1_dependencies_compiler_type" = gcc3])
])
m4trace:/usr/share/aclocal-1.15/depend.m4:163: -1- AC_DEFUN([AM_SET_DEPDIR], [AC_REQUIRE([AM_SET_LEADING_DOT])dnl
AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])dnl
])
m4trace:/usr/share/aclocal-1.15/depend.m4:171: -1- AC_DEFUN([AM_DEP_TRACK], [AC_ARG_ENABLE([dependency-tracking], [dnl
AS_HELP_STRING(
  [--enable-dependency-tracking],
  [do not reject slow dependency extractors])
AS_HELP_STRING(
  [--disable-dependency-tracking],
  [speeds up one-time build])])
if test "x$enable_dependency_tracking" != xno; then
  am_depcomp="$ac_aux_dir/depcomp"
  AMDEPBACKSLASH='\'
  am__nodep='_no'
fi
AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
AC_SUBST([AMDEPBACKSLASH])dnl
_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl
AC_SUBST([am__nodep])dnl
_AM_SUBST_NOTMAKE([am__nodep])dnl
])
m4trace:/usr/share/aclocal-1.15/depout.m4:12: -1- AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS], [{
  # Older Autoconf quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  case $CONFIG_FILES in
  *\'*) eval set x "$CONFIG_FILES" ;;
  *)   set x $CONFIG_FILES ;;
  esac
  shift
  for mf
  do
    # Strip MF so we end up with the name of the file.
    mf=`echo "$mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile or not.
    # We used to match only the files named 'Makefile.in', but
    # some people rename them; so instead we look at the file content.
    # Grep'ing the first line is not enough: some people post-process
    # each Makefile.in and add a new line on top of each file to say so.
    # Grep'ing the whole file is not good either: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
      dirpart=`AS_DIRNAME("$mf")`
    else
      continue
    fi
    # Extract the definition of DEPDIR, am__include, and am__quote
    # from the Makefile without running 'make'.
    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
    test -z "$DEPDIR" && continue
    am__include=`sed -n 's/^am__include = //p' < "$mf"`
    test -z "$am__include" && continue
    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
    # Find all dependency output files, they are included files with
    # $(DEPDIR) in their names.  We invoke sed twice because it is the
    # simplest approach to changing $(DEPDIR) to its actual value in the
    # expansion.
    for file in `sed -n "
      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g'`; do
      # Make sure the directory exists.
      test -f "$dirpart/$file" && continue
      fdir=`AS_DIRNAME(["$file"])`
      AS_MKDIR_P([$dirpart/$fdir])
      # echo "creating $dirpart/$file"
      echo '# dummy' > "$dirpart/$file"
    done
  done
}
])
m4trace:/usr/share/aclocal-1.15/depout.m4:71: -1- AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS], [AC_CONFIG_COMMANDS([depfiles],
     [test x"$AMDEP_TRUE" != x"" || _AM_OUTPUT_DEPENDENCY_COMMANDS],
     [AMDEP_TRUE="$AMDEP_TRUE" ac_aux_dir="$ac_aux_dir"])
])
m4trace:/usr/share/aclocal-1.15/init.m4:29: -1- AC_DEFUN([AM_INIT_AUTOMAKE], [AC_PREREQ([2.65])dnl
dnl Autoconf wants to disallow AM_ names.  We explicitly allow
dnl the ones we care about.
m4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl
AC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl
AC_REQUIRE([AC_PROG_INSTALL])dnl
if test "`cd $srcdir && pwd`" != "`pwd`"; then
  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
  # is not polluted with repeated "-I."
  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl
  # test to see if srcdir already configured
  if test -f $srcdir/config.status; then
    AC_MSG_ERROR([source directory already configured; run "make distclean" there first])
  fi
fi

# test whether we have cygpath
if test -z "$CYGPATH_W"; then
  if (cygpath --version) >/dev/null 2>/dev/null; then
    CYGPATH_W='cygpath -w'
  else
    CYGPATH_W=echo
  fi
fi
AC_SUBST([CYGPATH_W])

# Define the identity of the package.
dnl Distinguish between old-style and new-style calls.
m4_ifval([$2],
[AC_DIAGNOSE([obsolete],
             [$0: two- and three-arguments forms are deprecated.])
m4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl
 AC_SUBST([PACKAGE], [$1])dnl
 AC_SUBST([VERSION], [$2])],
[_AM_SET_OPTIONS([$1])dnl
dnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.
m4_if(
  m4_ifdef([AC_PACKAGE_NAME], [ok]):m4_ifdef([AC_PACKAGE_VERSION], [ok]),
  [ok:ok],,
  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl
 AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl
 AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl

_AM_IF_OPTION([no-define],,
[AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])dnl

# Some tools Automake needs.
AC_REQUIRE([AM_SANITY_CHECK])dnl
AC_REQUIRE([AC_ARG_PROGRAM])dnl
AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
AM_MISSING_PROG([AUTOCONF], [autoconf])
AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
AM_MISSING_PROG([AUTOHEADER], [autoheader])
AM_MISSING_PROG([MAKEINFO], [makeinfo])
AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
AC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl
AC_REQUIRE([AC_PROG_MKDIR_P])dnl
# For better backward compatibility.  To be removed once Automake 1.9.x
# dies out for good.  For more background, see:
# <http://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>
# <http://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>
AC_SUBST([mkdir_p], ['$(MKDIR_P)'])
# We need awk for the "check" target (and possibly the TAP driver).  The
# system "awk" is bad on some platforms.
AC_REQUIRE([AC_PROG_AWK])dnl
AC_REQUIRE([AC_PROG_MAKE_SET])dnl
AC_REQUIRE([AM_SET_LEADING_DOT])dnl
_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],
	      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
_AM_IF_OPTION([no-dependencies],,
[AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl
])
AC_REQUIRE([AM_SILENT_RULES])dnl
dnl The testsuite driver may need to know about EXEEXT, so add the
dnl 'am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This
dnl macro is hooked onto _AC_COMPILER_EXEEXT early, see below.
AC_CONFIG_COMMANDS_PRE(dnl
[m4_provide_if([_AM_COMPILER_EXEEXT],
  [AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])])])dnl

# POSIX will say in a future version that running "rm -f" with no argument
# is OK; and we want to be able to make that assumption in our Makefile
# recipes.  So use an aggressive probe to check that the usage we want is
# actually supported "in the wild" to an acceptable degree.
# See automake bug#10828.
# To make any issue more visible, cause the running configure to be aborted
# by default if the 'rm' program in use doesn't match our expectations; the
# user can still override this though.
if rm -f && rm -fr && rm -rf; then : OK; else
  cat >&2 <<'END'
Oops!

Your 'rm' program seems unable to run without file operands specified
on the command line, even when the '-f' option is present.  This is contrary
to the behaviour of most rm programs out there, and not conforming with
the upcoming POSIX standard: <http://austingroupbugs.net/view.php?id=542>

Please tell bug-automake@gnu.org about your system, including the value
of your $PATH and any error possibly output before this message.  This
can help us improve future automake versions.

END
  if test x"$ACCEPT_INFERIOR_RM_PROGRAM" = x"yes"; then
    echo 'Configuration will proceed anyway, since you have set the' >&2
    echo 'ACCEPT_INFERIOR_RM_PROGRAM variable to "yes"' >&2
    echo >&2
  else
    cat >&2 <<'END'
Aborting the configuration process, to ensure you take notice of the issue.

You can download and install GNU coreutils to get an 'rm' implementation
that behaves properly: <http://www.gnu.org/software/coreutils/>.

If you want to complete the configuration process using your problematic
'rm' anyway, export the environment variable ACCEPT_INFERIOR_RM_PROGRAM
to "yes", and re-run configure.

END
    AC_MSG_ERROR([Your 'rm' program is bad, sorry.])
  fi
fi
dnl The trailing newline in this macro's definition is deliberate, for
dnl backward compatibility and to allow trailing 'dnl'-style comments
dnl after the AM_INIT_AUTOMAKE invocation. See automake bug#16841.
])
m4trace:/usr/share/aclocal-1.15/init.m4:186: -1- AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK], [# Compute $1's index in $config_headers.
_am_arg=$1
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`AS_DIRNAME(["$_am_arg"])`/stamp-h[]$_am_stamp_count])
m4trace:/usr/share/aclocal-1.15/install-sh.m4:11: -1- AC_DEFUN([AM_PROG_INSTALL_SH], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
if test x"${install_sh+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
  *)
    install_sh="\${SHELL} $am_aux_dir/install-sh"
  esac
fi
AC_SUBST([install_sh])])
m4trace:/usr/share/aclocal-1.15/lead-dot.m4:10: -1- AC_DEFUN([AM_SET_LEADING_DOT], [rm -rf .tst 2>/dev/null
mkdir .tst 2>/dev/null
if test -d .tst; then
  am__leading_dot=.
else
  am__leading_dot=_
fi
rmdir .tst 2>/dev/null
AC_SUBST([am__leading_dot])])
m4trace:/usr/share/aclocal-1.15/make.m4:12: -1- AC_DEFUN([AM_MAKE_INCLUDE], [am_make=${MAKE-make}
cat > confinc << 'END'
am__doit:
	@echo this is the am__doit target
.PHONY: am__doit
END
# If we don't find an include directive, just comment out the code.
AC_MSG_CHECKING([for style of include used by $am_make])
am__include="#"
am__quote=
_am_result=none
# First try GNU make style include.
echo "include confinc" > confmf
# Ignore all kinds of additional output from 'make'.
case `$am_make -s -f confmf 2> /dev/null` in #(
*the\ am__doit\ target*)
  am__include=include
  am__quote=
  _am_result=GNU
  ;;
esac
# Now try BSD make style include.
if test "$am__include" = "#"; then
   echo '.include "confinc"' > confmf
   case `$am_make -s -f confmf 2> /dev/null` in #(
   *the\ am__doit\ target*)
     am__include=.include
     am__quote="\""
     _am_result=BSD
     ;;
   esac
fi
AC_SUBST([am__include])
AC_SUBST([am__quote])
AC_MSG_RESULT([$_am_result])
rm -f confinc confmf
])
m4trace:/usr/share/aclocal-1.15/missing.m4:11: -1- AC_DEFUN([AM_MISSING_PROG], [AC_REQUIRE([AM_MISSING_HAS_RUN])
$1=${$1-"${am_missing_run}$2"}
AC_SUBST($1)])
m4trace:/usr/share/aclocal-1.15/missing.m4:20: -1- AC_DEFUN([AM_MISSING_HAS_RUN], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([missing])dnl
if test x"${MISSING+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    MISSING="\${SHELL} \"$am_aux_dir/missing\"" ;;
  *)
    MISSING="\${SHELL} $am_aux_dir/missing" ;;
  esac
fi
# Use eval to expand $SHELL
if eval "$MISSING --is-lightweight"; then
  am_missing_run="$MISSING "
else
  am_missing_run=
  AC_MSG_WARN(['missing' script is too old or missing])
fi
])
m4trace:/usr/share/aclocal-1.15/options.m4:11: -1- AC_DEFUN([_AM_MANGLE_OPTION], [[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])
m4trace:/usr/share/aclocal-1.15/options.m4:17: -1- AC_DEFUN([_AM_SET_OPTION], [m4_define(_AM_MANGLE_OPTION([$1]), [1])])
m4trace:/usr/share/aclocal-1.15/options.m4:23: -1- AC_DEFUN([_AM_SET_OPTIONS], [m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])
m4trace:/usr/share/aclocal-1.15/options.m4:29: -1- AC_DEFUN([_AM_IF_OPTION], [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
m4trace:/usr/share/aclocal-1.15/prog-cc-c-o.m4:12: -1- AC_DEFUN([_AM_PROG_CC_C_O], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([compile])dnl
AC_LANG_PUSH([C])dnl
AC_CACHE_CHECK(
  [whether $CC understands -c and -o together],
  [am_cv_prog_cc_c_o],
  [AC_LANG_CONFTEST([AC_LANG_PROGRAM([])])
  # Make sure it works both with $CC and with simple cc.
  # Following AC_PROG_CC_C_O, we do the test twice because some
  # compilers refuse to overwrite an existing .o file with -o,
  # though they will create one.
  am_cv_prog_cc_c_o=yes
  for am_i in 1 2; do
    if AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext]) \
         && test -f conftest2.$ac_objext; then
      : OK
    else
      am_cv_prog_cc_c_o=no
      break
    fi
  done
  rm -f core conftest*
  unset am_i])
if test "$am_cv_prog_cc_c_o" != yes; then
   # Losing compiler, so override with the script.
   # FIXME: It is wrong to rewrite CC.
   # But if we don't then we get into trouble of one sort or another.
   # A longer-term fix would be to have automake use am__CC in this case,
   # and then we could set am__CC="\$(top_srcdir)/compile \$(CC)"
   CC="$am_aux_dir/compile $CC"
fi
AC_LANG_POP([C])])
m4trace:/usr/share/aclocal-1.15/prog-cc-c-o.m4:47: -1- AC_DEFUN_ONCE([AM_PROG_CC_C_O], [AC_REQUIRE([AC_PROG_CC])])
m4trace:/usr/share/aclocal-1.15/runlog.m4:12: -1- AC_DEFUN([AM_RUN_LOG], [{ echo "$as_me:$LINENO: $1" >&AS_MESSAGE_LOG_FD
   ($1) >&AS_MESSAGE_LOG_FD 2>&AS_MESSAGE_LOG_FD
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   (exit $ac_status); }])
m4trace:/usr/share/aclocal-1.15/sanity.m4:11: -1- AC_DEFUN([AM_SANITY_CHECK], [AC_MSG_CHECKING([whether build environment is sane])
# Reject unsafe characters in $srcdir or the absolute working directory
# name.  Accept space and tab only in the latter.
am_lf='
'
case `pwd` in
  *[[\\\"\#\$\&\'\`$am_lf]]*)
    AC_MSG_ERROR([unsafe absolute working directory name]);;
esac
case $srcdir in
  *[[\\\"\#\$\&\'\`$am_lf\ \	]]*)
    AC_MSG_ERROR([unsafe srcdir value: '$srcdir']);;
esac

# Do 'set' in a subshell so we don't clobber the current shell's
# arguments.  Must try -L first in case configure is actually a
# symlink; some systems play weird games with the mod time of symlinks
# (eg FreeBSD returns the mod time of the symlink's containing
# directory).
if (
   am_has_slept=no
   for am_try in 1 2; do
     echo "timestamp, slept: $am_has_slept" > conftest.file
     set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
     if test "$[*]" = "X"; then
	# -L didn't work.
	set X `ls -t "$srcdir/configure" conftest.file`
     fi
     if test "$[*]" != "X $srcdir/configure conftest.file" \
	&& test "$[*]" != "X conftest.file $srcdir/configure"; then

	# If neither matched, then we have a broken ls.  This can happen
	# if, for instance, CONFIG_SHELL is bash and it inherits a
	# broken ls alias from the environment.  This has actually
	# happened.  Such a system could not be considered "sane".
	AC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken
  alias in your environment])
     fi
     if test "$[2]" = conftest.file || test $am_try -eq 2; then
       break
     fi
     # Just in case.
     sleep 1
     am_has_slept=yes
   done
   test "$[2]" = conftest.file
   )
then
   # Ok.
   :
else
   AC_MSG_ERROR([newly created file is older than distributed files!
Check your system clock])
fi
AC_MSG_RESULT([yes])
# If we didn't sleep, we still need to ensure time stamps of config.status and
# generated files are strictly newer.
am_sleep_pid=
if grep 'slept: no' conftest.file >/dev/null 2>&1; then
  ( sleep 1 ) &
  am_sleep_pid=$!
fi
AC_CONFIG_COMMANDS_PRE(
  [AC_MSG_CHECKING([that generated files are newer than configure])
   if test -n "$am_sleep_pid"; then
     # Hide warnings about reused PIDs.
     wait $am_sleep_pid 2>/dev/null
   fi
   AC_MSG_RESULT([done])])
rm -f conftest.file
])
m4trace:/usr/share/aclocal-1.15/silent.m4:12: -1- AC_DEFUN([AM_SILENT_RULES], [AC_ARG_ENABLE([silent-rules], [dnl
AS_HELP_STRING(
  [--enable-silent-rules],
  [less verbose build output (undo: "make V=1")])
AS_HELP_STRING(
  [--disable-silent-rules],
  [verbose build output (undo: "make V=0")])dnl
])
case $enable_silent_rules in @%:@ (((
  yes) AM_DEFAULT_VERBOSITY=0;;
   no) AM_DEFAULT_VERBOSITY=1;;
    *) AM_DEFAULT_VERBOSITY=m4_if([$1], [yes], [0], [1]);;
esac
dnl
dnl A few 'make' implementations (e.g., NonStop OS and NextStep)
dnl do not support nested variable expansions.
dnl See automake bug#9928 and bug#10237.
am_make=${MAKE-make}
AC_CACHE_CHECK([whether $am_make supports nested variables],
   [am_cv_make_support_nested_variables],
   [if AS_ECHO([['TRUE=$(BAR$(V))
BAR0=false
BAR1=true
V=1
am__doit:
	@$(TRUE)
.PHONY: am__doit']]) | $am_make -f - >/dev/null 2>&1; then
  am_cv_make_support_nested_variables=yes
else
  am_cv_make_support_nested_variables=no
fi])
if test $am_cv_make_support_nested_variables = yes; then
  dnl Using '$V' instead of '$(V)' breaks IRIX make.
  AM_V='$(V)'
  AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
else
  AM_V=$AM_DEFAULT_VERBOSITY
  AM_DEFAULT_V=$AM_DEFAULT_VERBOSITY
fi
AC_SUBST([AM_V])dnl
AM_SUBST_NOTMAKE([AM_V])dnl
AC_SUBST([AM_DEFAULT_V])dnl
AM_SUBST_NOTMAKE([AM_DEFAULT_V])dnl
AC_SUBST([AM_DEFAULT_VERBOSITY])dnl
AM_BACKSLASH='\'
AC_SUBST([AM_BACKSLASH])dnl
_AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl
])
m4trace:/usr/share/aclocal-1.15/strip.m4:17: -1- AC_DEFUN([AM_PROG_INSTALL_STRIP], [AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
# Installed binaries are usually stripped using 'strip' when the user
# run "make install-strip".  However 'strip' might not be the right
# tool to use in cross-compilation environments, therefore Automake
# will honor the 'STRIP' environment variable to overrule this program.
dnl Don't test for $cross_compiling = yes, because it might be 'maybe'.
if test "$cross_compiling" != no; then
  AC_CHECK_TOOL([STRIP], [strip], :)
fi
INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
AC_SUBST([INSTALL_STRIP_PROGRAM])])
m4trace:/usr/share/aclocal-1.15/substnot.m4:12: -1- AC_DEFUN([_AM_SUBST_NOTMAKE])
m4trace:/usr/share/aclocal-1.15/substnot.m4:17: -1- AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])
m4trace:/usr/share/aclocal-1.15/tar.m4:23: -1- AC_DEFUN([_AM_PROG_TAR], [# Always define AMTAR for backward compatibility.  Yes, it's still used
# in the wild :-(  We should find a proper way to deprecate it ...
AC_SUBST([AMTAR], ['$${TAR-tar}'])

# We'll loop over all known methods to create a tar archive until one works.
_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'

m4_if([$1], [v7],
  [am__tar='$${TAR-tar} chof - "$$tardir"' am__untar='$${TAR-tar} xf -'],

  [m4_case([$1],
    [ustar],
     [# The POSIX 1988 'ustar' format is defined with fixed-size fields.
      # There is notably a 21 bits limit for the UID and the GID.  In fact,
      # the 'pax' utility can hang on bigger UID/GID (see automake bug#8343
      # and bug#13588).
      am_max_uid=2097151 # 2^21 - 1
      am_max_gid=$am_max_uid
      # The $UID and $GID variables are not portable, so we need to resort
      # to the POSIX-mandated id(1) utility.  Errors in the 'id' calls
      # below are definitely unexpected, so allow the users to see them
      # (that is, avoid stderr redirection).
      am_uid=`id -u || echo unknown`
      am_gid=`id -g || echo unknown`
      AC_MSG_CHECKING([whether UID '$am_uid' is supported by ustar format])
      if test $am_uid -le $am_max_uid; then
         AC_MSG_RESULT([yes])
      else
         AC_MSG_RESULT([no])
         _am_tools=none
      fi
      AC_MSG_CHECKING([whether GID '$am_gid' is supported by ustar format])
      if test $am_gid -le $am_max_gid; then
         AC_MSG_RESULT([yes])
      else
        AC_MSG_RESULT([no])
        _am_tools=none
      fi],

  [pax],
    [],

  [m4_fatal([Unknown tar format])])

  AC_MSG_CHECKING([how to create a $1 tar archive])

  # Go ahead even if we have the value already cached.  We do so because we
  # need to set the values for the 'am__tar' and 'am__untar' variables.
  _am_tools=${am_cv_prog_tar_$1-$_am_tools}

  for _am_tool in $_am_tools; do
    case $_am_tool in
    gnutar)
      for _am_tar in tar gnutar gtar; do
        AM_RUN_LOG([$_am_tar --version]) && break
      done
      am__tar="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$$tardir"'
      am__tar_="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$tardir"'
      am__untar="$_am_tar -xf -"
      ;;
    plaintar)
      # Must skip GNU tar: if it does not support --format= it doesn't create
      # ustar tarball either.
      (tar --version) >/dev/null 2>&1 && continue
      am__tar='tar chf - "$$tardir"'
      am__tar_='tar chf - "$tardir"'
      am__untar='tar xf -'
      ;;
    pax)
      am__tar='pax -L -x $1 -w "$$tardir"'
      am__tar_='pax -L -x $1 -w "$tardir"'
      am__untar='pax -r'
      ;;
    cpio)
      am__tar='find "$$tardir" -print | cpio -o -H $1 -L'
      am__tar_='find "$tardir" -print | cpio -o -H $1 -L'
      am__untar='cpio -i -H $1 -d'
      ;;
    none)
      am__tar=false
      am__tar_=false
      am__untar=false
      ;;
    esac

    # If the value was cached, stop now.  We just wanted to have am__tar
    # and am__untar set.
    test -n "${am_cv_prog_tar_$1}" && break

    # tar/untar a dummy directory, and stop if the command works.
    rm -rf conftest.dir
    mkdir conftest.dir
    echo GrepMe > conftest.dir/file
    AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
    rm -rf conftest.dir
    if test -s conftest.tar; then
      AM_RUN_LOG([$am__untar <conftest.tar])
      AM_RUN_LOG([cat conftest.dir/file])
      grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
    fi
  done
  rm -rf conftest.dir

  AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])
  AC_MSG_RESULT([$am_cv_prog_tar_$1])])

AC_SUBST([am__tar])
AC_SUBST([am__untar])
])
m4trace:m4/ax_append_compile_flags.m4:61: -1- AC_DEFUN([AX_APPEND_COMPILE_FLAGS], [AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
for flag in $1; do
  AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [$2])], [], [$3], [$4])
done
])
m4trace:m4/ax_append_flag.m4:54: -1- AC_DEFUN([AX_APPEND_FLAG], [dnl
AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_SET_IF
AS_VAR_PUSHDEF([FLAGS], [m4_default($2,_AC_LANG_PREFIX[FLAGS])])
AS_VAR_SET_IF(FLAGS,[
  AS_CASE([" AS_VAR_GET(FLAGS) "],
    [*" $1 "*], [AC_RUN_LOG([: FLAGS already contains $1])],
    [
     AS_VAR_APPEND(FLAGS,[" $1"])
     AC_RUN_LOG([: FLAGS="$FLAGS"])
    ])
  ],
  [
  AS_VAR_SET(FLAGS,[$1])
  AC_RUN_LOG([: FLAGS="$FLAGS"])
  ])
AS_VAR_POPDEF([FLAGS])dnl
])
m4trace:m4/ax_append_link_flags.m4:59: -1- AC_DEFUN([AX_APPEND_LINK_FLAGS], [AX_REQUIRE_DEFINED([AX_CHECK_LINK_FLAG])
AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
for flag in $1; do
  AX_CHECK_LINK_FLAG([$flag], [AX_APPEND_FLAG([$flag], [m4_default([$2], [LDFLAGS])])], [], [$3], [$4])
done
])
m4trace:m4/ax_boost_base.m4:38: -1- AC_DEFUN([AX_BOOST_BASE], [
AC_ARG_WITH([boost],
  [AS_HELP_STRING([--with-boost@<:@=ARG@:>@],
    [use Boost library from a standard location (ARG=yes),
     from the specified location (ARG=<path>),
     or disable it (ARG=no)
     @<:@ARG=yes@:>@ ])],
    [
    if test "$withval" = "no"; then
        want_boost="no"
    elif test "$withval" = "yes"; then
        want_boost="yes"
        ac_boost_path=""
    else
        want_boost="yes"
        ac_boost_path="$withval"
    fi
    ],
    [want_boost="yes"])


AC_ARG_WITH([boost-libdir],
        AS_HELP_STRING([--with-boost-libdir=LIB_DIR],
        [Force given directory for boost libraries. Note that this will override library path detection, so use this parameter only if default library detection fails and you know exactly where your boost libraries are located.]),
        [
        if test -d "$withval"
        then
                ac_boost_lib_path="$withval"
        else
                AC_MSG_ERROR(--with-boost-libdir expected directory name)
        fi
        ],
        [ac_boost_lib_path=""]
)

if test "x$want_boost" = "xyes"; then
    boost_lib_version_req=ifelse([$1], ,1.20.0,$1)
    boost_lib_version_req_shorten=`expr $boost_lib_version_req : '\([[0-9]]*\.[[0-9]]*\)'`
    boost_lib_version_req_major=`expr $boost_lib_version_req : '\([[0-9]]*\)'`
    boost_lib_version_req_minor=`expr $boost_lib_version_req : '[[0-9]]*\.\([[0-9]]*\)'`
    boost_lib_version_req_sub_minor=`expr $boost_lib_version_req : '[[0-9]]*\.[[0-9]]*\.\([[0-9]]*\)'`
    if test "x$boost_lib_version_req_sub_minor" = "x" ; then
        boost_lib_version_req_sub_minor="0"
        fi
    WANT_BOOST_VERSION=`expr $boost_lib_version_req_major \* 100000 \+  $boost_lib_version_req_minor \* 100 \+ $boost_lib_version_req_sub_minor`
    AC_MSG_CHECKING(for boostlib >= $boost_lib_version_req)
    succeeded=no

    dnl On 64-bit systems check for system libraries in both lib64 and lib.
    dnl The former is specified by FHS, but e.g. Debian does not adhere to
    dnl this (as it rises problems for generic multi-arch support).
    dnl The last entry in the list is chosen by default when no libraries
    dnl are found, e.g. when only header-only libraries are installed!
    libsubdirs="lib"
    ax_arch=`uname -m`
    case $ax_arch in
      x86_64)
        libsubdirs="lib64 libx32 lib lib64"
        ;;
      ppc64|s390x|sparc64|aarch64|ppc64le)
        libsubdirs="lib64 lib lib64"
        ;;
    esac

    dnl allow for real multi-arch paths e.g. /usr/lib/x86_64-linux-gnu. Give
    dnl them priority over the other paths since, if libs are found there, they
    dnl are almost assuredly the ones desired.
    AC_REQUIRE([AC_CANONICAL_HOST])
    libsubdirs="lib/${host_cpu}-${host_os} $libsubdirs"

    case ${host_cpu} in
      i?86)
        libsubdirs="lib/i386-${host_os} $libsubdirs"
        ;;
    esac

    dnl first we check the system location for boost libraries
    dnl this location ist chosen if boost libraries are installed with the --layout=system option
    dnl or if you install boost with RPM
    if test "$ac_boost_path" != ""; then
        BOOST_CPPFLAGS="-I$ac_boost_path/include"
        for ac_boost_path_tmp in $libsubdirs; do
                if test -d "$ac_boost_path"/"$ac_boost_path_tmp" ; then
                        BOOST_LDFLAGS="-L$ac_boost_path/$ac_boost_path_tmp"
                        break
                fi
        done
    elif test "$cross_compiling" != yes; then
        for ac_boost_path_tmp in /usr /usr/local /opt /opt/local ; do
            if test -d "$ac_boost_path_tmp/include/boost" && test -r "$ac_boost_path_tmp/include/boost"; then
                for libsubdir in $libsubdirs ; do
                    if ls "$ac_boost_path_tmp/$libsubdir/libboost_"* >/dev/null 2>&1 ; then break; fi
                done
                BOOST_LDFLAGS="-L$ac_boost_path_tmp/$libsubdir"
                BOOST_CPPFLAGS="-I$ac_boost_path_tmp/include"
                break;
            fi
        done
    fi

    dnl overwrite ld flags if we have required special directory with
    dnl --with-boost-libdir parameter
    if test "$ac_boost_lib_path" != ""; then
       BOOST_LDFLAGS="-L$ac_boost_lib_path"
    fi

    CPPFLAGS_SAVED="$CPPFLAGS"
    CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
    export CPPFLAGS

    LDFLAGS_SAVED="$LDFLAGS"
    LDFLAGS="$LDFLAGS $BOOST_LDFLAGS"
    export LDFLAGS

    AC_REQUIRE([AC_PROG_CXX])
    AC_LANG_PUSH(C++)
        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
    @%:@include <boost/version.hpp>
    ]], [[
    #if BOOST_VERSION >= $WANT_BOOST_VERSION
    // Everything is okay
    #else
    #  error Boost version is too old
    #endif
    ]])],[
        AC_MSG_RESULT(yes)
    succeeded=yes
    found_system=yes
        ],[
        ])
    AC_LANG_POP([C++])



    dnl if we found no boost with system layout we search for boost libraries
    dnl built and installed without the --layout=system option or for a staged(not installed) version
    if test "x$succeeded" != "xyes"; then
        CPPFLAGS="$CPPFLAGS_SAVED"
        LDFLAGS="$LDFLAGS_SAVED"
        BOOST_CPPFLAGS=
        BOOST_LDFLAGS=
        _version=0
        if test "$ac_boost_path" != ""; then
            if test -d "$ac_boost_path" && test -r "$ac_boost_path"; then
                for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do
                    _version_tmp=`echo $i | sed "s#$ac_boost_path##" | sed 's/\/include\/boost-//' | sed 's/_/./'`
                    V_CHECK=`expr $_version_tmp \> $_version`
                    if test "$V_CHECK" = "1" ; then
                        _version=$_version_tmp
                    fi
                    VERSION_UNDERSCORE=`echo $_version | sed 's/\./_/'`
                    BOOST_CPPFLAGS="-I$ac_boost_path/include/boost-$VERSION_UNDERSCORE"
                done
                dnl if nothing found search for layout used in Windows distributions
                if test -z "$BOOST_CPPFLAGS"; then
                    if test -d "$ac_boost_path/boost" && test -r "$ac_boost_path/boost"; then
                        BOOST_CPPFLAGS="-I$ac_boost_path"
                    fi
                fi
            fi
        else
            if test "$cross_compiling" != yes; then
                for ac_boost_path in /usr /usr/local /opt /opt/local ; do
                    if test -d "$ac_boost_path" && test -r "$ac_boost_path"; then
                        for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do
                            _version_tmp=`echo $i | sed "s#$ac_boost_path##" | sed 's/\/include\/boost-//' | sed 's/_/./'`
                            V_CHECK=`expr $_version_tmp \> $_version`
                            if test "$V_CHECK" = "1" ; then
                                _version=$_version_tmp
                                best_path=$ac_boost_path
                            fi
                        done
                    fi
                done

                VERSION_UNDERSCORE=`echo $_version | sed 's/\./_/'`
                BOOST_CPPFLAGS="-I$best_path/include/boost-$VERSION_UNDERSCORE"
                if test "$ac_boost_lib_path" = ""; then
                    for libsubdir in $libsubdirs ; do
                        if ls "$best_path/$libsubdir/libboost_"* >/dev/null 2>&1 ; then break; fi
                    done
                    BOOST_LDFLAGS="-L$best_path/$libsubdir"
                fi
            fi

            if test "x$BOOST_ROOT" != "x"; then
                for libsubdir in $libsubdirs ; do
                    if ls "$BOOST_ROOT/stage/$libsubdir/libboost_"* >/dev/null 2>&1 ; then break; fi
                done
                if test -d "$BOOST_ROOT" && test -r "$BOOST_ROOT" && test -d "$BOOST_ROOT/stage/$libsubdir" && test -r "$BOOST_ROOT/stage/$libsubdir"; then
                    version_dir=`expr //$BOOST_ROOT : '.*/\(.*\)'`
                    stage_version=`echo $version_dir | sed 's/boost_//' | sed 's/_/./g'`
                        stage_version_shorten=`expr $stage_version : '\([[0-9]]*\.[[0-9]]*\)'`
                    V_CHECK=`expr $stage_version_shorten \>\= $_version`
                    if test "$V_CHECK" = "1" -a "$ac_boost_lib_path" = "" ; then
                        AC_MSG_NOTICE(We will use a staged boost library from $BOOST_ROOT)
                        BOOST_CPPFLAGS="-I$BOOST_ROOT"
                        BOOST_LDFLAGS="-L$BOOST_ROOT/stage/$libsubdir"
                    fi
                fi
            fi
        fi

        CPPFLAGS="$CPPFLAGS $BOOST_CPPFLAGS"
        export CPPFLAGS
        LDFLAGS="$LDFLAGS $BOOST_LDFLAGS"
        export LDFLAGS

        AC_LANG_PUSH(C++)
            AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
        @%:@include <boost/version.hpp>
        ]], [[
        #if BOOST_VERSION >= $WANT_BOOST_VERSION
        // Everything is okay
        #else
        #  error Boost version is too old
        #endif
        ]])],[
            AC_MSG_RESULT(yes)
        succeeded=yes
        found_system=yes
            ],[
            ])
        AC_LANG_POP([C++])
    fi

    if test "$succeeded" != "yes" ; then
        if test "$_version" = "0" ; then
            AC_MSG_NOTICE([[We could not detect the boost libraries (version $boost_lib_version_req_shorten or higher). If you have a staged boost library (still not installed) please specify \$BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.]])
        else
            AC_MSG_NOTICE([Your boost libraries seems to old (version $_version).])
        fi
        # execute ACTION-IF-NOT-FOUND (if present):
        ifelse([$3], , :, [$3])
    else
        AC_SUBST(BOOST_CPPFLAGS)
        AC_SUBST(BOOST_LDFLAGS)
        AC_DEFINE(HAVE_BOOST,,[define if the Boost library is available])
        # execute ACTION-IF-FOUND (if present):
        ifelse([$2], , :, [$2])
    fi

    CPPFLAGS="$CPPFLAGS_SAVED"
    LDFLAGS="$LDFLAGS_SAVED"
fi

])
m4trace:m4/ax_check_compile_flag.m4:60: -1- AC_DEFUN([AX_CHECK_COMPILE_FLAG], [AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF
AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl
AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [
  ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS
  _AC_LANG_PREFIX[]FLAGS="$[]_AC_LANG_PREFIX[]FLAGS $4 $1"
  AC_COMPILE_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],
    [AS_VAR_SET(CACHEVAR,[yes])],
    [AS_VAR_SET(CACHEVAR,[no])])
  _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])
AS_VAR_IF(CACHEVAR,yes,
  [m4_default([$2], :)],
  [m4_default([$3], :)])
AS_VAR_POPDEF([CACHEVAR])dnl
])
m4trace:m4/ax_check_link_flag.m4:60: -1- AC_DEFUN([AX_CHECK_LINK_FLAG], [AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF
AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl
AC_CACHE_CHECK([whether the linker accepts $1], CACHEVAR, [
  ax_check_save_flags=$LDFLAGS
  LDFLAGS="$LDFLAGS $4 $1"
  AC_LINK_IFELSE([m4_default([$5],[AC_LANG_PROGRAM()])],
    [AS_VAR_SET(CACHEVAR,[yes])],
    [AS_VAR_SET(CACHEVAR,[no])])
  LDFLAGS=$ax_check_save_flags])
AS_VAR_IF(CACHEVAR,yes,
  [m4_default([$2], :)],
  [m4_default([$3], :)])
AS_VAR_POPDEF([CACHEVAR])dnl
])
m4trace:m4/ax_cxx_compile_stdcxx.m4:47: -1- AC_DEFUN([AX_CXX_COMPILE_STDCXX], [dnl
  m4_if([$1], [11], [],
        [$1], [14], [],
        [$1], [17], [m4_fatal([support for C++17 not yet implemented in AX_CXX_COMPILE_STDCXX])],
        [m4_fatal([invalid first argument `$1' to AX_CXX_COMPILE_STDCXX])])dnl
  m4_if([$2], [], [],
        [$2], [ext], [],
        [$2], [noext], [],
        [m4_fatal([invalid second argument `$2' to AX_CXX_COMPILE_STDCXX])])dnl
  m4_if([$3], [], [ax_cxx_compile_cxx$1_required=true],
        [$3], [mandatory], [ax_cxx_compile_cxx$1_required=true],
        [$3], [optional], [ax_cxx_compile_cxx$1_required=false],
        [m4_fatal([invalid third argument `$3' to AX_CXX_COMPILE_STDCXX])])
  AC_LANG_PUSH([C++])dnl
  ac_success=no
  AC_CACHE_CHECK(whether $CXX supports C++$1 features by default,
  ax_cv_cxx_compile_cxx$1,
  [AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],
    [ax_cv_cxx_compile_cxx$1=yes],
    [ax_cv_cxx_compile_cxx$1=no])])
  if test x$ax_cv_cxx_compile_cxx$1 = xyes; then
    ac_success=yes
  fi

  m4_if([$2], [noext], [], [dnl
  if test x$ac_success = xno; then
    for switch in -std=gnu++$1 -std=gnu++0x; do
      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])
      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,
                     $cachevar,
        [ac_save_CXX="$CXX"
         CXX="$CXX $switch"
         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],
          [eval $cachevar=yes],
          [eval $cachevar=no])
         CXX="$ac_save_CXX"])
      if eval test x\$$cachevar = xyes; then
        CXX="$CXX $switch"
        if test -n "$CXXCPP" ; then
          CXXCPP="$CXXCPP $switch"
        fi
        ac_success=yes
        break
      fi
    done
  fi])

  m4_if([$2], [ext], [], [dnl
  if test x$ac_success = xno; then
    dnl HP's aCC needs +std=c++11 according to:
    dnl http://h21007.www2.hp.com/portal/download/files/unprot/aCxx/PDF_Release_Notes/769149-001.pdf
    dnl Cray's crayCC needs "-h std=c++11"
    for switch in -std=c++$1 -std=c++0x +std=c++$1 "-h std=c++$1"; do
      cachevar=AS_TR_SH([ax_cv_cxx_compile_cxx$1_$switch])
      AC_CACHE_CHECK(whether $CXX supports C++$1 features with $switch,
                     $cachevar,
        [ac_save_CXX="$CXX"
         CXX="$CXX $switch"
         AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],
          [eval $cachevar=yes],
          [eval $cachevar=no])
         CXX="$ac_save_CXX"])
      if eval test x\$$cachevar = xyes; then
        CXX="$CXX $switch"
        if test -n "$CXXCPP" ; then
          CXXCPP="$CXXCPP $switch"
        fi
        ac_success=yes
        break
      fi
    done
  fi])
  AC_LANG_POP([C++])
  if test x$ax_cxx_compile_cxx$1_required = xtrue; then
    if test x$ac_success = xno; then
      AC_MSG_ERROR([*** A compiler with support for C++$1 language features is required.])
    fi
  fi
  if test x$ac_success = xno; then
    HAVE_CXX$1=0
    AC_MSG_NOTICE([No compiler with C++$1 support was found])
  else
    HAVE_CXX$1=1
    AC_DEFINE(HAVE_CXX$1,1,
              [define if the compiler supports basic C++$1 syntax])
  fi
  AC_SUBST(HAVE_CXX$1)
])
m4trace:m4/ax_cxx_compile_stdcxx_14.m4:34: -1- AC_DEFUN([AX_CXX_COMPILE_STDCXX_14], [AX_CXX_COMPILE_STDCXX([14], [$1], [$2])])
m4trace:m4/ax_pthread.m4:87: -1- AU_DEFUN([ACX_PTHREAD], [m4_if($#, 0, [AX_PTHREAD], [AX_PTHREAD($@)])])
m4trace:m4/ax_pthread.m4:87: -1- AC_DEFUN([ACX_PTHREAD], [AC_DIAGNOSE([obsolete], [The macro `ACX_PTHREAD' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [AX_PTHREAD], [AX_PTHREAD($@)])])
m4trace:m4/ax_pthread.m4:88: -1- AC_DEFUN([AX_PTHREAD], [
AC_REQUIRE([AC_CANONICAL_HOST])
AC_REQUIRE([AC_PROG_CC])
AC_REQUIRE([AC_PROG_SED])
AC_LANG_PUSH([C])
ax_pthread_ok=no

# We used to check for pthread.h first, but this fails if pthread.h
# requires special compiler flags (e.g. on Tru64 or Sequent).
# It gets checked for in the link test anyway.

# First of all, check if the user has set any of the PTHREAD_LIBS,
# etcetera environment variables, and if threads linking works using
# them:
if test "x$PTHREAD_CFLAGS$PTHREAD_LIBS" != "x"; then
        ax_pthread_save_CC="$CC"
        ax_pthread_save_CFLAGS="$CFLAGS"
        ax_pthread_save_LIBS="$LIBS"
        AS_IF([test "x$PTHREAD_CC" != "x"], [CC="$PTHREAD_CC"])
        CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
        LIBS="$PTHREAD_LIBS $LIBS"
        AC_MSG_CHECKING([for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS])
        AC_LINK_IFELSE([AC_LANG_CALL([], [pthread_join])], [ax_pthread_ok=yes])
        AC_MSG_RESULT([$ax_pthread_ok])
        if test "x$ax_pthread_ok" = "xno"; then
                PTHREAD_LIBS=""
                PTHREAD_CFLAGS=""
        fi
        CC="$ax_pthread_save_CC"
        CFLAGS="$ax_pthread_save_CFLAGS"
        LIBS="$ax_pthread_save_LIBS"
fi

# We must check for the threads library under a number of different
# names; the ordering is very important because some systems
# (e.g. DEC) have both -lpthread and -lpthreads, where one of the
# libraries is broken (non-POSIX).

# Create a list of thread flags to try.  Items starting with a "-" are
# C compiler flags, and other items are library names, except for "none"
# which indicates that we try without any flags at all, and "pthread-config"
# which is a program returning the flags for the Pth emulation library.

ax_pthread_flags="pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config"

# The ordering *is* (sometimes) important.  Some notes on the
# individual items follow:

# pthreads: AIX (must check this before -lpthread)
# none: in case threads are in libc; should be tried before -Kthread and
#       other compiler flags to prevent continual compiler warnings
# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)
# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads), Tru64
#           (Note: HP C rejects this with "bad form for `-t' option")
# -pthreads: Solaris/gcc (Note: HP C also rejects)
# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it
#      doesn't hurt to check since this sometimes defines pthreads and
#      -D_REENTRANT too), HP C (must be checked before -lpthread, which
#      is present but should not be used directly; and before -mthreads,
#      because the compiler interprets this as "-mt" + "-hreads")
# -mthreads: Mingw32/gcc, Lynx/gcc
# pthread: Linux, etcetera
# --thread-safe: KAI C++
# pthread-config: use pthread-config program (for GNU Pth library)

case $host_os in

        freebsd*)

        # -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)
        # lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)

        ax_pthread_flags="-kthread lthread $ax_pthread_flags"
        ;;

        hpux*)

        # From the cc(1) man page: "[-mt] Sets various -D flags to enable
        # multi-threading and also sets -lpthread."

        ax_pthread_flags="-mt -pthread pthread $ax_pthread_flags"
        ;;

        openedition*)

        # IBM z/OS requires a feature-test macro to be defined in order to
        # enable POSIX threads at all, so give the user a hint if this is
        # not set. (We don't define these ourselves, as they can affect
        # other portions of the system API in unpredictable ways.)

        AC_EGREP_CPP([AX_PTHREAD_ZOS_MISSING],
            [
#            if !defined(_OPEN_THREADS) && !defined(_UNIX03_THREADS)
             AX_PTHREAD_ZOS_MISSING
#            endif
            ],
            [AC_MSG_WARN([IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support.])])
        ;;

        solaris*)

        # On Solaris (at least, for some versions), libc contains stubbed
        # (non-functional) versions of the pthreads routines, so link-based
        # tests will erroneously succeed. (N.B.: The stubs are missing
        # pthread_cleanup_push, or rather a function called by this macro,
        # so we could check for that, but who knows whether they'll stub
        # that too in a future libc.)  So we'll check first for the
        # standard Solaris way of linking pthreads (-mt -lpthread).

        ax_pthread_flags="-mt,pthread pthread $ax_pthread_flags"
        ;;
esac

# GCC generally uses -pthread, or -pthreads on some platforms (e.g. SPARC)

AS_IF([test "x$GCC" = "xyes"],
      [ax_pthread_flags="-pthread -pthreads $ax_pthread_flags"])

# The presence of a feature test macro requesting re-entrant function
# definitions is, on some systems, a strong hint that pthreads support is
# correctly enabled

case $host_os in
        darwin* | hpux* | linux* | osf* | solaris*)
        ax_pthread_check_macro="_REENTRANT"
        ;;

        aix*)
        ax_pthread_check_macro="_THREAD_SAFE"
        ;;

        *)
        ax_pthread_check_macro="--"
        ;;
esac
AS_IF([test "x$ax_pthread_check_macro" = "x--"],
      [ax_pthread_check_cond=0],
      [ax_pthread_check_cond="!defined($ax_pthread_check_macro)"])

# Are we compiling with Clang?

AC_CACHE_CHECK([whether $CC is Clang],
    [ax_cv_PTHREAD_CLANG],
    [ax_cv_PTHREAD_CLANG=no
     # Note that Autoconf sets GCC=yes for Clang as well as GCC
     if test "x$GCC" = "xyes"; then
        AC_EGREP_CPP([AX_PTHREAD_CC_IS_CLANG],
            [/* Note: Clang 2.7 lacks __clang_[a-z]+__ */
#            if defined(__clang__) && defined(__llvm__)
             AX_PTHREAD_CC_IS_CLANG
#            endif
            ],
            [ax_cv_PTHREAD_CLANG=yes])
     fi
    ])
ax_pthread_clang="$ax_cv_PTHREAD_CLANG"

ax_pthread_clang_warning=no

# Clang needs special handling, because older versions handle the -pthread
# option in a rather... idiosyncratic way

if test "x$ax_pthread_clang" = "xyes"; then

        # Clang takes -pthread; it has never supported any other flag

        # (Note 1: This will need to be revisited if a system that Clang
        # supports has POSIX threads in a separate library.  This tends not
        # to be the way of modern systems, but it's conceivable.)

        # (Note 2: On some systems, notably Darwin, -pthread is not needed
        # to get POSIX threads support; the API is always present and
        # active.  We could reasonably leave PTHREAD_CFLAGS empty.  But
        # -pthread does define _REENTRANT, and while the Darwin headers
        # ignore this macro, third-party headers might not.)

        PTHREAD_CFLAGS="-pthread"
        PTHREAD_LIBS=

        ax_pthread_ok=yes

        # However, older versions of Clang make a point of warning the user
        # that, in an invocation where only linking and no compilation is
        # taking place, the -pthread option has no effect ("argument unused
        # during compilation").  They expect -pthread to be passed in only
        # when source code is being compiled.
        #
        # Problem is, this is at odds with the way Automake and most other
        # C build frameworks function, which is that the same flags used in
        # compilation (CFLAGS) are also used in linking.  Many systems
        # supported by AX_PTHREAD require exactly this for POSIX threads
        # support, and in fact it is often not straightforward to specify a
        # flag that is used only in the compilation phase and not in
        # linking.  Such a scenario is extremely rare in practice.
        #
        # Even though use of the -pthread flag in linking would only print
        # a warning, this can be a nuisance for well-run software projects
        # that build with -Werror.  So if the active version of Clang has
        # this misfeature, we search for an option to squash it.

        AC_CACHE_CHECK([whether Clang needs flag to prevent "argument unused" warning when linking with -pthread],
            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG],
            [ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=unknown
             # Create an alternate version of $ac_link that compiles and
             # links in two steps (.c -> .o, .o -> exe) instead of one
             # (.c -> exe), because the warning occurs only in the second
             # step
             ax_pthread_save_ac_link="$ac_link"
             ax_pthread_sed='s/conftest\.\$ac_ext/conftest.$ac_objext/g'
             ax_pthread_link_step=`$as_echo "$ac_link" | sed "$ax_pthread_sed"`
             ax_pthread_2step_ac_link="($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)"
             ax_pthread_save_CFLAGS="$CFLAGS"
             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do
                AS_IF([test "x$ax_pthread_try" = "xunknown"], [break])
                CFLAGS="-Werror -Wunknown-warning-option $ax_pthread_try -pthread $ax_pthread_save_CFLAGS"
                ac_link="$ax_pthread_save_ac_link"
                AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],
                    [ac_link="$ax_pthread_2step_ac_link"
                     AC_LINK_IFELSE([AC_LANG_SOURCE([[int main(void){return 0;}]])],
                         [break])
                    ])
             done
             ac_link="$ax_pthread_save_ac_link"
             CFLAGS="$ax_pthread_save_CFLAGS"
             AS_IF([test "x$ax_pthread_try" = "x"], [ax_pthread_try=no])
             ax_cv_PTHREAD_CLANG_NO_WARN_FLAG="$ax_pthread_try"
            ])

        case "$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG" in
                no | unknown) ;;
                *) PTHREAD_CFLAGS="$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG $PTHREAD_CFLAGS" ;;
        esac

fi # $ax_pthread_clang = yes

if test "x$ax_pthread_ok" = "xno"; then
for ax_pthread_try_flag in $ax_pthread_flags; do

        case $ax_pthread_try_flag in
                none)
                AC_MSG_CHECKING([whether pthreads work without any flags])
                ;;

                -mt,pthread)
                AC_MSG_CHECKING([whether pthreads work with -mt -lpthread])
                PTHREAD_CFLAGS="-mt"
                PTHREAD_LIBS="-lpthread"
                ;;

                -*)
                AC_MSG_CHECKING([whether pthreads work with $ax_pthread_try_flag])
                PTHREAD_CFLAGS="$ax_pthread_try_flag"
                ;;

                pthread-config)
                AC_CHECK_PROG([ax_pthread_config], [pthread-config], [yes], [no])
                AS_IF([test "x$ax_pthread_config" = "xno"], [continue])
                PTHREAD_CFLAGS="`pthread-config --cflags`"
                PTHREAD_LIBS="`pthread-config --ldflags` `pthread-config --libs`"
                ;;

                *)
                AC_MSG_CHECKING([for the pthreads library -l$ax_pthread_try_flag])
                PTHREAD_LIBS="-l$ax_pthread_try_flag"
                ;;
        esac

        ax_pthread_save_CFLAGS="$CFLAGS"
        ax_pthread_save_LIBS="$LIBS"
        CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
        LIBS="$PTHREAD_LIBS $LIBS"

        # Check for various functions.  We must include pthread.h,
        # since some functions may be macros.  (On the Sequent, we
        # need a special flag -Kthread to make this header compile.)
        # We check for pthread_join because it is in -lpthread on IRIX
        # while pthread_create is in libc.  We check for pthread_attr_init
        # due to DEC craziness with -lpthreads.  We check for
        # pthread_cleanup_push because it is one of the few pthread
        # functions on Solaris that doesn't have a non-functional libc stub.
        # We try pthread_create on general principles.

        AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>
#                       if $ax_pthread_check_cond
#                        error "$ax_pthread_check_macro must be defined"
#                       endif
                        static void routine(void *a) { a = 0; }
                        static void *start_routine(void *a) { return a; }],
                       [pthread_t th; pthread_attr_t attr;
                        pthread_create(&th, 0, start_routine, 0);
                        pthread_join(th, 0);
                        pthread_attr_init(&attr);
                        pthread_cleanup_push(routine, 0);
                        pthread_cleanup_pop(0) /* ; */])],
            [ax_pthread_ok=yes],
            [])

        CFLAGS="$ax_pthread_save_CFLAGS"
        LIBS="$ax_pthread_save_LIBS"

        AC_MSG_RESULT([$ax_pthread_ok])
        AS_IF([test "x$ax_pthread_ok" = "xyes"], [break])

        PTHREAD_LIBS=""
        PTHREAD_CFLAGS=""
done
fi

# Various other checks:
if test "x$ax_pthread_ok" = "xyes"; then
        ax_pthread_save_CFLAGS="$CFLAGS"
        ax_pthread_save_LIBS="$LIBS"
        CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
        LIBS="$PTHREAD_LIBS $LIBS"

        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.
        AC_CACHE_CHECK([for joinable pthread attribute],
            [ax_cv_PTHREAD_JOINABLE_ATTR],
            [ax_cv_PTHREAD_JOINABLE_ATTR=unknown
             for ax_pthread_attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do
                 AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>],
                                                 [int attr = $ax_pthread_attr; return attr /* ; */])],
                                [ax_cv_PTHREAD_JOINABLE_ATTR=$ax_pthread_attr; break],
                                [])
             done
            ])
        AS_IF([test "x$ax_cv_PTHREAD_JOINABLE_ATTR" != "xunknown" && \
               test "x$ax_cv_PTHREAD_JOINABLE_ATTR" != "xPTHREAD_CREATE_JOINABLE" && \
               test "x$ax_pthread_joinable_attr_defined" != "xyes"],
              [AC_DEFINE_UNQUOTED([PTHREAD_CREATE_JOINABLE],
                                  [$ax_cv_PTHREAD_JOINABLE_ATTR],
                                  [Define to necessary symbol if this constant
                                   uses a non-standard name on your system.])
               ax_pthread_joinable_attr_defined=yes
              ])

        AC_CACHE_CHECK([whether more special flags are required for pthreads],
            [ax_cv_PTHREAD_SPECIAL_FLAGS],
            [ax_cv_PTHREAD_SPECIAL_FLAGS=no
             case $host_os in
             solaris*)
             ax_cv_PTHREAD_SPECIAL_FLAGS="-D_POSIX_PTHREAD_SEMANTICS"
             ;;
             esac
            ])
        AS_IF([test "x$ax_cv_PTHREAD_SPECIAL_FLAGS" != "xno" && \
               test "x$ax_pthread_special_flags_added" != "xyes"],
              [PTHREAD_CFLAGS="$ax_cv_PTHREAD_SPECIAL_FLAGS $PTHREAD_CFLAGS"
               ax_pthread_special_flags_added=yes])

        AC_CACHE_CHECK([for PTHREAD_PRIO_INHERIT],
            [ax_cv_PTHREAD_PRIO_INHERIT],
            [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <pthread.h>]],
                                             [[int i = PTHREAD_PRIO_INHERIT;]])],
                            [ax_cv_PTHREAD_PRIO_INHERIT=yes],
                            [ax_cv_PTHREAD_PRIO_INHERIT=no])
            ])
        AS_IF([test "x$ax_cv_PTHREAD_PRIO_INHERIT" = "xyes" && \
               test "x$ax_pthread_prio_inherit_defined" != "xyes"],
              [AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], [1], [Have PTHREAD_PRIO_INHERIT.])
               ax_pthread_prio_inherit_defined=yes
              ])

        CFLAGS="$ax_pthread_save_CFLAGS"
        LIBS="$ax_pthread_save_LIBS"

        # More AIX lossage: compile with *_r variant
        if test "x$GCC" != "xyes"; then
            case $host_os in
                aix*)
                AS_CASE(["x/$CC"],
                    [x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6],
                    [#handle absolute path differently from PATH based program lookup
                     AS_CASE(["x$CC"],
                         [x/*],
                         [AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC="${CC}_r"])],
                         [AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])])])
                ;;
            esac
        fi
fi

test -n "$PTHREAD_CC" || PTHREAD_CC="$CC"

AC_SUBST([PTHREAD_LIBS])
AC_SUBST([PTHREAD_CFLAGS])
AC_SUBST([PTHREAD_CC])

# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
if test "x$ax_pthread_ok" = "xyes"; then
        ifelse([$1],,[AC_DEFINE([HAVE_PTHREAD],[1],[Define if you have POSIX threads libraries and header files.])],[$1])
        :
else
        ax_pthread_ok=no
        $2
fi
AC_LANG_POP
])
m4trace:m4/ax_require_defined.m4:35: -1- AC_DEFUN([AX_REQUIRE_DEFINED], [dnl
  m4_ifndef([$1], [m4_fatal([macro ]$1[ is not defined; is a m4 file missing?])])
])
m4trace:m4/libwrap.m4:6: -1- AC_DEFUN([AC_CHECK_LIBWRAP], [
	AC_CHECK_HEADERS([tcpd.h],
		AC_CHECK_LIB([wrap], [request_init],
			[LIBWRAP_CFLAGS=""
			LIBWRAP_LDFLAGS="-lwrap"
			$1],
			$2),
		$2)
])
m4trace:m4/mpd_auto.m4:2: -1- AC_DEFUN([MPD_AUTO_ENABLED], [
	if test x$[]enable_$1 = xauto; then
		AC_MSG_NOTICE([auto-detected $2])
		enable_$1=yes
	fi
])
m4trace:m4/mpd_auto.m4:10: -1- AC_DEFUN([MPD_AUTO_DISABLED], [
	if test x$[]enable_$1 = xauto; then
		AC_MSG_WARN([$3 -- disabling $2])
		enable_$1=no
	elif test x$[]enable_$1 = xyes; then
		AC_MSG_ERROR([$2: $3])
	fi
])
m4trace:m4/mpd_auto.m4:22: -1- AC_DEFUN([MPD_AUTO_PRE], [
	if test x$[]enable_$1 != xno && test x$[]found_$1 = xno; then
                MPD_AUTO_DISABLED([$1], [$2], [$3])
	fi
])
m4trace:m4/mpd_auto.m4:32: -1- AC_DEFUN([MPD_AUTO_RESULT], [
	if test x$[]enable_$1 = xno; then
		found_$1=no
	fi

	if test x$[]found_$1 = xyes; then
                MPD_AUTO_ENABLED([$1], [$2])
	else
                MPD_AUTO_DISABLED([$1], [$2], [$3])
	fi
])
m4trace:m4/mpd_auto.m4:48: -1- AC_DEFUN([MPD_AUTO], [
	if test x$[]enable_$1 != xno; then
		$4
	fi
	MPD_AUTO_RESULT([$1], [$2], [$3])
])
m4trace:m4/mpd_auto.m4:58: -1- AC_DEFUN([MPD_AUTO_PKG], [
	MPD_AUTO([$1], [$4], [$5],
		[PKG_CHECK_MODULES([$2], [$3],
			[found_$1=yes],
			[found_$1=no])])
])
m4trace:m4/mpd_auto.m4:68: -1- AC_DEFUN([MPD_AUTO_PKG_LIB], [
	MPD_AUTO([$1], [$8], [$9],
		[PKG_CHECK_MODULES([$2], [$3],
			[found_$1=yes],
			AC_CHECK_LIB($4, $5,
				[found_$1=yes $2_LIBS='$6' $2_CFLAGS='$7'],
				[found_$1=no],
				[$6]))])
])
m4trace:m4/mpd_auto.m4:81: -1- AC_DEFUN([MPD_AUTO_LIB], [
	AC_SUBST([$2_LIBS], [])
	AC_SUBST([$2_CFLAGS], [])

	MPD_AUTO([$1], [$7], [$8],
		[AC_CHECK_LIB($3, $4,
			[found_$1=yes $2_LIBS='$5' $2_CFLAGS='$6'],
			[found_$1=no],
			[$5])])
])
m4trace:m4/mpd_auto.m4:95: -1- AC_DEFUN([MPD_AUTO_HEADER], [
	AC_SUBST([$2_LIBS], [])
	AC_SUBST([$2_CFLAGS], [])

	MPD_AUTO([$1], [$6], [$7],
		[AC_CHECK_HEADER([$3],
			[found_$1=yes $2_LIBS='$4' $2_CFLAGS='$5'],
			[found_$1=no])])
])
m4trace:m4/mpd_auto.m4:111: -1- AC_DEFUN([MPD_FORMAT_DEFAULT], [ifelse([$1], [], [auto],
		index([$1], [$]), [-1], [$1],
		[auto])])
m4trace:m4/mpd_auto.m4:119: -1- AC_DEFUN([MPD_ARG_ENABLE], [
	AC_ARG_ENABLE(translit([$1], [_], [-]),
		AS_HELP_STRING([--enable-]translit([$1], [_], [-]),
			[enable $3 (default: ]MPD_FORMAT_DEFAULT([$4])[)]),,
		[enable_$1=]ifelse([$4], [], [auto], [$4]))

	$5

	MPD_DEFINE_CONDITIONAL(enable_$1, ENABLE_$2, [$3])
])
m4trace:m4/mpd_auto.m4:133: -1- AC_DEFUN([MPD_ENABLE_AUTO], [
	MPD_ARG_ENABLE([$1], [$2], [$3], [$5], [
		MPD_AUTO([$1], [$3], [$4], [$6])
	])
])
m4trace:m4/mpd_auto.m4:142: -1- AC_DEFUN([MPD_ENABLE_AUTO_PKG], [
	MPD_ARG_ENABLE([$1], [$2], [$4], [$6], [
		$7
		MPD_AUTO_PKG($1, $2, $3, $4, $5)
	])
])
m4trace:m4/mpd_auto.m4:152: -1- AC_DEFUN([MPD_ENABLE_AUTO_PKG_LIB], [
	MPD_ARG_ENABLE([$1], [$2], [$8], [$10], [
		$11
		MPD_AUTO_PKG_LIB($1, $2, $3, $4, $5, $6, $7, $8, $9)
	])
])
m4trace:m4/mpd_auto.m4:162: -1- AC_DEFUN([MPD_ENABLE_AUTO_LIB], [
	MPD_ARG_ENABLE([$1], [$2], [$7], [$9], [
		$10
		MPD_AUTO_LIB($1, $2, $3, $4, $5, $6, $7, $8)
	])
])
m4trace:m4/mpd_auto.m4:172: -1- AC_DEFUN([MPD_ENABLE_AUTO_HEADER], [
	MPD_ARG_ENABLE([$1], [$2], [$6], [$8], [
		$9
		MPD_AUTO_HEADER($1, $2, $3, $4, $5, $6, $7)
	])
])
m4trace:m4/mpd_auto.m4:182: -1- AC_DEFUN([MPD_ENABLE_AUTO_PKG_DEPENDS], [
	MPD_ENABLE_AUTO_PKG([$1], [$2], [$3], [$4], [$5], [$6],
		[MPD_DEPENDS([enable_$1], [$7], [$8])])
])
m4trace:m4/mpd_define_conditional.m4:4: -1- AC_DEFUN([MPD_DEFINE_CONDITIONAL], [dnl
	AM_CONDITIONAL($2, test x$[]$1 = xyes)
	if test x$[]$1 = xyes; then
		AC_DEFINE($2, 1, [Define to enable $3])
	fi])
m4trace:m4/mpd_depends.m4:1: -1- AC_DEFUN([MPD_DEPENDS], [
	if test x$$2 = xno; then
		if test x$$1 = xauto; then
			$1=no
		elif test x$$1 = xyes; then
			AC_MSG_ERROR([$3])
		fi
	fi
])
m4trace:m4/mpd_func.m4:5: -1- AC_DEFUN([MPD_OPTIONAL_FUNC], [
	AC_ARG_ENABLE([$1],
		AS_HELP_STRING([--enable-$1],
			[use the function "$1" (default: auto)]),
		[test x$[]enable_$1 = xyes && AC_DEFINE([$3], 1, [Define to use $1])],
		[AC_CHECK_FUNC([$2],
			[AC_DEFINE([$3], 1, [Define to use $1])],)])
])
m4trace:m4/mpd_func.m4:20: -1- AC_DEFUN([MPD_OPTIONAL_FUNC_NODEF], [
	AC_ARG_ENABLE([$1],
		AS_HELP_STRING([--enable-$1],
			[use the function "$1" (default: auto)]),,
		[AC_CHECK_FUNC([$2], [enable_$1=yes],)])
])
m4trace:m4/mpd_with_flags.m4:5: -1- AC_DEFUN([MPD_WITH_FLAGS], [
	ac_save_CFLAGS="$[]CFLAGS"
	ac_save_CXXFLAGS="$[]CXXFLAGS"
	ac_save_LIBS="$[]LIBS"
	CFLAGS="$[]CFLAGS $1"
	CXXFLAGS="$[]CXXFLAGS $1"
	LIBS="$[]LIBS $2"
	$3
	CFLAGS="$[]ac_save_CFLAGS"
	CXXFLAGS="$[]ac_save_CXXFLAGS"
	LIBS="$[]ac_save_LIBS"
])
m4trace:m4/mpd_with_flags.m4:22: -1- AC_DEFUN([MPD_WITH_LIBRARY], [MPD_WITH_FLAGS([$[]$1_CFLAGS], [$[]$1_LIBS], [$2])])
m4trace:m4/pkg.m4:58: -1- AC_DEFUN([PKG_PROG_PKG_CONFIG], [m4_pattern_forbid([^_?PKG_[A-Z_]+$])
m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])
m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])
AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])
AC_ARG_VAR([PKG_CONFIG_PATH], [directories to add to pkg-config's search path])
AC_ARG_VAR([PKG_CONFIG_LIBDIR], [path overriding pkg-config's built-in search path])

if test "x$ac_cv_env_PKG_CONFIG_set" != "xset"; then
	AC_PATH_TOOL([PKG_CONFIG], [pkg-config])
fi
if test -n "$PKG_CONFIG"; then
	_pkg_min_version=m4_default([$1], [0.9.0])
	AC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])
	if $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then
		AC_MSG_RESULT([yes])
	else
		AC_MSG_RESULT([no])
		PKG_CONFIG=""
	fi
fi[]dnl
])
m4trace:m4/pkg.m4:92: -1- AC_DEFUN([PKG_CHECK_EXISTS], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
if test -n "$PKG_CONFIG" && \
    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors "$1"]); then
  m4_default([$2], [:])
m4_ifvaln([$3], [else
  $3])dnl
fi])
m4trace:m4/pkg.m4:121: -1- AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])
if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
        _pkg_short_errors_supported=yes
else
        _pkg_short_errors_supported=no
fi[]dnl
])
m4trace:m4/pkg.m4:139: -1- AC_DEFUN([PKG_CHECK_MODULES], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl
AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl

pkg_failed=no
AC_MSG_CHECKING([for $1])

_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])
_PKG_CONFIG([$1][_LIBS], [libs], [$2])

m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS
and $1[]_LIBS to avoid the need to call pkg-config.
See the pkg-config man page for more details.])

if test $pkg_failed = yes; then
   	AC_MSG_RESULT([no])
        _PKG_SHORT_ERRORS_SUPPORTED
        if test $_pkg_short_errors_supported = yes; then
	        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "$2" 2>&1`
        else 
	        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "$2" 2>&1`
        fi
	# Put the nasty error message in config.log where it belongs
	echo "$$1[]_PKG_ERRORS" >&AS_MESSAGE_LOG_FD

	m4_default([$4], [AC_MSG_ERROR(
[Package requirements ($2) were not met:

$$1_PKG_ERRORS

Consider adjusting the PKG_CONFIG_PATH environment variable if you
installed software in a non-standard prefix.

_PKG_TEXT])[]dnl
        ])
elif test $pkg_failed = untried; then
     	AC_MSG_RESULT([no])
	m4_default([$4], [AC_MSG_FAILURE(
[The pkg-config script could not be found or is too old.  Make sure it
is in your PATH or set the PKG_CONFIG environment variable to the full
path to pkg-config.

_PKG_TEXT

To get pkg-config, see <http://pkg-config.freedesktop.org/>.])[]dnl
        ])
else
	$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS
	$1[]_LIBS=$pkg_cv_[]$1[]_LIBS
        AC_MSG_RESULT([yes])
	$3
fi[]dnl
])
m4trace:m4/pkg.m4:208: -1- AC_DEFUN([PKG_CHECK_MODULES_STATIC], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
_save_PKG_CONFIG=$PKG_CONFIG
PKG_CONFIG="$PKG_CONFIG --static"
PKG_CHECK_MODULES($@)
PKG_CONFIG=$_save_PKG_CONFIG[]dnl
])
m4trace:m4/pkg.m4:226: -1- AC_DEFUN([PKG_INSTALLDIR], [m4_pushdef([pkg_default], [m4_default([$1], ['${libdir}/pkgconfig'])])
m4_pushdef([pkg_description],
    [pkg-config installation directory @<:@]pkg_default[@:>@])
AC_ARG_WITH([pkgconfigdir],
    [AS_HELP_STRING([--with-pkgconfigdir], pkg_description)],,
    [with_pkgconfigdir=]pkg_default)
AC_SUBST([pkgconfigdir], [$with_pkgconfigdir])
m4_popdef([pkg_default])
m4_popdef([pkg_description])
])
m4trace:m4/pkg.m4:248: -1- AC_DEFUN([PKG_NOARCH_INSTALLDIR], [m4_pushdef([pkg_default], [m4_default([$1], ['${datadir}/pkgconfig'])])
m4_pushdef([pkg_description],
    [pkg-config arch-independent installation directory @<:@]pkg_default[@:>@])
AC_ARG_WITH([noarch-pkgconfigdir],
    [AS_HELP_STRING([--with-noarch-pkgconfigdir], pkg_description)],,
    [with_noarch_pkgconfigdir=]pkg_default)
AC_SUBST([noarch_pkgconfigdir], [$with_noarch_pkgconfigdir])
m4_popdef([pkg_default])
m4_popdef([pkg_description])
])
m4trace:m4/pkg.m4:267: -1- AC_DEFUN([PKG_CHECK_VAR], [AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
AC_ARG_VAR([$1], [value of $3 for $2, overriding pkg-config])dnl

_PKG_CONFIG([$1], [variable="][$3]["], [$2])
AS_VAR_COPY([$1], [pkg_cv_][$1])

AS_VAR_IF([$1], [""], [$5], [$4])dnl
])
m4trace:m4/pretty_print.m4:1: -1- AC_DEFUN([results], [
	printf '('
	if test x$[]enable_$1 = xyes; then
		printf '+'
	else
		printf '-'
	fi
	printf '%s) ' "$2"
])
m4trace:m4/ucred.m4:5: -1- AC_DEFUN([STRUCT_UCRED], [
	AC_MSG_CHECKING([for struct ucred])
	AC_CACHE_VAL(mpd_cv_have_struct_ucred, [
		AC_TRY_COMPILE([#include <sys/socket.h>],
			[struct ucred cred;],
			mpd_cv_have_struct_ucred=yes,
			mpd_cv_have_struct_ucred=no)
		])

	AC_MSG_RESULT($mpd_cv_have_struct_ucred)
	if test x$mpd_cv_have_struct_ucred = xyes; then
		AC_DEFINE(HAVE_STRUCT_UCRED, 1, [Define if struct ucred is present from sys/socket.h])
	fi
])
m4trace:configure.ac:3: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:3: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:3: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:3: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:3: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:3: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:3: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:3: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^runstatedir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:12: -1- AM_INIT_AUTOMAKE([foreign 1.11 dist-xz subdir-objects])
m4trace:configure.ac:12: -1- m4_pattern_allow([^AM_[A-Z]+FLAGS$])
m4trace:configure.ac:12: -1- AM_SET_CURRENT_AUTOMAKE_VERSION
m4trace:configure.ac:12: -1- AM_AUTOMAKE_VERSION([1.15])
m4trace:configure.ac:12: -1- _AM_AUTOCONF_VERSION([2.69])
m4trace:configure.ac:12: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^am__isrc$])
m4trace:configure.ac:12: -1- _AM_SUBST_NOTMAKE([am__isrc])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CYGPATH_W$])
m4trace:configure.ac:12: -1- _AM_SET_OPTIONS([foreign 1.11 dist-xz subdir-objects])
m4trace:configure.ac:12: -1- _AM_SET_OPTION([foreign])
m4trace:configure.ac:12: -2- _AM_MANGLE_OPTION([foreign])
m4trace:configure.ac:12: -1- _AM_SET_OPTION([1.11])
m4trace:configure.ac:12: -2- _AM_MANGLE_OPTION([1.11])
m4trace:configure.ac:12: -1- _AM_SET_OPTION([dist-xz])
m4trace:configure.ac:12: -2- _AM_MANGLE_OPTION([dist-xz])
m4trace:configure.ac:12: -1- _AM_SET_OPTION([subdir-objects])
m4trace:configure.ac:12: -2- _AM_MANGLE_OPTION([subdir-objects])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:12: -1- _AM_IF_OPTION([no-define], [], [AC_DEFINE_UNQUOTED([PACKAGE], ["$PACKAGE"], [Name of package])
 AC_DEFINE_UNQUOTED([VERSION], ["$VERSION"], [Version number of package])])
m4trace:configure.ac:12: -2- _AM_MANGLE_OPTION([no-define])
m4trace:configure.ac:12: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:12: -1- AM_SANITY_CHECK
m4trace:configure.ac:12: -1- AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
m4trace:configure.ac:12: -1- AM_MISSING_HAS_RUN
m4trace:configure.ac:12: -1- AM_AUX_DIR_EXPAND
m4trace:configure.ac:12: -1- m4_pattern_allow([^ACLOCAL$])
m4trace:configure.ac:12: -1- AM_MISSING_PROG([AUTOCONF], [autoconf])
m4trace:configure.ac:12: -1- m4_pattern_allow([^AUTOCONF$])
m4trace:configure.ac:12: -1- AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
m4trace:configure.ac:12: -1- m4_pattern_allow([^AUTOMAKE$])
m4trace:configure.ac:12: -1- AM_MISSING_PROG([AUTOHEADER], [autoheader])
m4trace:configure.ac:12: -1- m4_pattern_allow([^AUTOHEADER$])
m4trace:configure.ac:12: -1- AM_MISSING_PROG([MAKEINFO], [makeinfo])
m4trace:configure.ac:12: -1- m4_pattern_allow([^MAKEINFO$])
m4trace:configure.ac:12: -1- AM_PROG_INSTALL_SH
m4trace:configure.ac:12: -1- m4_pattern_allow([^install_sh$])
m4trace:configure.ac:12: -1- AM_PROG_INSTALL_STRIP
m4trace:configure.ac:12: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^INSTALL_STRIP_PROGRAM$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^MKDIR_P$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^mkdir_p$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:12: -1- AM_SET_LEADING_DOT
m4trace:configure.ac:12: -1- m4_pattern_allow([^am__leading_dot$])
m4trace:configure.ac:12: -1- _AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])], [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
m4trace:configure.ac:12: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:12: -1- _AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])], [_AM_PROG_TAR([v7])])
m4trace:configure.ac:12: -2- _AM_MANGLE_OPTION([tar-pax])
m4trace:configure.ac:12: -1- _AM_PROG_TAR([v7])
m4trace:configure.ac:12: -1- m4_pattern_allow([^AMTAR$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^am__tar$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^am__untar$])
m4trace:configure.ac:12: -1- _AM_IF_OPTION([no-dependencies], [], [AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES([CC])],
		  [m4_define([AC_PROG_CC],
			     m4_defn([AC_PROG_CC])[_AM_DEPENDENCIES([CC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES([CXX])],
		  [m4_define([AC_PROG_CXX],
			     m4_defn([AC_PROG_CXX])[_AM_DEPENDENCIES([CXX])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES([OBJC])],
		  [m4_define([AC_PROG_OBJC],
			     m4_defn([AC_PROG_OBJC])[_AM_DEPENDENCIES([OBJC])])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJCXX],
		  [_AM_DEPENDENCIES([OBJCXX])],
		  [m4_define([AC_PROG_OBJCXX],
			     m4_defn([AC_PROG_OBJCXX])[_AM_DEPENDENCIES([OBJCXX])])])dnl
])
m4trace:configure.ac:12: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:12: -1- AM_SILENT_RULES
m4trace:configure.ac:12: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:12: -1- AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:12: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:12: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:12: -1- AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:12: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:12: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:12: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:13: -1- AM_SILENT_RULES
m4trace:configure.ac:13: -1- m4_pattern_allow([^AM_V$])
m4trace:configure.ac:13: -1- AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:13: -1- _AM_SUBST_NOTMAKE([AM_V])
m4trace:configure.ac:13: -1- m4_pattern_allow([^AM_DEFAULT_V$])
m4trace:configure.ac:13: -1- AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:13: -1- _AM_SUBST_NOTMAKE([AM_DEFAULT_V])
m4trace:configure.ac:13: -1- m4_pattern_allow([^AM_DEFAULT_VERBOSITY$])
m4trace:configure.ac:13: -1- m4_pattern_allow([^AM_BACKSLASH$])
m4trace:configure.ac:13: -1- _AM_SUBST_NOTMAKE([AM_BACKSLASH])
m4trace:configure.ac:15: -1- AC_CONFIG_MACRO_DIR([m4])
m4trace:configure.ac:17: -1- m4_pattern_allow([^PROTOCOL_VERSION$])
m4trace:configure.ac:21: -1- m4_pattern_allow([^GIT_COMMIT$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:27: -1- _AM_PROG_CC_C_O
m4trace:configure.ac:27: -1- AM_RUN_LOG([$CC -c conftest.$ac_ext -o conftest2.$ac_objext])
m4trace:configure.ac:27: -1- _AM_DEPENDENCIES([CC])
m4trace:configure.ac:27: -1- AM_SET_DEPDIR
m4trace:configure.ac:27: -1- m4_pattern_allow([^DEPDIR$])
m4trace:configure.ac:27: -1- AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:27: -1- AM_MAKE_INCLUDE
m4trace:configure.ac:27: -1- m4_pattern_allow([^am__include$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^am__quote$])
m4trace:configure.ac:27: -1- AM_DEP_TRACK
m4trace:configure.ac:27: -1- AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
m4trace:configure.ac:27: -1- m4_pattern_allow([^AMDEP_TRUE$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^AMDEP_FALSE$])
m4trace:configure.ac:27: -1- _AM_SUBST_NOTMAKE([AMDEP_TRUE])
m4trace:configure.ac:27: -1- _AM_SUBST_NOTMAKE([AMDEP_FALSE])
m4trace:configure.ac:27: -1- m4_pattern_allow([^AMDEPBACKSLASH$])
m4trace:configure.ac:27: -1- _AM_SUBST_NOTMAKE([AMDEPBACKSLASH])
m4trace:configure.ac:27: -1- m4_pattern_allow([^am__nodep$])
m4trace:configure.ac:27: -1- _AM_SUBST_NOTMAKE([am__nodep])
m4trace:configure.ac:27: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:configure.ac:27: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:27: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:27: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:27: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:27: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:28: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^CXXFLAGS$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^ac_ct_CXX$])
m4trace:configure.ac:28: -1- _AM_DEPENDENCIES([CXX])
m4trace:configure.ac:28: -1- m4_pattern_allow([^CXXDEPMODE$])
m4trace:configure.ac:28: -1- AM_CONDITIONAL([am__fastdepCXX], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CXX_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:28: -1- m4_pattern_allow([^am__fastdepCXX_TRUE$])
m4trace:configure.ac:28: -1- m4_pattern_allow([^am__fastdepCXX_FALSE$])
m4trace:configure.ac:28: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_TRUE])
m4trace:configure.ac:28: -1- _AM_SUBST_NOTMAKE([am__fastdepCXX_FALSE])
m4trace:configure.ac:29: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:33: -1- AC_DEFUN([AC_PROG_AR], [AC_CHECK_TOOL(AR, ar, :)])
m4trace:configure.ac:34: -1- AC_PROG_AR
m4trace:configure.ac:34: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:37: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:38: -1- PKG_PROG_PKG_CONFIG
m4trace:configure.ac:38: -1- m4_pattern_forbid([^_?PKG_[A-Z_]+$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^PKG_CONFIG_PATH$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^PKG_CONFIG_LIBDIR$])
m4trace:configure.ac:38: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:configure.ac:51: -1- m4_pattern_allow([^systemdsystemunitdir$])
m4trace:configure.ac:53: -1- AM_CONDITIONAL([HAVE_SYSTEMD], [test -n "$with_systemdsystemunitdir" -a "x$with_systemdsystemunitdir" != xno ])
m4trace:configure.ac:53: -1- m4_pattern_allow([^HAVE_SYSTEMD_TRUE$])
m4trace:configure.ac:53: -1- m4_pattern_allow([^HAVE_SYSTEMD_FALSE$])
m4trace:configure.ac:53: -1- _AM_SUBST_NOTMAKE([HAVE_SYSTEMD_TRUE])
m4trace:configure.ac:53: -1- _AM_SUBST_NOTMAKE([HAVE_SYSTEMD_FALSE])
m4trace:configure.ac:67: -1- m4_pattern_allow([^systemduserunitdir$])
m4trace:configure.ac:69: -1- AM_CONDITIONAL([HAVE_SYSTEMD_USER], [test -n "$with_systemduserunitdir" -a "x$with_systemduserunitdir" != xno ])
m4trace:configure.ac:69: -1- m4_pattern_allow([^HAVE_SYSTEMD_USER_TRUE$])
m4trace:configure.ac:69: -1- m4_pattern_allow([^HAVE_SYSTEMD_USER_FALSE$])
m4trace:configure.ac:69: -1- _AM_SUBST_NOTMAKE([HAVE_SYSTEMD_USER_TRUE])
m4trace:configure.ac:69: -1- _AM_SUBST_NOTMAKE([HAVE_SYSTEMD_USER_FALSE])
m4trace:configure.ac:74: -1- m4_pattern_allow([^AM_CPPFLAGS$])
m4trace:configure.ac:75: -1- m4_pattern_allow([^AM_CFLAGS$])
m4trace:configure.ac:76: -1- m4_pattern_allow([^AM_CXXFLAGS$])
m4trace:configure.ac:79: -1- m4_pattern_allow([^VERSION_MAJOR$])
m4trace:configure.ac:80: -1- m4_pattern_allow([^VERSION_MINOR$])
m4trace:configure.ac:81: -1- m4_pattern_allow([^VERSION_REVISION$])
m4trace:configure.ac:82: -1- m4_pattern_allow([^VERSION_EXTRA$])
m4trace:configure.ac:87: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:87: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:87: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:87: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:87: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:87: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:87: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:87: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:118: -1- m4_pattern_allow([^WINDRES$])
m4trace:configure.ac:136: -1- m4_pattern_allow([^RC$])
m4trace:configure.ac:137: -1- m4_pattern_allow([^XRES$])
m4trace:configure.ac:141: -1- AM_CONDITIONAL([ANDROID], [test x$host_is_android = xyes])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ANDROID_TRUE$])
m4trace:configure.ac:141: -1- m4_pattern_allow([^ANDROID_FALSE$])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ANDROID_TRUE])
m4trace:configure.ac:141: -1- _AM_SUBST_NOTMAKE([ANDROID_FALSE])
m4trace:configure.ac:142: -1- AM_CONDITIONAL([HAVE_WINDOWS], [test x$host_is_windows = xyes])
m4trace:configure.ac:142: -1- m4_pattern_allow([^HAVE_WINDOWS_TRUE$])
m4trace:configure.ac:142: -1- m4_pattern_allow([^HAVE_WINDOWS_FALSE$])
m4trace:configure.ac:142: -1- _AM_SUBST_NOTMAKE([HAVE_WINDOWS_TRUE])
m4trace:configure.ac:142: -1- _AM_SUBST_NOTMAKE([HAVE_WINDOWS_FALSE])
m4trace:configure.ac:199: -1- m4_pattern_allow([^ANDROID_SDK$])
m4trace:configure.ac:205: -1- AX_CXX_COMPILE_STDCXX_14([noext], [mandatory])
m4trace:configure.ac:205: -1- AX_CXX_COMPILE_STDCXX([14], [noext], [mandatory])
m4trace:configure.ac:205: -1- m4_pattern_allow([^HAVE_CXX14$])
m4trace:configure.ac:205: -1- m4_pattern_allow([^HAVE_CXX14$])
m4trace:configure.ac:211: -1- AX_PTHREAD
m4trace:configure.ac:211: -1- m4_pattern_allow([^SED$])
m4trace:configure.ac:211: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:211: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:211: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:211: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:211: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:211: -1- m4_pattern_allow([^ax_pthread_config$])
m4trace:configure.ac:211: -1- m4_pattern_allow([^PTHREAD_CREATE_JOINABLE$])
m4trace:configure.ac:211: -1- m4_pattern_allow([^HAVE_PTHREAD_PRIO_INHERIT$])
m4trace:configure.ac:211: -1- m4_pattern_allow([^PTHREAD_CC$])
m4trace:configure.ac:211: -1- m4_pattern_allow([^PTHREAD_LIBS$])
m4trace:configure.ac:211: -1- m4_pattern_allow([^PTHREAD_CFLAGS$])
m4trace:configure.ac:211: -1- m4_pattern_allow([^PTHREAD_CC$])
m4trace:configure.ac:211: -1- m4_pattern_allow([^HAVE_PTHREAD$])
m4trace:configure.ac:216: -1- MPD_WITH_LIBRARY([PTHREAD], [AC_CHECK_FUNCS([pthread_setname_np])])
m4trace:configure.ac:216: -1- MPD_WITH_FLAGS([$[]PTHREAD_CFLAGS], [$[]PTHREAD_LIBS], [AC_CHECK_FUNCS([pthread_setname_np])])
m4trace:configure.ac:216: -1- m4_pattern_allow([^HAVE_PTHREAD_SETNAME_NP$])
m4trace:configure.ac:225: -1- MPD_AUTO([syslog], [syslog support], [syslog() not available], [AC_SEARCH_LIBS([syslog], [bsd socket inet],
		[found_syslog=yes],
		[found_syslog=no])])
m4trace:configure.ac:225: -1- MPD_AUTO_RESULT([syslog], [syslog support], [syslog() not available])
m4trace:configure.ac:225: -1- MPD_AUTO_ENABLED([syslog], [syslog support])
m4trace:configure.ac:225: -1- MPD_AUTO_DISABLED([syslog], [syslog support], [syslog() not available])
m4trace:configure.ac:230: -1- m4_pattern_allow([^HAVE_SYSLOG$])
m4trace:configure.ac:241: -1- m4_pattern_allow([^HAVE_INITGROUPS$])
m4trace:configure.ac:242: -1- m4_pattern_allow([^HAVE_FNMATCH$])
m4trace:configure.ac:243: -1- m4_pattern_allow([^HAVE_STRNDUP$])
m4trace:configure.ac:244: -1- m4_pattern_allow([^HAVE_STRCASESTR$])
m4trace:configure.ac:247: -1- MPD_OPTIONAL_FUNC([eventfd], [eventfd], [USE_EVENTFD])
m4trace:configure.ac:247: -1- m4_pattern_allow([^USE_EVENTFD$])
m4trace:configure.ac:247: -1- m4_pattern_allow([^USE_EVENTFD$])
m4trace:configure.ac:248: -1- MPD_OPTIONAL_FUNC([signalfd], [signalfd], [USE_SIGNALFD])
m4trace:configure.ac:248: -1- m4_pattern_allow([^USE_SIGNALFD$])
m4trace:configure.ac:248: -1- m4_pattern_allow([^USE_SIGNALFD$])
m4trace:configure.ac:254: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:254: -1- m4_pattern_allow([^HAVE_LOCALE_H$])
m4trace:configure.ac:255: -1- m4_pattern_allow([^HAVE_VALGRIND_MEMCHECK_H$])
m4trace:configure.ac:257: -2- m4_pattern_allow([^HAVE_PRCTL$])
m4trace:configure.ac:257: -1- m4_pattern_allow([^HAVE_SYS_PRCTL_H$])
m4trace:configure.ac:263: -1- MPD_OPTIONAL_FUNC_NODEF([poll], [poll])
m4trace:configure.ac:266: -1- MPD_OPTIONAL_FUNC_NODEF([epoll], [epoll_create1])
m4trace:configure.ac:288: -1- m4_pattern_allow([^USE_EPOLL$])
m4trace:configure.ac:291: -1- m4_pattern_allow([^USE_POLL$])
m4trace:configure.ac:294: -1- m4_pattern_allow([^USE_WINSELECT$])
m4trace:configure.ac:309: -1- MPD_DEFINE_CONDITIONAL([enable_database], [ENABLE_DATABASE], [the music database])
m4trace:configure.ac:309: -1- AM_CONDITIONAL([ENABLE_DATABASE], [test x$enable_database = xyes])
m4trace:configure.ac:309: -1- m4_pattern_allow([^ENABLE_DATABASE_TRUE$])
m4trace:configure.ac:309: -1- m4_pattern_allow([^ENABLE_DATABASE_FALSE$])
m4trace:configure.ac:309: -1- _AM_SUBST_NOTMAKE([ENABLE_DATABASE_TRUE])
m4trace:configure.ac:309: -1- _AM_SUBST_NOTMAKE([ENABLE_DATABASE_FALSE])
m4trace:configure.ac:309: -1- m4_pattern_allow([^ENABLE_DATABASE$])
m4trace:configure.ac:325: -1- MPD_DEFINE_CONDITIONAL([enable_daemon], [ENABLE_DAEMON], [Enable daemonization?])
m4trace:configure.ac:325: -1- AM_CONDITIONAL([ENABLE_DAEMON], [test x$enable_daemon = xyes])
m4trace:configure.ac:325: -1- m4_pattern_allow([^ENABLE_DAEMON_TRUE$])
m4trace:configure.ac:325: -1- m4_pattern_allow([^ENABLE_DAEMON_FALSE$])
m4trace:configure.ac:325: -1- _AM_SUBST_NOTMAKE([ENABLE_DAEMON_TRUE])
m4trace:configure.ac:325: -1- _AM_SUBST_NOTMAKE([ENABLE_DAEMON_FALSE])
m4trace:configure.ac:325: -1- m4_pattern_allow([^ENABLE_DAEMON$])
m4trace:configure.ac:362: -1- m4_pattern_allow([^_FILE_OFFSET_BITS$])
m4trace:configure.ac:362: -1- m4_pattern_allow([^_LARGE_FILES$])
m4trace:configure.ac:457: -1- AX_BOOST_BASE([1.54], [], [AC_MSG_ERROR([Boost not found])])
m4trace:configure.ac:457: -1- m4_pattern_allow([^BOOST_CPPFLAGS$])
m4trace:configure.ac:457: -1- m4_pattern_allow([^BOOST_LDFLAGS$])
m4trace:configure.ac:457: -1- m4_pattern_allow([^HAVE_BOOST$])
m4trace:configure.ac:464: -1- MPD_AUTO_PKG([icu], [ICU], [icu-i18n], [libicu], [libicu not found])
m4trace:configure.ac:464: -1- MPD_AUTO([icu], [libicu], [libicu not found], [PKG_CHECK_MODULES([ICU], [icu-i18n],
			[found_icu=yes],
			[found_icu=no])])
m4trace:configure.ac:464: -1- PKG_CHECK_MODULES([ICU], [icu-i18n], [found_icu=yes], [found_icu=no])
m4trace:configure.ac:464: -1- m4_pattern_allow([^ICU_CFLAGS$])
m4trace:configure.ac:464: -1- m4_pattern_allow([^ICU_LIBS$])
m4trace:configure.ac:464: -1- PKG_CHECK_EXISTS([icu-i18n], [pkg_cv_[]ICU_CFLAGS=`$PKG_CONFIG --[]cflags "icu-i18n" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:464: -1- PKG_CHECK_EXISTS([icu-i18n], [pkg_cv_[]ICU_LIBS=`$PKG_CONFIG --[]libs "icu-i18n" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:464: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:464: -1- MPD_AUTO_RESULT([icu], [libicu], [libicu not found])
m4trace:configure.ac:464: -1- MPD_AUTO_ENABLED([icu], [libicu])
m4trace:configure.ac:464: -1- MPD_AUTO_DISABLED([icu], [libicu], [libicu not found])
m4trace:configure.ac:465: -1- MPD_DEFINE_CONDITIONAL([enable_icu], [HAVE_ICU], [libicu])
m4trace:configure.ac:465: -1- AM_CONDITIONAL([HAVE_ICU], [test x$enable_icu = xyes])
m4trace:configure.ac:465: -1- m4_pattern_allow([^HAVE_ICU_TRUE$])
m4trace:configure.ac:465: -1- m4_pattern_allow([^HAVE_ICU_FALSE$])
m4trace:configure.ac:465: -1- _AM_SUBST_NOTMAKE([HAVE_ICU_TRUE])
m4trace:configure.ac:465: -1- _AM_SUBST_NOTMAKE([HAVE_ICU_FALSE])
m4trace:configure.ac:465: -1- m4_pattern_allow([^HAVE_ICU$])
m4trace:configure.ac:478: -1- m4_pattern_allow([^HAVE_ICONV$])
m4trace:configure.ac:507: -2- m4_pattern_allow([^HAVE_IPV6$])
m4trace:configure.ac:514: -1- m4_pattern_allow([^HAVE_TCP$])
m4trace:configure.ac:518: -1- m4_pattern_allow([^HAVE_UN$])
m4trace:configure.ac:519: -1- STRUCT_UCRED
m4trace:configure.ac:519: -1- _m4_warn([obsolete], [The macro `AC_TRY_COMPILE' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:2625: AC_TRY_COMPILE is expanded from...
../../lib/m4sugar/m4sh.m4:639: AS_IF is expanded from...
../../lib/autoconf/general.m4:2042: AC_CACHE_VAL is expanded from...
m4/ucred.m4:5: STRUCT_UCRED is expanded from...
configure.ac:519: the top level])
m4trace:configure.ac:519: -1- m4_pattern_allow([^HAVE_STRUCT_UCRED$])
m4trace:configure.ac:520: -1- m4_pattern_allow([^HAVE_GETPEEREID$])
m4trace:configure.ac:530: -1- MPD_ENABLE_AUTO([systemd_daemon], [SYSTEMD_DAEMON], [systemd socket activation], [libsystemd not found], [$linux_auto], [
	dnl Check for libsystemd and fall back to (the older)
	dnl libsystemd-daemon
	PKG_CHECK_MODULES([SYSTEMD_DAEMON], [libsystemd],
		[found_systemd_daemon=yes],
		[PKG_CHECK_MODULES([SYSTEMD_DAEMON], [libsystemd-daemon],
			[found_systemd_daemon=yes],
			[found_systemd_daemon=no])])
])
m4trace:configure.ac:530: -1- MPD_ARG_ENABLE([systemd_daemon], [SYSTEMD_DAEMON], [systemd socket activation], [$linux_auto], [
		MPD_AUTO([systemd_daemon], [systemd socket activation], [libsystemd not found], [
	dnl Check for libsystemd and fall back to (the older)
	dnl libsystemd-daemon
	PKG_CHECK_MODULES([SYSTEMD_DAEMON], [libsystemd],
		[found_systemd_daemon=yes],
		[PKG_CHECK_MODULES([SYSTEMD_DAEMON], [libsystemd-daemon],
			[found_systemd_daemon=yes],
			[found_systemd_daemon=no])])
])
	])
m4trace:configure.ac:530: -3- MPD_FORMAT_DEFAULT([$linux_auto])
m4trace:configure.ac:530: -1- MPD_AUTO([systemd_daemon], [systemd socket activation], [libsystemd not found], [
	dnl Check for libsystemd and fall back to (the older)
	dnl libsystemd-daemon
	PKG_CHECK_MODULES([SYSTEMD_DAEMON], [libsystemd],
		[found_systemd_daemon=yes],
		[PKG_CHECK_MODULES([SYSTEMD_DAEMON], [libsystemd-daemon],
			[found_systemd_daemon=yes],
			[found_systemd_daemon=no])])
])
m4trace:configure.ac:530: -1- PKG_CHECK_MODULES([SYSTEMD_DAEMON], [libsystemd], [found_systemd_daemon=yes], [PKG_CHECK_MODULES([SYSTEMD_DAEMON], [libsystemd-daemon],
			[found_systemd_daemon=yes],
			[found_systemd_daemon=no])])
m4trace:configure.ac:530: -1- m4_pattern_allow([^SYSTEMD_DAEMON_CFLAGS$])
m4trace:configure.ac:530: -1- m4_pattern_allow([^SYSTEMD_DAEMON_LIBS$])
m4trace:configure.ac:530: -1- PKG_CHECK_EXISTS([libsystemd], [pkg_cv_[]SYSTEMD_DAEMON_CFLAGS=`$PKG_CONFIG --[]cflags "libsystemd" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:530: -1- PKG_CHECK_EXISTS([libsystemd], [pkg_cv_[]SYSTEMD_DAEMON_LIBS=`$PKG_CONFIG --[]libs "libsystemd" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:530: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:530: -1- PKG_CHECK_MODULES([SYSTEMD_DAEMON], [libsystemd-daemon], [found_systemd_daemon=yes], [found_systemd_daemon=no])
m4trace:configure.ac:530: -1- m4_pattern_allow([^SYSTEMD_DAEMON_CFLAGS$])
m4trace:configure.ac:530: -1- m4_pattern_allow([^SYSTEMD_DAEMON_LIBS$])
m4trace:configure.ac:530: -1- PKG_CHECK_EXISTS([libsystemd-daemon], [pkg_cv_[]SYSTEMD_DAEMON_CFLAGS=`$PKG_CONFIG --[]cflags "libsystemd-daemon" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:530: -1- PKG_CHECK_EXISTS([libsystemd-daemon], [pkg_cv_[]SYSTEMD_DAEMON_LIBS=`$PKG_CONFIG --[]libs "libsystemd-daemon" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:530: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:530: -1- PKG_CHECK_MODULES([SYSTEMD_DAEMON], [libsystemd-daemon], [found_systemd_daemon=yes], [found_systemd_daemon=no])
m4trace:configure.ac:530: -1- m4_pattern_allow([^SYSTEMD_DAEMON_CFLAGS$])
m4trace:configure.ac:530: -1- m4_pattern_allow([^SYSTEMD_DAEMON_LIBS$])
m4trace:configure.ac:530: -1- PKG_CHECK_EXISTS([libsystemd-daemon], [pkg_cv_[]SYSTEMD_DAEMON_CFLAGS=`$PKG_CONFIG --[]cflags "libsystemd-daemon" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:530: -1- PKG_CHECK_EXISTS([libsystemd-daemon], [pkg_cv_[]SYSTEMD_DAEMON_LIBS=`$PKG_CONFIG --[]libs "libsystemd-daemon" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:530: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:530: -1- MPD_AUTO_RESULT([systemd_daemon], [systemd socket activation], [libsystemd not found])
m4trace:configure.ac:530: -1- MPD_AUTO_ENABLED([systemd_daemon], [systemd socket activation])
m4trace:configure.ac:530: -1- MPD_AUTO_DISABLED([systemd_daemon], [systemd socket activation], [libsystemd not found])
m4trace:configure.ac:530: -1- MPD_DEFINE_CONDITIONAL([enable_systemd_daemon], [ENABLE_SYSTEMD_DAEMON], [systemd socket activation])
m4trace:configure.ac:530: -1- AM_CONDITIONAL([ENABLE_SYSTEMD_DAEMON], [test x$enable_systemd_daemon = xyes])
m4trace:configure.ac:530: -1- m4_pattern_allow([^ENABLE_SYSTEMD_DAEMON_TRUE$])
m4trace:configure.ac:530: -1- m4_pattern_allow([^ENABLE_SYSTEMD_DAEMON_FALSE$])
m4trace:configure.ac:530: -1- _AM_SUBST_NOTMAKE([ENABLE_SYSTEMD_DAEMON_TRUE])
m4trace:configure.ac:530: -1- _AM_SUBST_NOTMAKE([ENABLE_SYSTEMD_DAEMON_FALSE])
m4trace:configure.ac:530: -1- m4_pattern_allow([^ENABLE_SYSTEMD_DAEMON$])
m4trace:configure.ac:545: -1- m4_pattern_allow([^ENABLE_LARGEFILE$])
m4trace:configure.ac:553: -1- MPD_ENABLE_AUTO_PKG_DEPENDS([libmpdclient], [LIBMPDCLIENT], [libmpdclient >= 2.2], [MPD client library], [libmpdclient not found], [], [enable_database], [Cannot use --enable-libmpdclient with --disable-database])
m4trace:configure.ac:553: -1- MPD_ENABLE_AUTO_PKG([libmpdclient], [LIBMPDCLIENT], [libmpdclient >= 2.2], [MPD client library], [libmpdclient not found], [], [MPD_DEPENDS([enable_libmpdclient], [enable_database], [Cannot use --enable-libmpdclient with --disable-database])])
m4trace:configure.ac:553: -1- MPD_ARG_ENABLE([libmpdclient], [LIBMPDCLIENT], [MPD client library], [], [
		MPD_DEPENDS([enable_libmpdclient], [enable_database], [Cannot use --enable-libmpdclient with --disable-database])
		MPD_AUTO_PKG(libmpdclient, LIBMPDCLIENT, libmpdclient >= 2.2, MPD client library, libmpdclient not found)
	])
m4trace:configure.ac:553: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:553: -1- MPD_DEPENDS([enable_libmpdclient], [enable_database], [Cannot use --enable-libmpdclient with --disable-database])
m4trace:configure.ac:553: -1- MPD_AUTO_PKG([libmpdclient], [LIBMPDCLIENT], [libmpdclient >= 2.2], [MPD client library], [libmpdclient not found])
m4trace:configure.ac:553: -1- MPD_AUTO([libmpdclient], [MPD client library], [libmpdclient not found], [PKG_CHECK_MODULES([LIBMPDCLIENT], [libmpdclient >= 2.2],
			[found_libmpdclient=yes],
			[found_libmpdclient=no])])
m4trace:configure.ac:553: -1- PKG_CHECK_MODULES([LIBMPDCLIENT], [libmpdclient >= 2.2], [found_libmpdclient=yes], [found_libmpdclient=no])
m4trace:configure.ac:553: -1- m4_pattern_allow([^LIBMPDCLIENT_CFLAGS$])
m4trace:configure.ac:553: -1- m4_pattern_allow([^LIBMPDCLIENT_LIBS$])
m4trace:configure.ac:553: -1- PKG_CHECK_EXISTS([libmpdclient >= 2.2], [pkg_cv_[]LIBMPDCLIENT_CFLAGS=`$PKG_CONFIG --[]cflags "libmpdclient >= 2.2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:553: -1- PKG_CHECK_EXISTS([libmpdclient >= 2.2], [pkg_cv_[]LIBMPDCLIENT_LIBS=`$PKG_CONFIG --[]libs "libmpdclient >= 2.2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:553: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:553: -1- MPD_AUTO_RESULT([libmpdclient], [MPD client library], [libmpdclient not found])
m4trace:configure.ac:553: -1- MPD_AUTO_ENABLED([libmpdclient], [MPD client library])
m4trace:configure.ac:553: -1- MPD_AUTO_DISABLED([libmpdclient], [MPD client library], [libmpdclient not found])
m4trace:configure.ac:553: -1- MPD_DEFINE_CONDITIONAL([enable_libmpdclient], [ENABLE_LIBMPDCLIENT], [MPD client library])
m4trace:configure.ac:553: -1- AM_CONDITIONAL([ENABLE_LIBMPDCLIENT], [test x$enable_libmpdclient = xyes])
m4trace:configure.ac:553: -1- m4_pattern_allow([^ENABLE_LIBMPDCLIENT_TRUE$])
m4trace:configure.ac:553: -1- m4_pattern_allow([^ENABLE_LIBMPDCLIENT_FALSE$])
m4trace:configure.ac:553: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBMPDCLIENT_TRUE])
m4trace:configure.ac:553: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBMPDCLIENT_FALSE])
m4trace:configure.ac:553: -1- m4_pattern_allow([^ENABLE_LIBMPDCLIENT$])
m4trace:configure.ac:559: -1- MPD_ENABLE_AUTO_PKG([expat], [EXPAT], [expat], [expat XML parser], [expat not found])
m4trace:configure.ac:559: -1- MPD_ARG_ENABLE([expat], [EXPAT], [expat XML parser], [], [
		
		MPD_AUTO_PKG(expat, EXPAT, expat, expat XML parser, expat not found)
	])
m4trace:configure.ac:559: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:559: -1- MPD_AUTO_PKG([expat], [EXPAT], [expat], [expat XML parser], [expat not found])
m4trace:configure.ac:559: -1- MPD_AUTO([expat], [expat XML parser], [expat not found], [PKG_CHECK_MODULES([EXPAT], [expat],
			[found_expat=yes],
			[found_expat=no])])
m4trace:configure.ac:559: -1- PKG_CHECK_MODULES([EXPAT], [expat], [found_expat=yes], [found_expat=no])
m4trace:configure.ac:559: -1- m4_pattern_allow([^EXPAT_CFLAGS$])
m4trace:configure.ac:559: -1- m4_pattern_allow([^EXPAT_LIBS$])
m4trace:configure.ac:559: -1- PKG_CHECK_EXISTS([expat], [pkg_cv_[]EXPAT_CFLAGS=`$PKG_CONFIG --[]cflags "expat" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:559: -1- PKG_CHECK_EXISTS([expat], [pkg_cv_[]EXPAT_LIBS=`$PKG_CONFIG --[]libs "expat" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:559: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:559: -1- MPD_AUTO_RESULT([expat], [expat XML parser], [expat not found])
m4trace:configure.ac:559: -1- MPD_AUTO_ENABLED([expat], [expat XML parser])
m4trace:configure.ac:559: -1- MPD_AUTO_DISABLED([expat], [expat XML parser], [expat not found])
m4trace:configure.ac:559: -1- MPD_DEFINE_CONDITIONAL([enable_expat], [ENABLE_EXPAT], [expat XML parser])
m4trace:configure.ac:559: -1- AM_CONDITIONAL([ENABLE_EXPAT], [test x$enable_expat = xyes])
m4trace:configure.ac:559: -1- m4_pattern_allow([^ENABLE_EXPAT_TRUE$])
m4trace:configure.ac:559: -1- m4_pattern_allow([^ENABLE_EXPAT_FALSE$])
m4trace:configure.ac:559: -1- _AM_SUBST_NOTMAKE([ENABLE_EXPAT_TRUE])
m4trace:configure.ac:559: -1- _AM_SUBST_NOTMAKE([ENABLE_EXPAT_FALSE])
m4trace:configure.ac:559: -1- m4_pattern_allow([^ENABLE_EXPAT$])
m4trace:configure.ac:569: -1- MPD_DEFINE_CONDITIONAL([enable_inotify], [ENABLE_INOTIFY], [inotify support])
m4trace:configure.ac:569: -1- AM_CONDITIONAL([ENABLE_INOTIFY], [test x$enable_inotify = xyes])
m4trace:configure.ac:569: -1- m4_pattern_allow([^ENABLE_INOTIFY_TRUE$])
m4trace:configure.ac:569: -1- m4_pattern_allow([^ENABLE_INOTIFY_FALSE$])
m4trace:configure.ac:569: -1- _AM_SUBST_NOTMAKE([ENABLE_INOTIFY_TRUE])
m4trace:configure.ac:569: -1- _AM_SUBST_NOTMAKE([ENABLE_INOTIFY_FALSE])
m4trace:configure.ac:569: -1- m4_pattern_allow([^ENABLE_INOTIFY$])
m4trace:configure.ac:573: -1- AC_CHECK_LIBWRAP([found_libwrap=yes], [found_libwrap=no])
m4trace:configure.ac:573: -1- m4_pattern_allow([^HAVE_TCPD_H$])
m4trace:configure.ac:595: -1- MPD_AUTO_RESULT([libwrap], [libwrap], [libwrap not found])
m4trace:configure.ac:595: -1- MPD_AUTO_ENABLED([libwrap], [libwrap])
m4trace:configure.ac:595: -1- MPD_AUTO_DISABLED([libwrap], [libwrap], [libwrap not found])
m4trace:configure.ac:599: -1- m4_pattern_allow([^LIBWRAP_CFLAGS$])
m4trace:configure.ac:600: -1- m4_pattern_allow([^LIBWRAP_LDFLAGS$])
m4trace:configure.ac:601: -1- m4_pattern_allow([^HAVE_LIBWRAP$])
m4trace:configure.ac:609: -1- MPD_ENABLE_AUTO_PKG_LIB([id3], [ID3TAG], [id3tag], [id3tag], [id3_file_open], [-lid3tag -lz], [], [ID3 support using libid3tag], [libid3tag not found])
m4trace:configure.ac:609: -1- MPD_ARG_ENABLE([id3], [ID3TAG], [ID3 support using libid3tag], [], [
		
		MPD_AUTO_PKG_LIB(id3, ID3TAG, id3tag, id3tag, id3_file_open, -lid3tag -lz, , ID3 support using libid3tag, libid3tag not found)
	])
m4trace:configure.ac:609: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:609: -1- MPD_AUTO_PKG_LIB([id3], [ID3TAG], [id3tag], [id3tag], [id3_file_open], [-lid3tag -lz], [], [ID3 support using libid3tag], [libid3tag not found])
m4trace:configure.ac:609: -1- MPD_AUTO([id3], [ID3 support using libid3tag], [libid3tag not found], [PKG_CHECK_MODULES([ID3TAG], [id3tag],
			[found_id3=yes],
			AC_CHECK_LIB(id3tag, id3_file_open,
				[found_id3=yes ID3TAG_LIBS='-lid3tag -lz' ID3TAG_CFLAGS=''],
				[found_id3=no],
				[-lid3tag -lz]))])
m4trace:configure.ac:609: -1- PKG_CHECK_MODULES([ID3TAG], [id3tag], [found_id3=yes], [{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for id3_file_open in -lid3tag" >&5
$as_echo_n "checking for id3_file_open in -lid3tag... " >&6; }
if ${ac_cv_lib_id3tag_id3_file_open+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-lid3tag -lid3tag -lz $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char id3_file_open ();
int
main ()
{
return id3_file_open ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  ac_cv_lib_id3tag_id3_file_open=yes
else
  ac_cv_lib_id3tag_id3_file_open=no
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_id3tag_id3_file_open" >&5
$as_echo "$ac_cv_lib_id3tag_id3_file_open" >&6; }
if test "x$ac_cv_lib_id3tag_id3_file_open" = xyes; then :
  found_id3=yes ID3TAG_LIBS='-lid3tag -lz' ID3TAG_CFLAGS=''
else
  found_id3=no
fi
])
m4trace:configure.ac:609: -1- m4_pattern_allow([^ID3TAG_CFLAGS$])
m4trace:configure.ac:609: -1- m4_pattern_allow([^ID3TAG_LIBS$])
m4trace:configure.ac:609: -1- PKG_CHECK_EXISTS([id3tag], [pkg_cv_[]ID3TAG_CFLAGS=`$PKG_CONFIG --[]cflags "id3tag" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:609: -1- PKG_CHECK_EXISTS([id3tag], [pkg_cv_[]ID3TAG_LIBS=`$PKG_CONFIG --[]libs "id3tag" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:609: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:609: -1- MPD_AUTO_RESULT([id3], [ID3 support using libid3tag], [libid3tag not found])
m4trace:configure.ac:609: -1- MPD_AUTO_ENABLED([id3], [ID3 support using libid3tag])
m4trace:configure.ac:609: -1- MPD_AUTO_DISABLED([id3], [ID3 support using libid3tag], [libid3tag not found])
m4trace:configure.ac:609: -1- MPD_DEFINE_CONDITIONAL([enable_id3], [ENABLE_ID3TAG], [ID3 support using libid3tag])
m4trace:configure.ac:609: -1- AM_CONDITIONAL([ENABLE_ID3TAG], [test x$enable_id3 = xyes])
m4trace:configure.ac:609: -1- m4_pattern_allow([^ENABLE_ID3TAG_TRUE$])
m4trace:configure.ac:609: -1- m4_pattern_allow([^ENABLE_ID3TAG_FALSE$])
m4trace:configure.ac:609: -1- _AM_SUBST_NOTMAKE([ENABLE_ID3TAG_TRUE])
m4trace:configure.ac:609: -1- _AM_SUBST_NOTMAKE([ENABLE_ID3TAG_FALSE])
m4trace:configure.ac:609: -1- m4_pattern_allow([^ENABLE_ID3TAG$])
m4trace:configure.ac:634: -1- MPD_AUTO_PKG([avahi], [AVAHI], [avahi-client dbus-1], [avahi client library], [avahi-client not found])
m4trace:configure.ac:634: -1- MPD_AUTO([avahi], [avahi client library], [avahi-client not found], [PKG_CHECK_MODULES([AVAHI], [avahi-client dbus-1],
			[found_avahi=yes],
			[found_avahi=no])])
m4trace:configure.ac:634: -1- PKG_CHECK_MODULES([AVAHI], [avahi-client dbus-1], [found_avahi=yes], [found_avahi=no])
m4trace:configure.ac:634: -1- m4_pattern_allow([^AVAHI_CFLAGS$])
m4trace:configure.ac:634: -1- m4_pattern_allow([^AVAHI_LIBS$])
m4trace:configure.ac:634: -1- PKG_CHECK_EXISTS([avahi-client dbus-1], [pkg_cv_[]AVAHI_CFLAGS=`$PKG_CONFIG --[]cflags "avahi-client dbus-1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:634: -1- PKG_CHECK_EXISTS([avahi-client dbus-1], [pkg_cv_[]AVAHI_LIBS=`$PKG_CONFIG --[]libs "avahi-client dbus-1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:634: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:634: -1- MPD_AUTO_RESULT([avahi], [avahi client library], [avahi-client not found])
m4trace:configure.ac:634: -1- MPD_AUTO_ENABLED([avahi], [avahi client library])
m4trace:configure.ac:634: -1- MPD_AUTO_DISABLED([avahi], [avahi client library], [avahi-client not found])
m4trace:configure.ac:640: -1- MPD_DEFINE_CONDITIONAL([enable_avahi], [HAVE_AVAHI], [Avahi Zeroconf])
m4trace:configure.ac:640: -1- AM_CONDITIONAL([HAVE_AVAHI], [test x$enable_avahi = xyes])
m4trace:configure.ac:640: -1- m4_pattern_allow([^HAVE_AVAHI_TRUE$])
m4trace:configure.ac:640: -1- m4_pattern_allow([^HAVE_AVAHI_FALSE$])
m4trace:configure.ac:640: -1- _AM_SUBST_NOTMAKE([HAVE_AVAHI_TRUE])
m4trace:configure.ac:640: -1- _AM_SUBST_NOTMAKE([HAVE_AVAHI_FALSE])
m4trace:configure.ac:640: -1- m4_pattern_allow([^HAVE_AVAHI$])
m4trace:configure.ac:645: -1- m4_pattern_allow([^HAVE_BONJOUR$])
m4trace:configure.ac:647: -1- m4_pattern_allow([^HAVE_LIBDNS_SD$])
m4trace:configure.ac:660: -1- m4_pattern_allow([^HAVE_ZEROCONF$])
m4trace:configure.ac:664: -1- AM_CONDITIONAL([HAVE_ZEROCONF], [test x$with_zeroconf != xno])
m4trace:configure.ac:664: -1- m4_pattern_allow([^HAVE_ZEROCONF_TRUE$])
m4trace:configure.ac:664: -1- m4_pattern_allow([^HAVE_ZEROCONF_FALSE$])
m4trace:configure.ac:664: -1- _AM_SUBST_NOTMAKE([HAVE_ZEROCONF_TRUE])
m4trace:configure.ac:664: -1- _AM_SUBST_NOTMAKE([HAVE_ZEROCONF_FALSE])
m4trace:configure.ac:665: -1- AM_CONDITIONAL([HAVE_BONJOUR], [test x$with_zeroconf = xbonjour])
m4trace:configure.ac:665: -1- m4_pattern_allow([^HAVE_BONJOUR_TRUE$])
m4trace:configure.ac:665: -1- m4_pattern_allow([^HAVE_BONJOUR_FALSE$])
m4trace:configure.ac:665: -1- _AM_SUBST_NOTMAKE([HAVE_BONJOUR_TRUE])
m4trace:configure.ac:665: -1- _AM_SUBST_NOTMAKE([HAVE_BONJOUR_FALSE])
m4trace:configure.ac:673: -1- MPD_ENABLE_AUTO_PKG([sqlite], [SQLITE], [sqlite3 >= 3.7.3], [SQLite database support], [sqlite not found], [$database_auto])
m4trace:configure.ac:673: -1- MPD_ARG_ENABLE([sqlite], [SQLITE], [SQLite database support], [$database_auto], [
		
		MPD_AUTO_PKG(sqlite, SQLITE, sqlite3 >= 3.7.3, SQLite database support, sqlite not found)
	])
m4trace:configure.ac:673: -3- MPD_FORMAT_DEFAULT([$database_auto])
m4trace:configure.ac:673: -1- MPD_AUTO_PKG([sqlite], [SQLITE], [sqlite3 >= 3.7.3], [SQLite database support], [sqlite not found])
m4trace:configure.ac:673: -1- MPD_AUTO([sqlite], [SQLite database support], [sqlite not found], [PKG_CHECK_MODULES([SQLITE], [sqlite3 >= 3.7.3],
			[found_sqlite=yes],
			[found_sqlite=no])])
m4trace:configure.ac:673: -1- PKG_CHECK_MODULES([SQLITE], [sqlite3 >= 3.7.3], [found_sqlite=yes], [found_sqlite=no])
m4trace:configure.ac:673: -1- m4_pattern_allow([^SQLITE_CFLAGS$])
m4trace:configure.ac:673: -1- m4_pattern_allow([^SQLITE_LIBS$])
m4trace:configure.ac:673: -1- PKG_CHECK_EXISTS([sqlite3 >= 3.7.3], [pkg_cv_[]SQLITE_CFLAGS=`$PKG_CONFIG --[]cflags "sqlite3 >= 3.7.3" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:673: -1- PKG_CHECK_EXISTS([sqlite3 >= 3.7.3], [pkg_cv_[]SQLITE_LIBS=`$PKG_CONFIG --[]libs "sqlite3 >= 3.7.3" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:673: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:673: -1- MPD_AUTO_RESULT([sqlite], [SQLite database support], [sqlite not found])
m4trace:configure.ac:673: -1- MPD_AUTO_ENABLED([sqlite], [SQLite database support])
m4trace:configure.ac:673: -1- MPD_AUTO_DISABLED([sqlite], [SQLite database support], [sqlite not found])
m4trace:configure.ac:673: -1- MPD_DEFINE_CONDITIONAL([enable_sqlite], [ENABLE_SQLITE], [SQLite database support])
m4trace:configure.ac:673: -1- AM_CONDITIONAL([ENABLE_SQLITE], [test x$enable_sqlite = xyes])
m4trace:configure.ac:673: -1- m4_pattern_allow([^ENABLE_SQLITE_TRUE$])
m4trace:configure.ac:673: -1- m4_pattern_allow([^ENABLE_SQLITE_FALSE$])
m4trace:configure.ac:673: -1- _AM_SUBST_NOTMAKE([ENABLE_SQLITE_TRUE])
m4trace:configure.ac:673: -1- _AM_SUBST_NOTMAKE([ENABLE_SQLITE_FALSE])
m4trace:configure.ac:673: -1- m4_pattern_allow([^ENABLE_SQLITE$])
m4trace:configure.ac:682: -1- MPD_ENABLE_AUTO_PKG([lsr], [LIBSAMPLERATE], [samplerate >= 0.1.3], [libsamplerate resampling], [libsamplerate not found])
m4trace:configure.ac:682: -1- MPD_ARG_ENABLE([lsr], [LIBSAMPLERATE], [libsamplerate resampling], [], [
		
		MPD_AUTO_PKG(lsr, LIBSAMPLERATE, samplerate >= 0.1.3, libsamplerate resampling, libsamplerate not found)
	])
m4trace:configure.ac:682: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:682: -1- MPD_AUTO_PKG([lsr], [LIBSAMPLERATE], [samplerate >= 0.1.3], [libsamplerate resampling], [libsamplerate not found])
m4trace:configure.ac:682: -1- MPD_AUTO([lsr], [libsamplerate resampling], [libsamplerate not found], [PKG_CHECK_MODULES([LIBSAMPLERATE], [samplerate >= 0.1.3],
			[found_lsr=yes],
			[found_lsr=no])])
m4trace:configure.ac:682: -1- PKG_CHECK_MODULES([LIBSAMPLERATE], [samplerate >= 0.1.3], [found_lsr=yes], [found_lsr=no])
m4trace:configure.ac:682: -1- m4_pattern_allow([^LIBSAMPLERATE_CFLAGS$])
m4trace:configure.ac:682: -1- m4_pattern_allow([^LIBSAMPLERATE_LIBS$])
m4trace:configure.ac:682: -1- PKG_CHECK_EXISTS([samplerate >= 0.1.3], [pkg_cv_[]LIBSAMPLERATE_CFLAGS=`$PKG_CONFIG --[]cflags "samplerate >= 0.1.3" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:682: -1- PKG_CHECK_EXISTS([samplerate >= 0.1.3], [pkg_cv_[]LIBSAMPLERATE_LIBS=`$PKG_CONFIG --[]libs "samplerate >= 0.1.3" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:682: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:682: -1- MPD_AUTO_RESULT([lsr], [libsamplerate resampling], [libsamplerate not found])
m4trace:configure.ac:682: -1- MPD_AUTO_ENABLED([lsr], [libsamplerate resampling])
m4trace:configure.ac:682: -1- MPD_AUTO_DISABLED([lsr], [libsamplerate resampling], [libsamplerate not found])
m4trace:configure.ac:682: -1- MPD_DEFINE_CONDITIONAL([enable_lsr], [ENABLE_LIBSAMPLERATE], [libsamplerate resampling])
m4trace:configure.ac:682: -1- AM_CONDITIONAL([ENABLE_LIBSAMPLERATE], [test x$enable_lsr = xyes])
m4trace:configure.ac:682: -1- m4_pattern_allow([^ENABLE_LIBSAMPLERATE_TRUE$])
m4trace:configure.ac:682: -1- m4_pattern_allow([^ENABLE_LIBSAMPLERATE_FALSE$])
m4trace:configure.ac:682: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBSAMPLERATE_TRUE])
m4trace:configure.ac:682: -1- _AM_SUBST_NOTMAKE([ENABLE_LIBSAMPLERATE_FALSE])
m4trace:configure.ac:682: -1- m4_pattern_allow([^ENABLE_LIBSAMPLERATE$])
m4trace:configure.ac:686: -1- MPD_ENABLE_AUTO_PKG([soxr], [SOXR], [soxr], [libsoxr resampler], [libsoxr not found])
m4trace:configure.ac:686: -1- MPD_ARG_ENABLE([soxr], [SOXR], [libsoxr resampler], [], [
		
		MPD_AUTO_PKG(soxr, SOXR, soxr, libsoxr resampler, libsoxr not found)
	])
m4trace:configure.ac:686: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:686: -1- MPD_AUTO_PKG([soxr], [SOXR], [soxr], [libsoxr resampler], [libsoxr not found])
m4trace:configure.ac:686: -1- MPD_AUTO([soxr], [libsoxr resampler], [libsoxr not found], [PKG_CHECK_MODULES([SOXR], [soxr],
			[found_soxr=yes],
			[found_soxr=no])])
m4trace:configure.ac:686: -1- PKG_CHECK_MODULES([SOXR], [soxr], [found_soxr=yes], [found_soxr=no])
m4trace:configure.ac:686: -1- m4_pattern_allow([^SOXR_CFLAGS$])
m4trace:configure.ac:686: -1- m4_pattern_allow([^SOXR_LIBS$])
m4trace:configure.ac:686: -1- PKG_CHECK_EXISTS([soxr], [pkg_cv_[]SOXR_CFLAGS=`$PKG_CONFIG --[]cflags "soxr" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:686: -1- PKG_CHECK_EXISTS([soxr], [pkg_cv_[]SOXR_LIBS=`$PKG_CONFIG --[]libs "soxr" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:686: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:686: -1- MPD_AUTO_RESULT([soxr], [libsoxr resampler], [libsoxr not found])
m4trace:configure.ac:686: -1- MPD_AUTO_ENABLED([soxr], [libsoxr resampler])
m4trace:configure.ac:686: -1- MPD_AUTO_DISABLED([soxr], [libsoxr resampler], [libsoxr not found])
m4trace:configure.ac:686: -1- MPD_DEFINE_CONDITIONAL([enable_soxr], [ENABLE_SOXR], [libsoxr resampler])
m4trace:configure.ac:686: -1- AM_CONDITIONAL([ENABLE_SOXR], [test x$enable_soxr = xyes])
m4trace:configure.ac:686: -1- m4_pattern_allow([^ENABLE_SOXR_TRUE$])
m4trace:configure.ac:686: -1- m4_pattern_allow([^ENABLE_SOXR_FALSE$])
m4trace:configure.ac:686: -1- _AM_SUBST_NOTMAKE([ENABLE_SOXR_TRUE])
m4trace:configure.ac:686: -1- _AM_SUBST_NOTMAKE([ENABLE_SOXR_FALSE])
m4trace:configure.ac:686: -1- m4_pattern_allow([^ENABLE_SOXR$])
m4trace:configure.ac:694: -1- MPD_ENABLE_AUTO_PKG([curl], [CURL], [libcurl >= 7.18], [libcurl HTTP streaming], [libcurl not found])
m4trace:configure.ac:694: -1- MPD_ARG_ENABLE([curl], [CURL], [libcurl HTTP streaming], [], [
		
		MPD_AUTO_PKG(curl, CURL, libcurl >= 7.18, libcurl HTTP streaming, libcurl not found)
	])
m4trace:configure.ac:694: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:694: -1- MPD_AUTO_PKG([curl], [CURL], [libcurl >= 7.18], [libcurl HTTP streaming], [libcurl not found])
m4trace:configure.ac:694: -1- MPD_AUTO([curl], [libcurl HTTP streaming], [libcurl not found], [PKG_CHECK_MODULES([CURL], [libcurl >= 7.18],
			[found_curl=yes],
			[found_curl=no])])
m4trace:configure.ac:694: -1- PKG_CHECK_MODULES([CURL], [libcurl >= 7.18], [found_curl=yes], [found_curl=no])
m4trace:configure.ac:694: -1- m4_pattern_allow([^CURL_CFLAGS$])
m4trace:configure.ac:694: -1- m4_pattern_allow([^CURL_LIBS$])
m4trace:configure.ac:694: -1- PKG_CHECK_EXISTS([libcurl >= 7.18], [pkg_cv_[]CURL_CFLAGS=`$PKG_CONFIG --[]cflags "libcurl >= 7.18" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:694: -1- PKG_CHECK_EXISTS([libcurl >= 7.18], [pkg_cv_[]CURL_LIBS=`$PKG_CONFIG --[]libs "libcurl >= 7.18" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:694: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:694: -1- MPD_AUTO_RESULT([curl], [libcurl HTTP streaming], [libcurl not found])
m4trace:configure.ac:694: -1- MPD_AUTO_ENABLED([curl], [libcurl HTTP streaming])
m4trace:configure.ac:694: -1- MPD_AUTO_DISABLED([curl], [libcurl HTTP streaming], [libcurl not found])
m4trace:configure.ac:694: -1- MPD_DEFINE_CONDITIONAL([enable_curl], [ENABLE_CURL], [libcurl HTTP streaming])
m4trace:configure.ac:694: -1- AM_CONDITIONAL([ENABLE_CURL], [test x$enable_curl = xyes])
m4trace:configure.ac:694: -1- m4_pattern_allow([^ENABLE_CURL_TRUE$])
m4trace:configure.ac:694: -1- m4_pattern_allow([^ENABLE_CURL_FALSE$])
m4trace:configure.ac:694: -1- _AM_SUBST_NOTMAKE([ENABLE_CURL_TRUE])
m4trace:configure.ac:694: -1- _AM_SUBST_NOTMAKE([ENABLE_CURL_FALSE])
m4trace:configure.ac:694: -1- m4_pattern_allow([^ENABLE_CURL$])
m4trace:configure.ac:698: -1- MPD_ENABLE_AUTO_PKG_LIB([smbclient], [SMBCLIENT], [smbclient >= 0.2], [smbclient], [smbc_init], [-lsmbclient], [], [smbclient input plugin], [libsmbclient not found])
m4trace:configure.ac:698: -1- MPD_ARG_ENABLE([smbclient], [SMBCLIENT], [smbclient input plugin], [], [
		
		MPD_AUTO_PKG_LIB(smbclient, SMBCLIENT, smbclient >= 0.2, smbclient, smbc_init, -lsmbclient, , smbclient input plugin, libsmbclient not found)
	])
m4trace:configure.ac:698: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:698: -1- MPD_AUTO_PKG_LIB([smbclient], [SMBCLIENT], [smbclient >= 0.2], [smbclient], [smbc_init], [-lsmbclient], [], [smbclient input plugin], [libsmbclient not found])
m4trace:configure.ac:698: -1- MPD_AUTO([smbclient], [smbclient input plugin], [libsmbclient not found], [PKG_CHECK_MODULES([SMBCLIENT], [smbclient >= 0.2],
			[found_smbclient=yes],
			AC_CHECK_LIB(smbclient, smbc_init,
				[found_smbclient=yes SMBCLIENT_LIBS='-lsmbclient' SMBCLIENT_CFLAGS=''],
				[found_smbclient=no],
				[-lsmbclient]))])
m4trace:configure.ac:698: -1- PKG_CHECK_MODULES([SMBCLIENT], [smbclient >= 0.2], [found_smbclient=yes], [{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for smbc_init in -lsmbclient" >&5
$as_echo_n "checking for smbc_init in -lsmbclient... " >&6; }
if ${ac_cv_lib_smbclient_smbc_init+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-lsmbclient -lsmbclient $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char smbc_init ();
int
main ()
{
return smbc_init ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  ac_cv_lib_smbclient_smbc_init=yes
else
  ac_cv_lib_smbclient_smbc_init=no
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_smbclient_smbc_init" >&5
$as_echo "$ac_cv_lib_smbclient_smbc_init" >&6; }
if test "x$ac_cv_lib_smbclient_smbc_init" = xyes; then :
  found_smbclient=yes SMBCLIENT_LIBS='-lsmbclient' SMBCLIENT_CFLAGS=''
else
  found_smbclient=no
fi
])
m4trace:configure.ac:698: -1- m4_pattern_allow([^SMBCLIENT_CFLAGS$])
m4trace:configure.ac:698: -1- m4_pattern_allow([^SMBCLIENT_LIBS$])
m4trace:configure.ac:698: -1- PKG_CHECK_EXISTS([smbclient >= 0.2], [pkg_cv_[]SMBCLIENT_CFLAGS=`$PKG_CONFIG --[]cflags "smbclient >= 0.2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:698: -1- PKG_CHECK_EXISTS([smbclient >= 0.2], [pkg_cv_[]SMBCLIENT_LIBS=`$PKG_CONFIG --[]libs "smbclient >= 0.2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:698: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:698: -1- MPD_AUTO_RESULT([smbclient], [smbclient input plugin], [libsmbclient not found])
m4trace:configure.ac:698: -1- MPD_AUTO_ENABLED([smbclient], [smbclient input plugin])
m4trace:configure.ac:698: -1- MPD_AUTO_DISABLED([smbclient], [smbclient input plugin], [libsmbclient not found])
m4trace:configure.ac:698: -1- MPD_DEFINE_CONDITIONAL([enable_smbclient], [ENABLE_SMBCLIENT], [smbclient input plugin])
m4trace:configure.ac:698: -1- AM_CONDITIONAL([ENABLE_SMBCLIENT], [test x$enable_smbclient = xyes])
m4trace:configure.ac:698: -1- m4_pattern_allow([^ENABLE_SMBCLIENT_TRUE$])
m4trace:configure.ac:698: -1- m4_pattern_allow([^ENABLE_SMBCLIENT_FALSE$])
m4trace:configure.ac:698: -1- _AM_SUBST_NOTMAKE([ENABLE_SMBCLIENT_TRUE])
m4trace:configure.ac:698: -1- _AM_SUBST_NOTMAKE([ENABLE_SMBCLIENT_FALSE])
m4trace:configure.ac:698: -1- m4_pattern_allow([^ENABLE_SMBCLIENT$])
m4trace:configure.ac:703: -1- MPD_ENABLE_AUTO_PKG([nfs], [NFS], [libnfs], [NFS input plugin], [libnfs not found])
m4trace:configure.ac:703: -1- MPD_ARG_ENABLE([nfs], [NFS], [NFS input plugin], [], [
		
		MPD_AUTO_PKG(nfs, NFS, libnfs, NFS input plugin, libnfs not found)
	])
m4trace:configure.ac:703: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:703: -1- MPD_AUTO_PKG([nfs], [NFS], [libnfs], [NFS input plugin], [libnfs not found])
m4trace:configure.ac:703: -1- MPD_AUTO([nfs], [NFS input plugin], [libnfs not found], [PKG_CHECK_MODULES([NFS], [libnfs],
			[found_nfs=yes],
			[found_nfs=no])])
m4trace:configure.ac:703: -1- PKG_CHECK_MODULES([NFS], [libnfs], [found_nfs=yes], [found_nfs=no])
m4trace:configure.ac:703: -1- m4_pattern_allow([^NFS_CFLAGS$])
m4trace:configure.ac:703: -1- m4_pattern_allow([^NFS_LIBS$])
m4trace:configure.ac:703: -1- PKG_CHECK_EXISTS([libnfs], [pkg_cv_[]NFS_CFLAGS=`$PKG_CONFIG --[]cflags "libnfs" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:703: -1- PKG_CHECK_EXISTS([libnfs], [pkg_cv_[]NFS_LIBS=`$PKG_CONFIG --[]libs "libnfs" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:703: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:703: -1- MPD_AUTO_RESULT([nfs], [NFS input plugin], [libnfs not found])
m4trace:configure.ac:703: -1- MPD_AUTO_ENABLED([nfs], [NFS input plugin])
m4trace:configure.ac:703: -1- MPD_AUTO_DISABLED([nfs], [NFS input plugin], [libnfs not found])
m4trace:configure.ac:703: -1- MPD_DEFINE_CONDITIONAL([enable_nfs], [ENABLE_NFS], [NFS input plugin])
m4trace:configure.ac:703: -1- AM_CONDITIONAL([ENABLE_NFS], [test x$enable_nfs = xyes])
m4trace:configure.ac:703: -1- m4_pattern_allow([^ENABLE_NFS_TRUE$])
m4trace:configure.ac:703: -1- m4_pattern_allow([^ENABLE_NFS_FALSE$])
m4trace:configure.ac:703: -1- _AM_SUBST_NOTMAKE([ENABLE_NFS_TRUE])
m4trace:configure.ac:703: -1- _AM_SUBST_NOTMAKE([ENABLE_NFS_FALSE])
m4trace:configure.ac:703: -1- m4_pattern_allow([^ENABLE_NFS$])
m4trace:configure.ac:707: -1- MPD_AUTO([soundcloud], [soundcloud.com support], [libyajl not found], [PKG_CHECK_MODULES([YAJL], [yajl >= 2.0],
		[found_soundcloud=yes],
		[found_soundcloud=no])])
m4trace:configure.ac:707: -1- PKG_CHECK_MODULES([YAJL], [yajl >= 2.0], [found_soundcloud=yes], [found_soundcloud=no])
m4trace:configure.ac:707: -1- m4_pattern_allow([^YAJL_CFLAGS$])
m4trace:configure.ac:707: -1- m4_pattern_allow([^YAJL_LIBS$])
m4trace:configure.ac:707: -1- PKG_CHECK_EXISTS([yajl >= 2.0], [pkg_cv_[]YAJL_CFLAGS=`$PKG_CONFIG --[]cflags "yajl >= 2.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:707: -1- PKG_CHECK_EXISTS([yajl >= 2.0], [pkg_cv_[]YAJL_LIBS=`$PKG_CONFIG --[]libs "yajl >= 2.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:707: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:707: -1- MPD_AUTO_RESULT([soundcloud], [soundcloud.com support], [libyajl not found])
m4trace:configure.ac:707: -1- MPD_AUTO_ENABLED([soundcloud], [soundcloud.com support])
m4trace:configure.ac:707: -1- MPD_AUTO_DISABLED([soundcloud], [soundcloud.com support], [libyajl not found])
m4trace:configure.ac:711: -1- MPD_DEFINE_CONDITIONAL([enable_soundcloud], [ENABLE_SOUNDCLOUD], [soundcloud.com support])
m4trace:configure.ac:711: -1- AM_CONDITIONAL([ENABLE_SOUNDCLOUD], [test x$enable_soundcloud = xyes])
m4trace:configure.ac:711: -1- m4_pattern_allow([^ENABLE_SOUNDCLOUD_TRUE$])
m4trace:configure.ac:711: -1- m4_pattern_allow([^ENABLE_SOUNDCLOUD_FALSE$])
m4trace:configure.ac:711: -1- _AM_SUBST_NOTMAKE([ENABLE_SOUNDCLOUD_TRUE])
m4trace:configure.ac:711: -1- _AM_SUBST_NOTMAKE([ENABLE_SOUNDCLOUD_FALSE])
m4trace:configure.ac:711: -1- m4_pattern_allow([^ENABLE_SOUNDCLOUD$])
m4trace:configure.ac:715: -1- MPD_ENABLE_AUTO_PKG([cdio_paranoia], [CDIO_PARANOIA], [libcdio_paranoia], [libcdio_paranoia input plugin], [libcdio_paranoia not found])
m4trace:configure.ac:715: -1- MPD_ARG_ENABLE([cdio_paranoia], [CDIO_PARANOIA], [libcdio_paranoia input plugin], [], [
		
		MPD_AUTO_PKG(cdio_paranoia, CDIO_PARANOIA, libcdio_paranoia, libcdio_paranoia input plugin, libcdio_paranoia not found)
	])
m4trace:configure.ac:715: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:715: -1- MPD_AUTO_PKG([cdio_paranoia], [CDIO_PARANOIA], [libcdio_paranoia], [libcdio_paranoia input plugin], [libcdio_paranoia not found])
m4trace:configure.ac:715: -1- MPD_AUTO([cdio_paranoia], [libcdio_paranoia input plugin], [libcdio_paranoia not found], [PKG_CHECK_MODULES([CDIO_PARANOIA], [libcdio_paranoia],
			[found_cdio_paranoia=yes],
			[found_cdio_paranoia=no])])
m4trace:configure.ac:715: -1- PKG_CHECK_MODULES([CDIO_PARANOIA], [libcdio_paranoia], [found_cdio_paranoia=yes], [found_cdio_paranoia=no])
m4trace:configure.ac:715: -1- m4_pattern_allow([^CDIO_PARANOIA_CFLAGS$])
m4trace:configure.ac:715: -1- m4_pattern_allow([^CDIO_PARANOIA_LIBS$])
m4trace:configure.ac:715: -1- PKG_CHECK_EXISTS([libcdio_paranoia], [pkg_cv_[]CDIO_PARANOIA_CFLAGS=`$PKG_CONFIG --[]cflags "libcdio_paranoia" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:715: -1- PKG_CHECK_EXISTS([libcdio_paranoia], [pkg_cv_[]CDIO_PARANOIA_LIBS=`$PKG_CONFIG --[]libs "libcdio_paranoia" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:715: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:715: -1- MPD_AUTO_RESULT([cdio_paranoia], [libcdio_paranoia input plugin], [libcdio_paranoia not found])
m4trace:configure.ac:715: -1- MPD_AUTO_ENABLED([cdio_paranoia], [libcdio_paranoia input plugin])
m4trace:configure.ac:715: -1- MPD_AUTO_DISABLED([cdio_paranoia], [libcdio_paranoia input plugin], [libcdio_paranoia not found])
m4trace:configure.ac:715: -1- MPD_DEFINE_CONDITIONAL([enable_cdio_paranoia], [ENABLE_CDIO_PARANOIA], [libcdio_paranoia input plugin])
m4trace:configure.ac:715: -1- AM_CONDITIONAL([ENABLE_CDIO_PARANOIA], [test x$enable_cdio_paranoia = xyes])
m4trace:configure.ac:715: -1- m4_pattern_allow([^ENABLE_CDIO_PARANOIA_TRUE$])
m4trace:configure.ac:715: -1- m4_pattern_allow([^ENABLE_CDIO_PARANOIA_FALSE$])
m4trace:configure.ac:715: -1- _AM_SUBST_NOTMAKE([ENABLE_CDIO_PARANOIA_TRUE])
m4trace:configure.ac:715: -1- _AM_SUBST_NOTMAKE([ENABLE_CDIO_PARANOIA_FALSE])
m4trace:configure.ac:715: -1- m4_pattern_allow([^ENABLE_CDIO_PARANOIA$])
m4trace:configure.ac:718: -1- m4_pattern_allow([^HAVE_CDIO_PARANOIA_PARANOIA_H$])
m4trace:configure.ac:721: -1- MPD_ENABLE_AUTO_PKG([mms], [MMS], [libmms >= 0.4], [libmms mms:// protocol support], [libmms not found])
m4trace:configure.ac:721: -1- MPD_ARG_ENABLE([mms], [MMS], [libmms mms:// protocol support], [], [
		
		MPD_AUTO_PKG(mms, MMS, libmms >= 0.4, libmms mms:// protocol support, libmms not found)
	])
m4trace:configure.ac:721: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:721: -1- MPD_AUTO_PKG([mms], [MMS], [libmms >= 0.4], [libmms mms:// protocol support], [libmms not found])
m4trace:configure.ac:721: -1- MPD_AUTO([mms], [libmms mms:// protocol support], [libmms not found], [PKG_CHECK_MODULES([MMS], [libmms >= 0.4],
			[found_mms=yes],
			[found_mms=no])])
m4trace:configure.ac:721: -1- PKG_CHECK_MODULES([MMS], [libmms >= 0.4], [found_mms=yes], [found_mms=no])
m4trace:configure.ac:721: -1- m4_pattern_allow([^MMS_CFLAGS$])
m4trace:configure.ac:721: -1- m4_pattern_allow([^MMS_LIBS$])
m4trace:configure.ac:721: -1- PKG_CHECK_EXISTS([libmms >= 0.4], [pkg_cv_[]MMS_CFLAGS=`$PKG_CONFIG --[]cflags "libmms >= 0.4" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:721: -1- PKG_CHECK_EXISTS([libmms >= 0.4], [pkg_cv_[]MMS_LIBS=`$PKG_CONFIG --[]libs "libmms >= 0.4" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:721: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:721: -1- MPD_AUTO_RESULT([mms], [libmms mms:// protocol support], [libmms not found])
m4trace:configure.ac:721: -1- MPD_AUTO_ENABLED([mms], [libmms mms:// protocol support])
m4trace:configure.ac:721: -1- MPD_AUTO_DISABLED([mms], [libmms mms:// protocol support], [libmms not found])
m4trace:configure.ac:721: -1- MPD_DEFINE_CONDITIONAL([enable_mms], [ENABLE_MMS], [libmms mms:// protocol support])
m4trace:configure.ac:721: -1- AM_CONDITIONAL([ENABLE_MMS], [test x$enable_mms = xyes])
m4trace:configure.ac:721: -1- m4_pattern_allow([^ENABLE_MMS_TRUE$])
m4trace:configure.ac:721: -1- m4_pattern_allow([^ENABLE_MMS_FALSE$])
m4trace:configure.ac:721: -1- _AM_SUBST_NOTMAKE([ENABLE_MMS_TRUE])
m4trace:configure.ac:721: -1- _AM_SUBST_NOTMAKE([ENABLE_MMS_FALSE])
m4trace:configure.ac:721: -1- m4_pattern_allow([^ENABLE_MMS$])
m4trace:configure.ac:728: -1- MPD_ENABLE_AUTO([webdav], [WEBDAV], [WebDAV storage plugin], [WebDAV requires libcurl and libexpat], [auto], [if test x$enable_curl = xyes && test x$enable_expat = xyes; then
		found_webdav=yes
	else
		found_webdav=no
	fi])
m4trace:configure.ac:728: -1- MPD_ARG_ENABLE([webdav], [WEBDAV], [WebDAV storage plugin], [auto], [
		MPD_AUTO([webdav], [WebDAV storage plugin], [WebDAV requires libcurl and libexpat], [if test x$enable_curl = xyes && test x$enable_expat = xyes; then
		found_webdav=yes
	else
		found_webdav=no
	fi])
	])
m4trace:configure.ac:728: -3- MPD_FORMAT_DEFAULT([auto])
m4trace:configure.ac:728: -1- MPD_AUTO([webdav], [WebDAV storage plugin], [WebDAV requires libcurl and libexpat], [if test x$enable_curl = xyes && test x$enable_expat = xyes; then
		found_webdav=yes
	else
		found_webdav=no
	fi])
m4trace:configure.ac:728: -1- MPD_AUTO_RESULT([webdav], [WebDAV storage plugin], [WebDAV requires libcurl and libexpat])
m4trace:configure.ac:728: -1- MPD_AUTO_ENABLED([webdav], [WebDAV storage plugin])
m4trace:configure.ac:728: -1- MPD_AUTO_DISABLED([webdav], [WebDAV storage plugin], [WebDAV requires libcurl and libexpat])
m4trace:configure.ac:728: -1- MPD_DEFINE_CONDITIONAL([enable_webdav], [ENABLE_WEBDAV], [WebDAV storage plugin])
m4trace:configure.ac:728: -1- AM_CONDITIONAL([ENABLE_WEBDAV], [test x$enable_webdav = xyes])
m4trace:configure.ac:728: -1- m4_pattern_allow([^ENABLE_WEBDAV_TRUE$])
m4trace:configure.ac:728: -1- m4_pattern_allow([^ENABLE_WEBDAV_FALSE$])
m4trace:configure.ac:728: -1- _AM_SUBST_NOTMAKE([ENABLE_WEBDAV_TRUE])
m4trace:configure.ac:728: -1- _AM_SUBST_NOTMAKE([ENABLE_WEBDAV_FALSE])
m4trace:configure.ac:728: -1- m4_pattern_allow([^ENABLE_WEBDAV$])
m4trace:configure.ac:741: -1- MPD_ARG_ENABLE([cue], [CUE], [CUE sheet parser], [yes])
m4trace:configure.ac:741: -3- MPD_FORMAT_DEFAULT([yes])
m4trace:configure.ac:741: -1- MPD_DEFINE_CONDITIONAL([enable_cue], [ENABLE_CUE], [CUE sheet parser])
m4trace:configure.ac:741: -1- AM_CONDITIONAL([ENABLE_CUE], [test x$enable_cue = xyes])
m4trace:configure.ac:741: -1- m4_pattern_allow([^ENABLE_CUE_TRUE$])
m4trace:configure.ac:741: -1- m4_pattern_allow([^ENABLE_CUE_FALSE$])
m4trace:configure.ac:741: -1- _AM_SUBST_NOTMAKE([ENABLE_CUE_TRUE])
m4trace:configure.ac:741: -1- _AM_SUBST_NOTMAKE([ENABLE_CUE_FALSE])
m4trace:configure.ac:741: -1- m4_pattern_allow([^ENABLE_CUE$])
m4trace:configure.ac:761: -1- MPD_DEFINE_CONDITIONAL([enable_neighbor_plugins], [ENABLE_NEIGHBOR_PLUGINS], [neighbor discovery])
m4trace:configure.ac:761: -1- AM_CONDITIONAL([ENABLE_NEIGHBOR_PLUGINS], [test x$enable_neighbor_plugins = xyes])
m4trace:configure.ac:761: -1- m4_pattern_allow([^ENABLE_NEIGHBOR_PLUGINS_TRUE$])
m4trace:configure.ac:761: -1- m4_pattern_allow([^ENABLE_NEIGHBOR_PLUGINS_FALSE$])
m4trace:configure.ac:761: -1- _AM_SUBST_NOTMAKE([ENABLE_NEIGHBOR_PLUGINS_TRUE])
m4trace:configure.ac:761: -1- _AM_SUBST_NOTMAKE([ENABLE_NEIGHBOR_PLUGINS_FALSE])
m4trace:configure.ac:761: -1- m4_pattern_allow([^ENABLE_NEIGHBOR_PLUGINS$])
m4trace:configure.ac:769: -1- MPD_ENABLE_AUTO_PKG([iso9660], [ISO9660], [libiso9660], [libiso9660 archive plugin], [libiso9660 not found])
m4trace:configure.ac:769: -1- MPD_ARG_ENABLE([iso9660], [ISO9660], [libiso9660 archive plugin], [], [
		
		MPD_AUTO_PKG(iso9660, ISO9660, libiso9660, libiso9660 archive plugin, libiso9660 not found)
	])
m4trace:configure.ac:769: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:769: -1- MPD_AUTO_PKG([iso9660], [ISO9660], [libiso9660], [libiso9660 archive plugin], [libiso9660 not found])
m4trace:configure.ac:769: -1- MPD_AUTO([iso9660], [libiso9660 archive plugin], [libiso9660 not found], [PKG_CHECK_MODULES([ISO9660], [libiso9660],
			[found_iso9660=yes],
			[found_iso9660=no])])
m4trace:configure.ac:769: -1- PKG_CHECK_MODULES([ISO9660], [libiso9660], [found_iso9660=yes], [found_iso9660=no])
m4trace:configure.ac:769: -1- m4_pattern_allow([^ISO9660_CFLAGS$])
m4trace:configure.ac:769: -1- m4_pattern_allow([^ISO9660_LIBS$])
m4trace:configure.ac:769: -1- PKG_CHECK_EXISTS([libiso9660], [pkg_cv_[]ISO9660_CFLAGS=`$PKG_CONFIG --[]cflags "libiso9660" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:769: -1- PKG_CHECK_EXISTS([libiso9660], [pkg_cv_[]ISO9660_LIBS=`$PKG_CONFIG --[]libs "libiso9660" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:769: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:769: -1- MPD_AUTO_RESULT([iso9660], [libiso9660 archive plugin], [libiso9660 not found])
m4trace:configure.ac:769: -1- MPD_AUTO_ENABLED([iso9660], [libiso9660 archive plugin])
m4trace:configure.ac:769: -1- MPD_AUTO_DISABLED([iso9660], [libiso9660 archive plugin], [libiso9660 not found])
m4trace:configure.ac:769: -1- MPD_DEFINE_CONDITIONAL([enable_iso9660], [ENABLE_ISO9660], [libiso9660 archive plugin])
m4trace:configure.ac:769: -1- AM_CONDITIONAL([ENABLE_ISO9660], [test x$enable_iso9660 = xyes])
m4trace:configure.ac:769: -1- m4_pattern_allow([^ENABLE_ISO9660_TRUE$])
m4trace:configure.ac:769: -1- m4_pattern_allow([^ENABLE_ISO9660_FALSE$])
m4trace:configure.ac:769: -1- _AM_SUBST_NOTMAKE([ENABLE_ISO9660_TRUE])
m4trace:configure.ac:769: -1- _AM_SUBST_NOTMAKE([ENABLE_ISO9660_FALSE])
m4trace:configure.ac:769: -1- m4_pattern_allow([^ENABLE_ISO9660$])
m4trace:configure.ac:773: -1- m4_pattern_allow([^MKISOFS$])
m4trace:configure.ac:778: -1- AM_CONDITIONAL([ENABLE_ISO9660_TEST], [test x$MKISOFS != xno])
m4trace:configure.ac:778: -1- m4_pattern_allow([^ENABLE_ISO9660_TEST_TRUE$])
m4trace:configure.ac:778: -1- m4_pattern_allow([^ENABLE_ISO9660_TEST_FALSE$])
m4trace:configure.ac:778: -1- _AM_SUBST_NOTMAKE([ENABLE_ISO9660_TEST_TRUE])
m4trace:configure.ac:778: -1- _AM_SUBST_NOTMAKE([ENABLE_ISO9660_TEST_FALSE])
m4trace:configure.ac:782: -1- MPD_ENABLE_AUTO_PKG([zlib], [ZLIB], [zlib], [zlib support], [zlib not found])
m4trace:configure.ac:782: -1- MPD_ARG_ENABLE([zlib], [ZLIB], [zlib support], [], [
		
		MPD_AUTO_PKG(zlib, ZLIB, zlib, zlib support, zlib not found)
	])
m4trace:configure.ac:782: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:782: -1- MPD_AUTO_PKG([zlib], [ZLIB], [zlib], [zlib support], [zlib not found])
m4trace:configure.ac:782: -1- MPD_AUTO([zlib], [zlib support], [zlib not found], [PKG_CHECK_MODULES([ZLIB], [zlib],
			[found_zlib=yes],
			[found_zlib=no])])
m4trace:configure.ac:782: -1- PKG_CHECK_MODULES([ZLIB], [zlib], [found_zlib=yes], [found_zlib=no])
m4trace:configure.ac:782: -1- m4_pattern_allow([^ZLIB_CFLAGS$])
m4trace:configure.ac:782: -1- m4_pattern_allow([^ZLIB_LIBS$])
m4trace:configure.ac:782: -1- PKG_CHECK_EXISTS([zlib], [pkg_cv_[]ZLIB_CFLAGS=`$PKG_CONFIG --[]cflags "zlib" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:782: -1- PKG_CHECK_EXISTS([zlib], [pkg_cv_[]ZLIB_LIBS=`$PKG_CONFIG --[]libs "zlib" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:782: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:782: -1- MPD_AUTO_RESULT([zlib], [zlib support], [zlib not found])
m4trace:configure.ac:782: -1- MPD_AUTO_ENABLED([zlib], [zlib support])
m4trace:configure.ac:782: -1- MPD_AUTO_DISABLED([zlib], [zlib support], [zlib not found])
m4trace:configure.ac:782: -1- MPD_DEFINE_CONDITIONAL([enable_zlib], [ENABLE_ZLIB], [zlib support])
m4trace:configure.ac:782: -1- AM_CONDITIONAL([ENABLE_ZLIB], [test x$enable_zlib = xyes])
m4trace:configure.ac:782: -1- m4_pattern_allow([^ENABLE_ZLIB_TRUE$])
m4trace:configure.ac:782: -1- m4_pattern_allow([^ENABLE_ZLIB_FALSE$])
m4trace:configure.ac:782: -1- _AM_SUBST_NOTMAKE([ENABLE_ZLIB_TRUE])
m4trace:configure.ac:782: -1- _AM_SUBST_NOTMAKE([ENABLE_ZLIB_FALSE])
m4trace:configure.ac:782: -1- m4_pattern_allow([^ENABLE_ZLIB$])
m4trace:configure.ac:787: -1- MPD_ENABLE_AUTO_LIB([bzip2], [BZ2], [bz2], [BZ2_bzDecompressInit], [-lbz2], [], [bzip2 archive plugin], [libbz2 not found])
m4trace:configure.ac:787: -1- MPD_ARG_ENABLE([bzip2], [BZ2], [bzip2 archive plugin], [], [
		
		MPD_AUTO_LIB(bzip2, BZ2, bz2, BZ2_bzDecompressInit, -lbz2, , bzip2 archive plugin, libbz2 not found)
	])
m4trace:configure.ac:787: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:787: -1- MPD_AUTO_LIB([bzip2], [BZ2], [bz2], [BZ2_bzDecompressInit], [-lbz2], [], [bzip2 archive plugin], [libbz2 not found])
m4trace:configure.ac:787: -1- m4_pattern_allow([^BZ2_LIBS$])
m4trace:configure.ac:787: -1- m4_pattern_allow([^BZ2_CFLAGS$])
m4trace:configure.ac:787: -1- MPD_AUTO([bzip2], [bzip2 archive plugin], [libbz2 not found], [AC_CHECK_LIB(bz2, BZ2_bzDecompressInit,
			[found_bzip2=yes BZ2_LIBS='-lbz2' BZ2_CFLAGS=''],
			[found_bzip2=no],
			[-lbz2])])
m4trace:configure.ac:787: -1- MPD_AUTO_RESULT([bzip2], [bzip2 archive plugin], [libbz2 not found])
m4trace:configure.ac:787: -1- MPD_AUTO_ENABLED([bzip2], [bzip2 archive plugin])
m4trace:configure.ac:787: -1- MPD_AUTO_DISABLED([bzip2], [bzip2 archive plugin], [libbz2 not found])
m4trace:configure.ac:787: -1- MPD_DEFINE_CONDITIONAL([enable_bzip2], [ENABLE_BZ2], [bzip2 archive plugin])
m4trace:configure.ac:787: -1- AM_CONDITIONAL([ENABLE_BZ2], [test x$enable_bzip2 = xyes])
m4trace:configure.ac:787: -1- m4_pattern_allow([^ENABLE_BZ2_TRUE$])
m4trace:configure.ac:787: -1- m4_pattern_allow([^ENABLE_BZ2_FALSE$])
m4trace:configure.ac:787: -1- _AM_SUBST_NOTMAKE([ENABLE_BZ2_TRUE])
m4trace:configure.ac:787: -1- _AM_SUBST_NOTMAKE([ENABLE_BZ2_FALSE])
m4trace:configure.ac:787: -1- m4_pattern_allow([^ENABLE_BZ2$])
m4trace:configure.ac:791: -1- m4_pattern_allow([^BZIP2$])
m4trace:configure.ac:796: -1- AM_CONDITIONAL([ENABLE_BZIP2_TEST], [test x$BZIP2 != xno])
m4trace:configure.ac:796: -1- m4_pattern_allow([^ENABLE_BZIP2_TEST_TRUE$])
m4trace:configure.ac:796: -1- m4_pattern_allow([^ENABLE_BZIP2_TEST_FALSE$])
m4trace:configure.ac:796: -1- _AM_SUBST_NOTMAKE([ENABLE_BZIP2_TEST_TRUE])
m4trace:configure.ac:796: -1- _AM_SUBST_NOTMAKE([ENABLE_BZIP2_TEST_FALSE])
m4trace:configure.ac:809: -1- MPD_ENABLE_AUTO_PKG_DEPENDS([upnp], [UPNP], [libupnp], [UPnP client support], [libupnp not found], [], [enable_database], [Cannot use --enable-upnp with --disable-database])
m4trace:configure.ac:809: -1- MPD_ENABLE_AUTO_PKG([upnp], [UPNP], [libupnp], [UPnP client support], [libupnp not found], [], [MPD_DEPENDS([enable_upnp], [enable_database], [Cannot use --enable-upnp with --disable-database])])
m4trace:configure.ac:809: -1- MPD_ARG_ENABLE([upnp], [UPNP], [UPnP client support], [], [
		MPD_DEPENDS([enable_upnp], [enable_database], [Cannot use --enable-upnp with --disable-database])
		MPD_AUTO_PKG(upnp, UPNP, libupnp, UPnP client support, libupnp not found)
	])
m4trace:configure.ac:809: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:809: -1- MPD_DEPENDS([enable_upnp], [enable_database], [Cannot use --enable-upnp with --disable-database])
m4trace:configure.ac:809: -1- MPD_AUTO_PKG([upnp], [UPNP], [libupnp], [UPnP client support], [libupnp not found])
m4trace:configure.ac:809: -1- MPD_AUTO([upnp], [UPnP client support], [libupnp not found], [PKG_CHECK_MODULES([UPNP], [libupnp],
			[found_upnp=yes],
			[found_upnp=no])])
m4trace:configure.ac:809: -1- PKG_CHECK_MODULES([UPNP], [libupnp], [found_upnp=yes], [found_upnp=no])
m4trace:configure.ac:809: -1- m4_pattern_allow([^UPNP_CFLAGS$])
m4trace:configure.ac:809: -1- m4_pattern_allow([^UPNP_LIBS$])
m4trace:configure.ac:809: -1- PKG_CHECK_EXISTS([libupnp], [pkg_cv_[]UPNP_CFLAGS=`$PKG_CONFIG --[]cflags "libupnp" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:809: -1- PKG_CHECK_EXISTS([libupnp], [pkg_cv_[]UPNP_LIBS=`$PKG_CONFIG --[]libs "libupnp" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:809: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:809: -1- MPD_AUTO_RESULT([upnp], [UPnP client support], [libupnp not found])
m4trace:configure.ac:809: -1- MPD_AUTO_ENABLED([upnp], [UPnP client support])
m4trace:configure.ac:809: -1- MPD_AUTO_DISABLED([upnp], [UPnP client support], [libupnp not found])
m4trace:configure.ac:809: -1- MPD_DEFINE_CONDITIONAL([enable_upnp], [ENABLE_UPNP], [UPnP client support])
m4trace:configure.ac:809: -1- AM_CONDITIONAL([ENABLE_UPNP], [test x$enable_upnp = xyes])
m4trace:configure.ac:809: -1- m4_pattern_allow([^ENABLE_UPNP_TRUE$])
m4trace:configure.ac:809: -1- m4_pattern_allow([^ENABLE_UPNP_FALSE$])
m4trace:configure.ac:809: -1- _AM_SUBST_NOTMAKE([ENABLE_UPNP_TRUE])
m4trace:configure.ac:809: -1- _AM_SUBST_NOTMAKE([ENABLE_UPNP_FALSE])
m4trace:configure.ac:809: -1- m4_pattern_allow([^ENABLE_UPNP$])
m4trace:configure.ac:814: -1- MPD_ENABLE_AUTO_PKG([zzip], [ZZIP], [zziplib >= 0.13], [libzzip archive library], [libzzip not found], [no])
m4trace:configure.ac:814: -1- MPD_ARG_ENABLE([zzip], [ZZIP], [libzzip archive library], [no], [
		
		MPD_AUTO_PKG(zzip, ZZIP, zziplib >= 0.13, libzzip archive library, libzzip not found)
	])
m4trace:configure.ac:814: -3- MPD_FORMAT_DEFAULT([no])
m4trace:configure.ac:814: -1- MPD_AUTO_PKG([zzip], [ZZIP], [zziplib >= 0.13], [libzzip archive library], [libzzip not found])
m4trace:configure.ac:814: -1- MPD_AUTO([zzip], [libzzip archive library], [libzzip not found], [PKG_CHECK_MODULES([ZZIP], [zziplib >= 0.13],
			[found_zzip=yes],
			[found_zzip=no])])
m4trace:configure.ac:814: -1- PKG_CHECK_MODULES([ZZIP], [zziplib >= 0.13], [found_zzip=yes], [found_zzip=no])
m4trace:configure.ac:814: -1- m4_pattern_allow([^ZZIP_CFLAGS$])
m4trace:configure.ac:814: -1- m4_pattern_allow([^ZZIP_LIBS$])
m4trace:configure.ac:814: -1- PKG_CHECK_EXISTS([zziplib >= 0.13], [pkg_cv_[]ZZIP_CFLAGS=`$PKG_CONFIG --[]cflags "zziplib >= 0.13" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:814: -1- PKG_CHECK_EXISTS([zziplib >= 0.13], [pkg_cv_[]ZZIP_LIBS=`$PKG_CONFIG --[]libs "zziplib >= 0.13" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:814: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:814: -1- MPD_AUTO_RESULT([zzip], [libzzip archive library], [libzzip not found])
m4trace:configure.ac:814: -1- MPD_AUTO_ENABLED([zzip], [libzzip archive library])
m4trace:configure.ac:814: -1- MPD_AUTO_DISABLED([zzip], [libzzip archive library], [libzzip not found])
m4trace:configure.ac:814: -1- MPD_DEFINE_CONDITIONAL([enable_zzip], [ENABLE_ZZIP], [libzzip archive library])
m4trace:configure.ac:814: -1- AM_CONDITIONAL([ENABLE_ZZIP], [test x$enable_zzip = xyes])
m4trace:configure.ac:814: -1- m4_pattern_allow([^ENABLE_ZZIP_TRUE$])
m4trace:configure.ac:814: -1- m4_pattern_allow([^ENABLE_ZZIP_FALSE$])
m4trace:configure.ac:814: -1- _AM_SUBST_NOTMAKE([ENABLE_ZZIP_TRUE])
m4trace:configure.ac:814: -1- _AM_SUBST_NOTMAKE([ENABLE_ZZIP_FALSE])
m4trace:configure.ac:814: -1- m4_pattern_allow([^ENABLE_ZZIP$])
m4trace:configure.ac:819: -1- m4_pattern_allow([^ZIP$])
m4trace:configure.ac:824: -1- AM_CONDITIONAL([ENABLE_ZZIP_TEST], [test x$ZIP != xno])
m4trace:configure.ac:824: -1- m4_pattern_allow([^ENABLE_ZZIP_TEST_TRUE$])
m4trace:configure.ac:824: -1- m4_pattern_allow([^ENABLE_ZZIP_TEST_FALSE$])
m4trace:configure.ac:824: -1- _AM_SUBST_NOTMAKE([ENABLE_ZZIP_TEST_TRUE])
m4trace:configure.ac:824: -1- _AM_SUBST_NOTMAKE([ENABLE_ZZIP_TEST_FALSE])
m4trace:configure.ac:836: -1- MPD_DEFINE_CONDITIONAL([enable_archive], [ENABLE_ARCHIVE], [the archive API])
m4trace:configure.ac:836: -1- AM_CONDITIONAL([ENABLE_ARCHIVE], [test x$enable_archive = xyes])
m4trace:configure.ac:836: -1- m4_pattern_allow([^ENABLE_ARCHIVE_TRUE$])
m4trace:configure.ac:836: -1- m4_pattern_allow([^ENABLE_ARCHIVE_FALSE$])
m4trace:configure.ac:836: -1- _AM_SUBST_NOTMAKE([ENABLE_ARCHIVE_TRUE])
m4trace:configure.ac:836: -1- _AM_SUBST_NOTMAKE([ENABLE_ARCHIVE_FALSE])
m4trace:configure.ac:836: -1- m4_pattern_allow([^ENABLE_ARCHIVE$])
m4trace:configure.ac:843: -1- MPD_ENABLE_AUTO_PKG([adplug], [ADPLUG], [adplug], [AdPlug decoder plugin], [libadplug not found])
m4trace:configure.ac:843: -1- MPD_ARG_ENABLE([adplug], [ADPLUG], [AdPlug decoder plugin], [], [
		
		MPD_AUTO_PKG(adplug, ADPLUG, adplug, AdPlug decoder plugin, libadplug not found)
	])
m4trace:configure.ac:843: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:843: -1- MPD_AUTO_PKG([adplug], [ADPLUG], [adplug], [AdPlug decoder plugin], [libadplug not found])
m4trace:configure.ac:843: -1- MPD_AUTO([adplug], [AdPlug decoder plugin], [libadplug not found], [PKG_CHECK_MODULES([ADPLUG], [adplug],
			[found_adplug=yes],
			[found_adplug=no])])
m4trace:configure.ac:843: -1- PKG_CHECK_MODULES([ADPLUG], [adplug], [found_adplug=yes], [found_adplug=no])
m4trace:configure.ac:843: -1- m4_pattern_allow([^ADPLUG_CFLAGS$])
m4trace:configure.ac:843: -1- m4_pattern_allow([^ADPLUG_LIBS$])
m4trace:configure.ac:843: -1- PKG_CHECK_EXISTS([adplug], [pkg_cv_[]ADPLUG_CFLAGS=`$PKG_CONFIG --[]cflags "adplug" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:843: -1- PKG_CHECK_EXISTS([adplug], [pkg_cv_[]ADPLUG_LIBS=`$PKG_CONFIG --[]libs "adplug" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:843: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:843: -1- MPD_AUTO_RESULT([adplug], [AdPlug decoder plugin], [libadplug not found])
m4trace:configure.ac:843: -1- MPD_AUTO_ENABLED([adplug], [AdPlug decoder plugin])
m4trace:configure.ac:843: -1- MPD_AUTO_DISABLED([adplug], [AdPlug decoder plugin], [libadplug not found])
m4trace:configure.ac:843: -1- MPD_DEFINE_CONDITIONAL([enable_adplug], [ENABLE_ADPLUG], [AdPlug decoder plugin])
m4trace:configure.ac:843: -1- AM_CONDITIONAL([ENABLE_ADPLUG], [test x$enable_adplug = xyes])
m4trace:configure.ac:843: -1- m4_pattern_allow([^ENABLE_ADPLUG_TRUE$])
m4trace:configure.ac:843: -1- m4_pattern_allow([^ENABLE_ADPLUG_FALSE$])
m4trace:configure.ac:843: -1- _AM_SUBST_NOTMAKE([ENABLE_ADPLUG_TRUE])
m4trace:configure.ac:843: -1- _AM_SUBST_NOTMAKE([ENABLE_ADPLUG_FALSE])
m4trace:configure.ac:843: -1- m4_pattern_allow([^ENABLE_ADPLUG$])
m4trace:configure.ac:847: -1- MPD_ENABLE_AUTO_PKG([audiofile], [AUDIOFILE], [audiofile >= 0.3], [audiofile decoder plugin], [libaudiofile not found])
m4trace:configure.ac:847: -1- MPD_ARG_ENABLE([audiofile], [AUDIOFILE], [audiofile decoder plugin], [], [
		
		MPD_AUTO_PKG(audiofile, AUDIOFILE, audiofile >= 0.3, audiofile decoder plugin, libaudiofile not found)
	])
m4trace:configure.ac:847: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:847: -1- MPD_AUTO_PKG([audiofile], [AUDIOFILE], [audiofile >= 0.3], [audiofile decoder plugin], [libaudiofile not found])
m4trace:configure.ac:847: -1- MPD_AUTO([audiofile], [audiofile decoder plugin], [libaudiofile not found], [PKG_CHECK_MODULES([AUDIOFILE], [audiofile >= 0.3],
			[found_audiofile=yes],
			[found_audiofile=no])])
m4trace:configure.ac:847: -1- PKG_CHECK_MODULES([AUDIOFILE], [audiofile >= 0.3], [found_audiofile=yes], [found_audiofile=no])
m4trace:configure.ac:847: -1- m4_pattern_allow([^AUDIOFILE_CFLAGS$])
m4trace:configure.ac:847: -1- m4_pattern_allow([^AUDIOFILE_LIBS$])
m4trace:configure.ac:847: -1- PKG_CHECK_EXISTS([audiofile >= 0.3], [pkg_cv_[]AUDIOFILE_CFLAGS=`$PKG_CONFIG --[]cflags "audiofile >= 0.3" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:847: -1- PKG_CHECK_EXISTS([audiofile >= 0.3], [pkg_cv_[]AUDIOFILE_LIBS=`$PKG_CONFIG --[]libs "audiofile >= 0.3" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:847: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:847: -1- MPD_AUTO_RESULT([audiofile], [audiofile decoder plugin], [libaudiofile not found])
m4trace:configure.ac:847: -1- MPD_AUTO_ENABLED([audiofile], [audiofile decoder plugin])
m4trace:configure.ac:847: -1- MPD_AUTO_DISABLED([audiofile], [audiofile decoder plugin], [libaudiofile not found])
m4trace:configure.ac:847: -1- MPD_DEFINE_CONDITIONAL([enable_audiofile], [ENABLE_AUDIOFILE], [audiofile decoder plugin])
m4trace:configure.ac:847: -1- AM_CONDITIONAL([ENABLE_AUDIOFILE], [test x$enable_audiofile = xyes])
m4trace:configure.ac:847: -1- m4_pattern_allow([^ENABLE_AUDIOFILE_TRUE$])
m4trace:configure.ac:847: -1- m4_pattern_allow([^ENABLE_AUDIOFILE_FALSE$])
m4trace:configure.ac:847: -1- _AM_SUBST_NOTMAKE([ENABLE_AUDIOFILE_TRUE])
m4trace:configure.ac:847: -1- _AM_SUBST_NOTMAKE([ENABLE_AUDIOFILE_FALSE])
m4trace:configure.ac:847: -1- m4_pattern_allow([^ENABLE_AUDIOFILE$])
m4trace:configure.ac:852: -1- MPD_DEFINE_CONDITIONAL([enable_dsd], [ENABLE_DSD], [DSD decoder])
m4trace:configure.ac:852: -1- AM_CONDITIONAL([ENABLE_DSD], [test x$enable_dsd = xyes])
m4trace:configure.ac:852: -1- m4_pattern_allow([^ENABLE_DSD_TRUE$])
m4trace:configure.ac:852: -1- m4_pattern_allow([^ENABLE_DSD_FALSE$])
m4trace:configure.ac:852: -1- _AM_SUBST_NOTMAKE([ENABLE_DSD_TRUE])
m4trace:configure.ac:852: -1- _AM_SUBST_NOTMAKE([ENABLE_DSD_FALSE])
m4trace:configure.ac:852: -1- m4_pattern_allow([^ENABLE_DSD$])
m4trace:configure.ac:855: -1- MPD_ENABLE_AUTO_LIB([aac], [FAAD], [faad], [NeAACDecOpen], [-lfaad], [], [FAAD decoder plugin], [libfaad not found])
m4trace:configure.ac:855: -1- MPD_ARG_ENABLE([aac], [FAAD], [FAAD decoder plugin], [], [
		
		MPD_AUTO_LIB(aac, FAAD, faad, NeAACDecOpen, -lfaad, , FAAD decoder plugin, libfaad not found)
	])
m4trace:configure.ac:855: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:855: -1- MPD_AUTO_LIB([aac], [FAAD], [faad], [NeAACDecOpen], [-lfaad], [], [FAAD decoder plugin], [libfaad not found])
m4trace:configure.ac:855: -1- m4_pattern_allow([^FAAD_LIBS$])
m4trace:configure.ac:855: -1- m4_pattern_allow([^FAAD_CFLAGS$])
m4trace:configure.ac:855: -1- MPD_AUTO([aac], [FAAD decoder plugin], [libfaad not found], [AC_CHECK_LIB(faad, NeAACDecOpen,
			[found_aac=yes FAAD_LIBS='-lfaad' FAAD_CFLAGS=''],
			[found_aac=no],
			[-lfaad])])
m4trace:configure.ac:855: -1- MPD_AUTO_RESULT([aac], [FAAD decoder plugin], [libfaad not found])
m4trace:configure.ac:855: -1- MPD_AUTO_ENABLED([aac], [FAAD decoder plugin])
m4trace:configure.ac:855: -1- MPD_AUTO_DISABLED([aac], [FAAD decoder plugin], [libfaad not found])
m4trace:configure.ac:855: -1- MPD_DEFINE_CONDITIONAL([enable_aac], [ENABLE_FAAD], [FAAD decoder plugin])
m4trace:configure.ac:855: -1- AM_CONDITIONAL([ENABLE_FAAD], [test x$enable_aac = xyes])
m4trace:configure.ac:855: -1- m4_pattern_allow([^ENABLE_FAAD_TRUE$])
m4trace:configure.ac:855: -1- m4_pattern_allow([^ENABLE_FAAD_FALSE$])
m4trace:configure.ac:855: -1- _AM_SUBST_NOTMAKE([ENABLE_FAAD_TRUE])
m4trace:configure.ac:855: -1- _AM_SUBST_NOTMAKE([ENABLE_FAAD_FALSE])
m4trace:configure.ac:855: -1- m4_pattern_allow([^ENABLE_FAAD$])
m4trace:configure.ac:859: -1- MPD_ENABLE_AUTO_PKG([ffmpeg], [FFMPEG], [libavformat >= 53.17 libavcodec >= 53.25 libavutil >= 51.17], [ffmpeg decoder library], [libavformat+libavcodec+libavutil not found])
m4trace:configure.ac:859: -1- MPD_ARG_ENABLE([ffmpeg], [FFMPEG], [ffmpeg decoder library], [], [
		
		MPD_AUTO_PKG(ffmpeg, FFMPEG, libavformat >= 53.17 libavcodec >= 53.25 libavutil >= 51.17, ffmpeg decoder library, libavformat+libavcodec+libavutil not found)
	])
m4trace:configure.ac:859: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:859: -1- MPD_AUTO_PKG([ffmpeg], [FFMPEG], [libavformat >= 53.17 libavcodec >= 53.25 libavutil >= 51.17], [ffmpeg decoder library], [libavformat+libavcodec+libavutil not found])
m4trace:configure.ac:859: -1- MPD_AUTO([ffmpeg], [ffmpeg decoder library], [libavformat+libavcodec+libavutil not found], [PKG_CHECK_MODULES([FFMPEG], [libavformat >= 53.17 libavcodec >= 53.25 libavutil >= 51.17],
			[found_ffmpeg=yes],
			[found_ffmpeg=no])])
m4trace:configure.ac:859: -1- PKG_CHECK_MODULES([FFMPEG], [libavformat >= 53.17 libavcodec >= 53.25 libavutil >= 51.17], [found_ffmpeg=yes], [found_ffmpeg=no])
m4trace:configure.ac:859: -1- m4_pattern_allow([^FFMPEG_CFLAGS$])
m4trace:configure.ac:859: -1- m4_pattern_allow([^FFMPEG_LIBS$])
m4trace:configure.ac:859: -1- PKG_CHECK_EXISTS([libavformat >= 53.17 libavcodec >= 53.25 libavutil >= 51.17], [pkg_cv_[]FFMPEG_CFLAGS=`$PKG_CONFIG --[]cflags "libavformat >= 53.17 libavcodec >= 53.25 libavutil >= 51.17" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:859: -1- PKG_CHECK_EXISTS([libavformat >= 53.17 libavcodec >= 53.25 libavutil >= 51.17], [pkg_cv_[]FFMPEG_LIBS=`$PKG_CONFIG --[]libs "libavformat >= 53.17 libavcodec >= 53.25 libavutil >= 51.17" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:859: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:859: -1- MPD_AUTO_RESULT([ffmpeg], [ffmpeg decoder library], [libavformat+libavcodec+libavutil not found])
m4trace:configure.ac:859: -1- MPD_AUTO_ENABLED([ffmpeg], [ffmpeg decoder library])
m4trace:configure.ac:859: -1- MPD_AUTO_DISABLED([ffmpeg], [ffmpeg decoder library], [libavformat+libavcodec+libavutil not found])
m4trace:configure.ac:859: -1- MPD_DEFINE_CONDITIONAL([enable_ffmpeg], [ENABLE_FFMPEG], [ffmpeg decoder library])
m4trace:configure.ac:859: -1- AM_CONDITIONAL([ENABLE_FFMPEG], [test x$enable_ffmpeg = xyes])
m4trace:configure.ac:859: -1- m4_pattern_allow([^ENABLE_FFMPEG_TRUE$])
m4trace:configure.ac:859: -1- m4_pattern_allow([^ENABLE_FFMPEG_FALSE$])
m4trace:configure.ac:859: -1- _AM_SUBST_NOTMAKE([ENABLE_FFMPEG_TRUE])
m4trace:configure.ac:859: -1- _AM_SUBST_NOTMAKE([ENABLE_FFMPEG_FALSE])
m4trace:configure.ac:859: -1- m4_pattern_allow([^ENABLE_FFMPEG$])
m4trace:configure.ac:865: -1- MPD_ENABLE_AUTO_PKG([flac], [FLAC], [flac >= 1.2], [FLAC decoder], [libFLAC not found])
m4trace:configure.ac:865: -1- MPD_ARG_ENABLE([flac], [FLAC], [FLAC decoder], [], [
		
		MPD_AUTO_PKG(flac, FLAC, flac >= 1.2, FLAC decoder, libFLAC not found)
	])
m4trace:configure.ac:865: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:865: -1- MPD_AUTO_PKG([flac], [FLAC], [flac >= 1.2], [FLAC decoder], [libFLAC not found])
m4trace:configure.ac:865: -1- MPD_AUTO([flac], [FLAC decoder], [libFLAC not found], [PKG_CHECK_MODULES([FLAC], [flac >= 1.2],
			[found_flac=yes],
			[found_flac=no])])
m4trace:configure.ac:865: -1- PKG_CHECK_MODULES([FLAC], [flac >= 1.2], [found_flac=yes], [found_flac=no])
m4trace:configure.ac:865: -1- m4_pattern_allow([^FLAC_CFLAGS$])
m4trace:configure.ac:865: -1- m4_pattern_allow([^FLAC_LIBS$])
m4trace:configure.ac:865: -1- PKG_CHECK_EXISTS([flac >= 1.2], [pkg_cv_[]FLAC_CFLAGS=`$PKG_CONFIG --[]cflags "flac >= 1.2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:865: -1- PKG_CHECK_EXISTS([flac >= 1.2], [pkg_cv_[]FLAC_LIBS=`$PKG_CONFIG --[]libs "flac >= 1.2" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:865: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:865: -1- MPD_AUTO_RESULT([flac], [FLAC decoder], [libFLAC not found])
m4trace:configure.ac:865: -1- MPD_AUTO_ENABLED([flac], [FLAC decoder])
m4trace:configure.ac:865: -1- MPD_AUTO_DISABLED([flac], [FLAC decoder], [libFLAC not found])
m4trace:configure.ac:865: -1- MPD_DEFINE_CONDITIONAL([enable_flac], [ENABLE_FLAC], [FLAC decoder])
m4trace:configure.ac:865: -1- AM_CONDITIONAL([ENABLE_FLAC], [test x$enable_flac = xyes])
m4trace:configure.ac:865: -1- m4_pattern_allow([^ENABLE_FLAC_TRUE$])
m4trace:configure.ac:865: -1- m4_pattern_allow([^ENABLE_FLAC_FALSE$])
m4trace:configure.ac:865: -1- _AM_SUBST_NOTMAKE([ENABLE_FLAC_TRUE])
m4trace:configure.ac:865: -1- _AM_SUBST_NOTMAKE([ENABLE_FLAC_FALSE])
m4trace:configure.ac:865: -1- m4_pattern_allow([^ENABLE_FLAC$])
m4trace:configure.ac:872: -1- MPD_ENABLE_AUTO_PKG([fluidsynth], [FLUIDSYNTH], [fluidsynth >= 1.1], [fluidsynth MIDI decoder plugin], [fluidsynth not found])
m4trace:configure.ac:872: -1- MPD_ARG_ENABLE([fluidsynth], [FLUIDSYNTH], [fluidsynth MIDI decoder plugin], [], [
		
		MPD_AUTO_PKG(fluidsynth, FLUIDSYNTH, fluidsynth >= 1.1, fluidsynth MIDI decoder plugin, fluidsynth not found)
	])
m4trace:configure.ac:872: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:872: -1- MPD_AUTO_PKG([fluidsynth], [FLUIDSYNTH], [fluidsynth >= 1.1], [fluidsynth MIDI decoder plugin], [fluidsynth not found])
m4trace:configure.ac:872: -1- MPD_AUTO([fluidsynth], [fluidsynth MIDI decoder plugin], [fluidsynth not found], [PKG_CHECK_MODULES([FLUIDSYNTH], [fluidsynth >= 1.1],
			[found_fluidsynth=yes],
			[found_fluidsynth=no])])
m4trace:configure.ac:872: -1- PKG_CHECK_MODULES([FLUIDSYNTH], [fluidsynth >= 1.1], [found_fluidsynth=yes], [found_fluidsynth=no])
m4trace:configure.ac:872: -1- m4_pattern_allow([^FLUIDSYNTH_CFLAGS$])
m4trace:configure.ac:872: -1- m4_pattern_allow([^FLUIDSYNTH_LIBS$])
m4trace:configure.ac:872: -1- PKG_CHECK_EXISTS([fluidsynth >= 1.1], [pkg_cv_[]FLUIDSYNTH_CFLAGS=`$PKG_CONFIG --[]cflags "fluidsynth >= 1.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:872: -1- PKG_CHECK_EXISTS([fluidsynth >= 1.1], [pkg_cv_[]FLUIDSYNTH_LIBS=`$PKG_CONFIG --[]libs "fluidsynth >= 1.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:872: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:872: -1- MPD_AUTO_RESULT([fluidsynth], [fluidsynth MIDI decoder plugin], [fluidsynth not found])
m4trace:configure.ac:872: -1- MPD_AUTO_ENABLED([fluidsynth], [fluidsynth MIDI decoder plugin])
m4trace:configure.ac:872: -1- MPD_AUTO_DISABLED([fluidsynth], [fluidsynth MIDI decoder plugin], [fluidsynth not found])
m4trace:configure.ac:872: -1- MPD_DEFINE_CONDITIONAL([enable_fluidsynth], [ENABLE_FLUIDSYNTH], [fluidsynth MIDI decoder plugin])
m4trace:configure.ac:872: -1- AM_CONDITIONAL([ENABLE_FLUIDSYNTH], [test x$enable_fluidsynth = xyes])
m4trace:configure.ac:872: -1- m4_pattern_allow([^ENABLE_FLUIDSYNTH_TRUE$])
m4trace:configure.ac:872: -1- m4_pattern_allow([^ENABLE_FLUIDSYNTH_FALSE$])
m4trace:configure.ac:872: -1- _AM_SUBST_NOTMAKE([ENABLE_FLUIDSYNTH_TRUE])
m4trace:configure.ac:872: -1- _AM_SUBST_NOTMAKE([ENABLE_FLUIDSYNTH_FALSE])
m4trace:configure.ac:872: -1- m4_pattern_allow([^ENABLE_FLUIDSYNTH$])
m4trace:configure.ac:877: -1- MPD_ENABLE_AUTO_PKG_LIB([gme], [GME], [libgme], [gme], [gme_open_file], [-lgme], [], [Game Music Emulator decoder plugin], [libgme not found])
m4trace:configure.ac:877: -1- MPD_ARG_ENABLE([gme], [GME], [Game Music Emulator decoder plugin], [], [
		
		MPD_AUTO_PKG_LIB(gme, GME, libgme, gme, gme_open_file, -lgme, , Game Music Emulator decoder plugin, libgme not found)
	])
m4trace:configure.ac:877: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:877: -1- MPD_AUTO_PKG_LIB([gme], [GME], [libgme], [gme], [gme_open_file], [-lgme], [], [Game Music Emulator decoder plugin], [libgme not found])
m4trace:configure.ac:877: -1- MPD_AUTO([gme], [Game Music Emulator decoder plugin], [libgme not found], [PKG_CHECK_MODULES([GME], [libgme],
			[found_gme=yes],
			AC_CHECK_LIB(gme, gme_open_file,
				[found_gme=yes GME_LIBS='-lgme' GME_CFLAGS=''],
				[found_gme=no],
				[-lgme]))])
m4trace:configure.ac:877: -1- PKG_CHECK_MODULES([GME], [libgme], [found_gme=yes], [{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for gme_open_file in -lgme" >&5
$as_echo_n "checking for gme_open_file in -lgme... " >&6; }
if ${ac_cv_lib_gme_gme_open_file+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-lgme -lgme $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char gme_open_file ();
int
main ()
{
return gme_open_file ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  ac_cv_lib_gme_gme_open_file=yes
else
  ac_cv_lib_gme_gme_open_file=no
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_gme_gme_open_file" >&5
$as_echo "$ac_cv_lib_gme_gme_open_file" >&6; }
if test "x$ac_cv_lib_gme_gme_open_file" = xyes; then :
  found_gme=yes GME_LIBS='-lgme' GME_CFLAGS=''
else
  found_gme=no
fi
])
m4trace:configure.ac:877: -1- m4_pattern_allow([^GME_CFLAGS$])
m4trace:configure.ac:877: -1- m4_pattern_allow([^GME_LIBS$])
m4trace:configure.ac:877: -1- PKG_CHECK_EXISTS([libgme], [pkg_cv_[]GME_CFLAGS=`$PKG_CONFIG --[]cflags "libgme" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:877: -1- PKG_CHECK_EXISTS([libgme], [pkg_cv_[]GME_LIBS=`$PKG_CONFIG --[]libs "libgme" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:877: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:877: -1- MPD_AUTO_RESULT([gme], [Game Music Emulator decoder plugin], [libgme not found])
m4trace:configure.ac:877: -1- MPD_AUTO_ENABLED([gme], [Game Music Emulator decoder plugin])
m4trace:configure.ac:877: -1- MPD_AUTO_DISABLED([gme], [Game Music Emulator decoder plugin], [libgme not found])
m4trace:configure.ac:877: -1- MPD_DEFINE_CONDITIONAL([enable_gme], [ENABLE_GME], [Game Music Emulator decoder plugin])
m4trace:configure.ac:877: -1- AM_CONDITIONAL([ENABLE_GME], [test x$enable_gme = xyes])
m4trace:configure.ac:877: -1- m4_pattern_allow([^ENABLE_GME_TRUE$])
m4trace:configure.ac:877: -1- m4_pattern_allow([^ENABLE_GME_FALSE$])
m4trace:configure.ac:877: -1- _AM_SUBST_NOTMAKE([ENABLE_GME_TRUE])
m4trace:configure.ac:877: -1- _AM_SUBST_NOTMAKE([ENABLE_GME_FALSE])
m4trace:configure.ac:877: -1- m4_pattern_allow([^ENABLE_GME$])
m4trace:configure.ac:882: -1- MPD_ENABLE_AUTO_PKG_LIB([mad], [MAD], [mad], [mad], [mad_stream_init], [-lmad], [], [libmad MP3 decoder plugin], [libmad not found])
m4trace:configure.ac:882: -1- MPD_ARG_ENABLE([mad], [MAD], [libmad MP3 decoder plugin], [], [
		
		MPD_AUTO_PKG_LIB(mad, MAD, mad, mad, mad_stream_init, -lmad, , libmad MP3 decoder plugin, libmad not found)
	])
m4trace:configure.ac:882: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:882: -1- MPD_AUTO_PKG_LIB([mad], [MAD], [mad], [mad], [mad_stream_init], [-lmad], [], [libmad MP3 decoder plugin], [libmad not found])
m4trace:configure.ac:882: -1- MPD_AUTO([mad], [libmad MP3 decoder plugin], [libmad not found], [PKG_CHECK_MODULES([MAD], [mad],
			[found_mad=yes],
			AC_CHECK_LIB(mad, mad_stream_init,
				[found_mad=yes MAD_LIBS='-lmad' MAD_CFLAGS=''],
				[found_mad=no],
				[-lmad]))])
m4trace:configure.ac:882: -1- PKG_CHECK_MODULES([MAD], [mad], [found_mad=yes], [{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for mad_stream_init in -lmad" >&5
$as_echo_n "checking for mad_stream_init in -lmad... " >&6; }
if ${ac_cv_lib_mad_mad_stream_init+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-lmad -lmad $LIBS"
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

/* Override any GCC internal prototype to avoid an error.
   Use char because int might match the return type of a GCC
   builtin and then its argument prototype would still apply.  */
#ifdef __cplusplus
extern "C"
#endif
char mad_stream_init ();
int
main ()
{
return mad_stream_init ();
  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :
  ac_cv_lib_mad_mad_stream_init=yes
else
  ac_cv_lib_mad_mad_stream_init=no
fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_mad_mad_stream_init" >&5
$as_echo "$ac_cv_lib_mad_mad_stream_init" >&6; }
if test "x$ac_cv_lib_mad_mad_stream_init" = xyes; then :
  found_mad=yes MAD_LIBS='-lmad' MAD_CFLAGS=''
else
  found_mad=no
fi
])
m4trace:configure.ac:882: -1- m4_pattern_allow([^MAD_CFLAGS$])
m4trace:configure.ac:882: -1- m4_pattern_allow([^MAD_LIBS$])
m4trace:configure.ac:882: -1- PKG_CHECK_EXISTS([mad], [pkg_cv_[]MAD_CFLAGS=`$PKG_CONFIG --[]cflags "mad" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:882: -1- PKG_CHECK_EXISTS([mad], [pkg_cv_[]MAD_LIBS=`$PKG_CONFIG --[]libs "mad" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:882: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:882: -1- MPD_AUTO_RESULT([mad], [libmad MP3 decoder plugin], [libmad not found])
m4trace:configure.ac:882: -1- MPD_AUTO_ENABLED([mad], [libmad MP3 decoder plugin])
m4trace:configure.ac:882: -1- MPD_AUTO_DISABLED([mad], [libmad MP3 decoder plugin], [libmad not found])
m4trace:configure.ac:882: -1- MPD_DEFINE_CONDITIONAL([enable_mad], [ENABLE_MAD], [libmad MP3 decoder plugin])
m4trace:configure.ac:882: -1- AM_CONDITIONAL([ENABLE_MAD], [test x$enable_mad = xyes])
m4trace:configure.ac:882: -1- m4_pattern_allow([^ENABLE_MAD_TRUE$])
m4trace:configure.ac:882: -1- m4_pattern_allow([^ENABLE_MAD_FALSE$])
m4trace:configure.ac:882: -1- _AM_SUBST_NOTMAKE([ENABLE_MAD_TRUE])
m4trace:configure.ac:882: -1- _AM_SUBST_NOTMAKE([ENABLE_MAD_FALSE])
m4trace:configure.ac:882: -1- m4_pattern_allow([^ENABLE_MAD$])
m4trace:configure.ac:887: -1- MPD_AUTO_PKG([shout], [SHOUT], [shout], [shout output plugin], [libshout not found])
m4trace:configure.ac:887: -1- MPD_AUTO([shout], [shout output plugin], [libshout not found], [PKG_CHECK_MODULES([SHOUT], [shout],
			[found_shout=yes],
			[found_shout=no])])
m4trace:configure.ac:887: -1- PKG_CHECK_MODULES([SHOUT], [shout], [found_shout=yes], [found_shout=no])
m4trace:configure.ac:887: -1- m4_pattern_allow([^SHOUT_CFLAGS$])
m4trace:configure.ac:887: -1- m4_pattern_allow([^SHOUT_LIBS$])
m4trace:configure.ac:887: -1- PKG_CHECK_EXISTS([shout], [pkg_cv_[]SHOUT_CFLAGS=`$PKG_CONFIG --[]cflags "shout" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:887: -1- PKG_CHECK_EXISTS([shout], [pkg_cv_[]SHOUT_LIBS=`$PKG_CONFIG --[]libs "shout" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:887: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:887: -1- MPD_AUTO_RESULT([shout], [shout output plugin], [libshout not found])
m4trace:configure.ac:887: -1- MPD_AUTO_ENABLED([shout], [shout output plugin])
m4trace:configure.ac:887: -1- MPD_AUTO_DISABLED([shout], [shout output plugin], [libshout not found])
m4trace:configure.ac:894: -1- MPD_ENABLE_AUTO_PKG([mpg123], [MPG123], [libmpg123], [libmpg123 decoder plugin], [libmpg123 not found])
m4trace:configure.ac:894: -1- MPD_ARG_ENABLE([mpg123], [MPG123], [libmpg123 decoder plugin], [], [
		
		MPD_AUTO_PKG(mpg123, MPG123, libmpg123, libmpg123 decoder plugin, libmpg123 not found)
	])
m4trace:configure.ac:894: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:894: -1- MPD_AUTO_PKG([mpg123], [MPG123], [libmpg123], [libmpg123 decoder plugin], [libmpg123 not found])
m4trace:configure.ac:894: -1- MPD_AUTO([mpg123], [libmpg123 decoder plugin], [libmpg123 not found], [PKG_CHECK_MODULES([MPG123], [libmpg123],
			[found_mpg123=yes],
			[found_mpg123=no])])
m4trace:configure.ac:894: -1- PKG_CHECK_MODULES([MPG123], [libmpg123], [found_mpg123=yes], [found_mpg123=no])
m4trace:configure.ac:894: -1- m4_pattern_allow([^MPG123_CFLAGS$])
m4trace:configure.ac:894: -1- m4_pattern_allow([^MPG123_LIBS$])
m4trace:configure.ac:894: -1- PKG_CHECK_EXISTS([libmpg123], [pkg_cv_[]MPG123_CFLAGS=`$PKG_CONFIG --[]cflags "libmpg123" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:894: -1- PKG_CHECK_EXISTS([libmpg123], [pkg_cv_[]MPG123_LIBS=`$PKG_CONFIG --[]libs "libmpg123" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:894: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:894: -1- MPD_AUTO_RESULT([mpg123], [libmpg123 decoder plugin], [libmpg123 not found])
m4trace:configure.ac:894: -1- MPD_AUTO_ENABLED([mpg123], [libmpg123 decoder plugin])
m4trace:configure.ac:894: -1- MPD_AUTO_DISABLED([mpg123], [libmpg123 decoder plugin], [libmpg123 not found])
m4trace:configure.ac:894: -1- MPD_DEFINE_CONDITIONAL([enable_mpg123], [ENABLE_MPG123], [libmpg123 decoder plugin])
m4trace:configure.ac:894: -1- AM_CONDITIONAL([ENABLE_MPG123], [test x$enable_mpg123 = xyes])
m4trace:configure.ac:894: -1- m4_pattern_allow([^ENABLE_MPG123_TRUE$])
m4trace:configure.ac:894: -1- m4_pattern_allow([^ENABLE_MPG123_FALSE$])
m4trace:configure.ac:894: -1- _AM_SUBST_NOTMAKE([ENABLE_MPG123_TRUE])
m4trace:configure.ac:894: -1- _AM_SUBST_NOTMAKE([ENABLE_MPG123_FALSE])
m4trace:configure.ac:894: -1- m4_pattern_allow([^ENABLE_MPG123$])
m4trace:configure.ac:899: -1- m4_pattern_allow([^LIBMIKMOD_CONFIG$])
m4trace:configure.ac:901: -1- m4_pattern_allow([^LIBMIKMOD_CFLAGS$])
m4trace:configure.ac:902: -1- m4_pattern_allow([^LIBMIKMOD_LIBS$])
m4trace:configure.ac:903: -1- m4_pattern_allow([^ENABLE_MIKMOD_DECODER$])
m4trace:configure.ac:909: -1- AM_CONDITIONAL([ENABLE_MIKMOD_DECODER], [test x$enable_mikmod = xyes])
m4trace:configure.ac:909: -1- m4_pattern_allow([^ENABLE_MIKMOD_DECODER_TRUE$])
m4trace:configure.ac:909: -1- m4_pattern_allow([^ENABLE_MIKMOD_DECODER_FALSE$])
m4trace:configure.ac:909: -1- _AM_SUBST_NOTMAKE([ENABLE_MIKMOD_DECODER_TRUE])
m4trace:configure.ac:909: -1- _AM_SUBST_NOTMAKE([ENABLE_MIKMOD_DECODER_FALSE])
m4trace:configure.ac:912: -1- MPD_ENABLE_AUTO_PKG([modplug], [MODPLUG], [libmodplug], [modplug decoder plugin], [libmodplug not found])
m4trace:configure.ac:912: -1- MPD_ARG_ENABLE([modplug], [MODPLUG], [modplug decoder plugin], [], [
		
		MPD_AUTO_PKG(modplug, MODPLUG, libmodplug, modplug decoder plugin, libmodplug not found)
	])
m4trace:configure.ac:912: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:912: -1- MPD_AUTO_PKG([modplug], [MODPLUG], [libmodplug], [modplug decoder plugin], [libmodplug not found])
m4trace:configure.ac:912: -1- MPD_AUTO([modplug], [modplug decoder plugin], [libmodplug not found], [PKG_CHECK_MODULES([MODPLUG], [libmodplug],
			[found_modplug=yes],
			[found_modplug=no])])
m4trace:configure.ac:912: -1- PKG_CHECK_MODULES([MODPLUG], [libmodplug], [found_modplug=yes], [found_modplug=no])
m4trace:configure.ac:912: -1- m4_pattern_allow([^MODPLUG_CFLAGS$])
m4trace:configure.ac:912: -1- m4_pattern_allow([^MODPLUG_LIBS$])
m4trace:configure.ac:912: -1- PKG_CHECK_EXISTS([libmodplug], [pkg_cv_[]MODPLUG_CFLAGS=`$PKG_CONFIG --[]cflags "libmodplug" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:912: -1- PKG_CHECK_EXISTS([libmodplug], [pkg_cv_[]MODPLUG_LIBS=`$PKG_CONFIG --[]libs "libmodplug" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:912: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:912: -1- MPD_AUTO_RESULT([modplug], [modplug decoder plugin], [libmodplug not found])
m4trace:configure.ac:912: -1- MPD_AUTO_ENABLED([modplug], [modplug decoder plugin])
m4trace:configure.ac:912: -1- MPD_AUTO_DISABLED([modplug], [modplug decoder plugin], [libmodplug not found])
m4trace:configure.ac:912: -1- MPD_DEFINE_CONDITIONAL([enable_modplug], [ENABLE_MODPLUG], [modplug decoder plugin])
m4trace:configure.ac:912: -1- AM_CONDITIONAL([ENABLE_MODPLUG], [test x$enable_modplug = xyes])
m4trace:configure.ac:912: -1- m4_pattern_allow([^ENABLE_MODPLUG_TRUE$])
m4trace:configure.ac:912: -1- m4_pattern_allow([^ENABLE_MODPLUG_FALSE$])
m4trace:configure.ac:912: -1- _AM_SUBST_NOTMAKE([ENABLE_MODPLUG_TRUE])
m4trace:configure.ac:912: -1- _AM_SUBST_NOTMAKE([ENABLE_MODPLUG_FALSE])
m4trace:configure.ac:912: -1- m4_pattern_allow([^ENABLE_MODPLUG$])
m4trace:configure.ac:916: -1- MPD_ENABLE_AUTO_PKG([opus], [OPUS], [opus ogg], [opus decoder plugin], [libopus not found])
m4trace:configure.ac:916: -1- MPD_ARG_ENABLE([opus], [OPUS], [opus decoder plugin], [], [
		
		MPD_AUTO_PKG(opus, OPUS, opus ogg, opus decoder plugin, libopus not found)
	])
m4trace:configure.ac:916: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:916: -1- MPD_AUTO_PKG([opus], [OPUS], [opus ogg], [opus decoder plugin], [libopus not found])
m4trace:configure.ac:916: -1- MPD_AUTO([opus], [opus decoder plugin], [libopus not found], [PKG_CHECK_MODULES([OPUS], [opus ogg],
			[found_opus=yes],
			[found_opus=no])])
m4trace:configure.ac:916: -1- PKG_CHECK_MODULES([OPUS], [opus ogg], [found_opus=yes], [found_opus=no])
m4trace:configure.ac:916: -1- m4_pattern_allow([^OPUS_CFLAGS$])
m4trace:configure.ac:916: -1- m4_pattern_allow([^OPUS_LIBS$])
m4trace:configure.ac:916: -1- PKG_CHECK_EXISTS([opus ogg], [pkg_cv_[]OPUS_CFLAGS=`$PKG_CONFIG --[]cflags "opus ogg" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:916: -1- PKG_CHECK_EXISTS([opus ogg], [pkg_cv_[]OPUS_LIBS=`$PKG_CONFIG --[]libs "opus ogg" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:916: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:916: -1- MPD_AUTO_RESULT([opus], [opus decoder plugin], [libopus not found])
m4trace:configure.ac:916: -1- MPD_AUTO_ENABLED([opus], [opus decoder plugin])
m4trace:configure.ac:916: -1- MPD_AUTO_DISABLED([opus], [opus decoder plugin], [libopus not found])
m4trace:configure.ac:916: -1- MPD_DEFINE_CONDITIONAL([enable_opus], [ENABLE_OPUS], [opus decoder plugin])
m4trace:configure.ac:916: -1- AM_CONDITIONAL([ENABLE_OPUS], [test x$enable_opus = xyes])
m4trace:configure.ac:916: -1- m4_pattern_allow([^ENABLE_OPUS_TRUE$])
m4trace:configure.ac:916: -1- m4_pattern_allow([^ENABLE_OPUS_FALSE$])
m4trace:configure.ac:916: -1- _AM_SUBST_NOTMAKE([ENABLE_OPUS_TRUE])
m4trace:configure.ac:916: -1- _AM_SUBST_NOTMAKE([ENABLE_OPUS_FALSE])
m4trace:configure.ac:916: -1- m4_pattern_allow([^ENABLE_OPUS$])
m4trace:configure.ac:921: -1- MPD_ENABLE_AUTO_PKG([sndfile], [SNDFILE], [sndfile], [libsndfile decoder plugin], [libsndfile not found])
m4trace:configure.ac:921: -1- MPD_ARG_ENABLE([sndfile], [SNDFILE], [libsndfile decoder plugin], [], [
		
		MPD_AUTO_PKG(sndfile, SNDFILE, sndfile, libsndfile decoder plugin, libsndfile not found)
	])
m4trace:configure.ac:921: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:921: -1- MPD_AUTO_PKG([sndfile], [SNDFILE], [sndfile], [libsndfile decoder plugin], [libsndfile not found])
m4trace:configure.ac:921: -1- MPD_AUTO([sndfile], [libsndfile decoder plugin], [libsndfile not found], [PKG_CHECK_MODULES([SNDFILE], [sndfile],
			[found_sndfile=yes],
			[found_sndfile=no])])
m4trace:configure.ac:921: -1- PKG_CHECK_MODULES([SNDFILE], [sndfile], [found_sndfile=yes], [found_sndfile=no])
m4trace:configure.ac:921: -1- m4_pattern_allow([^SNDFILE_CFLAGS$])
m4trace:configure.ac:921: -1- m4_pattern_allow([^SNDFILE_LIBS$])
m4trace:configure.ac:921: -1- PKG_CHECK_EXISTS([sndfile], [pkg_cv_[]SNDFILE_CFLAGS=`$PKG_CONFIG --[]cflags "sndfile" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:921: -1- PKG_CHECK_EXISTS([sndfile], [pkg_cv_[]SNDFILE_LIBS=`$PKG_CONFIG --[]libs "sndfile" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:921: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:921: -1- MPD_AUTO_RESULT([sndfile], [libsndfile decoder plugin], [libsndfile not found])
m4trace:configure.ac:921: -1- MPD_AUTO_ENABLED([sndfile], [libsndfile decoder plugin])
m4trace:configure.ac:921: -1- MPD_AUTO_DISABLED([sndfile], [libsndfile decoder plugin], [libsndfile not found])
m4trace:configure.ac:921: -1- MPD_DEFINE_CONDITIONAL([enable_sndfile], [ENABLE_SNDFILE], [libsndfile decoder plugin])
m4trace:configure.ac:921: -1- AM_CONDITIONAL([ENABLE_SNDFILE], [test x$enable_sndfile = xyes])
m4trace:configure.ac:921: -1- m4_pattern_allow([^ENABLE_SNDFILE_TRUE$])
m4trace:configure.ac:921: -1- m4_pattern_allow([^ENABLE_SNDFILE_FALSE$])
m4trace:configure.ac:921: -1- _AM_SUBST_NOTMAKE([ENABLE_SNDFILE_TRUE])
m4trace:configure.ac:921: -1- _AM_SUBST_NOTMAKE([ENABLE_SNDFILE_FALSE])
m4trace:configure.ac:921: -1- m4_pattern_allow([^ENABLE_SNDFILE$])
m4trace:configure.ac:926: -1- MPD_ENABLE_AUTO_LIB([mpc], [MPCDEC], [mpcdec], [mpc_demux_init], [-lmpcdec], [], [Musepack decoder plugin], [libmpcdec not found])
m4trace:configure.ac:926: -1- MPD_ARG_ENABLE([mpc], [MPCDEC], [Musepack decoder plugin], [], [
		
		MPD_AUTO_LIB(mpc, MPCDEC, mpcdec, mpc_demux_init, -lmpcdec, , Musepack decoder plugin, libmpcdec not found)
	])
m4trace:configure.ac:926: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:926: -1- MPD_AUTO_LIB([mpc], [MPCDEC], [mpcdec], [mpc_demux_init], [-lmpcdec], [], [Musepack decoder plugin], [libmpcdec not found])
m4trace:configure.ac:926: -1- m4_pattern_allow([^MPCDEC_LIBS$])
m4trace:configure.ac:926: -1- m4_pattern_allow([^MPCDEC_CFLAGS$])
m4trace:configure.ac:926: -1- MPD_AUTO([mpc], [Musepack decoder plugin], [libmpcdec not found], [AC_CHECK_LIB(mpcdec, mpc_demux_init,
			[found_mpc=yes MPCDEC_LIBS='-lmpcdec' MPCDEC_CFLAGS=''],
			[found_mpc=no],
			[-lmpcdec])])
m4trace:configure.ac:926: -1- MPD_AUTO_RESULT([mpc], [Musepack decoder plugin], [libmpcdec not found])
m4trace:configure.ac:926: -1- MPD_AUTO_ENABLED([mpc], [Musepack decoder plugin])
m4trace:configure.ac:926: -1- MPD_AUTO_DISABLED([mpc], [Musepack decoder plugin], [libmpcdec not found])
m4trace:configure.ac:926: -1- MPD_DEFINE_CONDITIONAL([enable_mpc], [ENABLE_MPCDEC], [Musepack decoder plugin])
m4trace:configure.ac:926: -1- AM_CONDITIONAL([ENABLE_MPCDEC], [test x$enable_mpc = xyes])
m4trace:configure.ac:926: -1- m4_pattern_allow([^ENABLE_MPCDEC_TRUE$])
m4trace:configure.ac:926: -1- m4_pattern_allow([^ENABLE_MPCDEC_FALSE$])
m4trace:configure.ac:926: -1- _AM_SUBST_NOTMAKE([ENABLE_MPCDEC_TRUE])
m4trace:configure.ac:926: -1- _AM_SUBST_NOTMAKE([ENABLE_MPCDEC_FALSE])
m4trace:configure.ac:926: -1- m4_pattern_allow([^ENABLE_MPCDEC$])
m4trace:configure.ac:936: -1- m4_pattern_allow([^TREMOR_CFLAGS$])
m4trace:configure.ac:937: -1- m4_pattern_allow([^TREMOR_LIBS$])
m4trace:configure.ac:959: -1- MPD_WITH_LIBRARY([TREMOR], [AC_CHECK_FUNC([ov_read],,
			[AC_MSG_ERROR([libvorbisidec not found])])])
m4trace:configure.ac:959: -1- MPD_WITH_FLAGS([$[]TREMOR_CFLAGS], [$[]TREMOR_LIBS], [AC_CHECK_FUNC([ov_read],,
			[AC_MSG_ERROR([libvorbisidec not found])])])
m4trace:configure.ac:963: -1- m4_pattern_allow([^HAVE_TREMOR$])
m4trace:configure.ac:965: -1- m4_pattern_allow([^ENABLE_VORBIS_DECODER$])
m4trace:configure.ac:985: -1- MPD_AUTO_PKG([vorbis], [VORBIS], [vorbis ogg], [Ogg Vorbis decoder], [libvorbis not found])
m4trace:configure.ac:985: -1- MPD_AUTO([vorbis], [Ogg Vorbis decoder], [libvorbis not found], [PKG_CHECK_MODULES([VORBIS], [vorbis ogg],
			[found_vorbis=yes],
			[found_vorbis=no])])
m4trace:configure.ac:985: -1- PKG_CHECK_MODULES([VORBIS], [vorbis ogg], [found_vorbis=yes], [found_vorbis=no])
m4trace:configure.ac:985: -1- m4_pattern_allow([^VORBIS_CFLAGS$])
m4trace:configure.ac:985: -1- m4_pattern_allow([^VORBIS_LIBS$])
m4trace:configure.ac:985: -1- PKG_CHECK_EXISTS([vorbis ogg], [pkg_cv_[]VORBIS_CFLAGS=`$PKG_CONFIG --[]cflags "vorbis ogg" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:985: -1- PKG_CHECK_EXISTS([vorbis ogg], [pkg_cv_[]VORBIS_LIBS=`$PKG_CONFIG --[]libs "vorbis ogg" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:985: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:985: -1- MPD_AUTO_RESULT([vorbis], [Ogg Vorbis decoder], [libvorbis not found])
m4trace:configure.ac:985: -1- MPD_AUTO_ENABLED([vorbis], [Ogg Vorbis decoder])
m4trace:configure.ac:985: -1- MPD_AUTO_DISABLED([vorbis], [Ogg Vorbis decoder], [libvorbis not found])
m4trace:configure.ac:988: -1- m4_pattern_allow([^ENABLE_VORBIS_DECODER$])
m4trace:configure.ac:991: -1- AM_CONDITIONAL([ENABLE_VORBIS_DECODER], [test x$enable_vorbis = xyes || test x$enable_tremor = xyes])
m4trace:configure.ac:991: -1- m4_pattern_allow([^ENABLE_VORBIS_DECODER_TRUE$])
m4trace:configure.ac:991: -1- m4_pattern_allow([^ENABLE_VORBIS_DECODER_FALSE$])
m4trace:configure.ac:991: -1- _AM_SUBST_NOTMAKE([ENABLE_VORBIS_DECODER_TRUE])
m4trace:configure.ac:991: -1- _AM_SUBST_NOTMAKE([ENABLE_VORBIS_DECODER_FALSE])
m4trace:configure.ac:996: -1- PKG_CHECK_MODULES([SIDPLAY], [libsidplayfp], [found_sidplayfp=yes], [found_sidplayfp=no])
m4trace:configure.ac:996: -1- m4_pattern_allow([^SIDPLAY_CFLAGS$])
m4trace:configure.ac:996: -1- m4_pattern_allow([^SIDPLAY_LIBS$])
m4trace:configure.ac:996: -1- PKG_CHECK_EXISTS([libsidplayfp], [pkg_cv_[]SIDPLAY_CFLAGS=`$PKG_CONFIG --[]cflags "libsidplayfp" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:996: -1- PKG_CHECK_EXISTS([libsidplayfp], [pkg_cv_[]SIDPLAY_LIBS=`$PKG_CONFIG --[]libs "libsidplayfp" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:996: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1003: -1- PKG_CHECK_MODULES([SIDPLAY], [libsidplay2 libsidutils], [found_sidplay=yes], [found_sidplay=no])
m4trace:configure.ac:1003: -1- m4_pattern_allow([^SIDPLAY_CFLAGS$])
m4trace:configure.ac:1003: -1- m4_pattern_allow([^SIDPLAY_LIBS$])
m4trace:configure.ac:1003: -1- PKG_CHECK_EXISTS([libsidplay2 libsidutils], [pkg_cv_[]SIDPLAY_CFLAGS=`$PKG_CONFIG --[]cflags "libsidplay2 libsidutils" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1003: -1- PKG_CHECK_EXISTS([libsidplay2 libsidutils], [pkg_cv_[]SIDPLAY_LIBS=`$PKG_CONFIG --[]libs "libsidplay2 libsidutils" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1003: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1007: -1- MPD_AUTO_PRE([sidplay], [sidplay decoder plugin], [libsidplay2 not found])
m4trace:configure.ac:1007: -1- MPD_AUTO_DISABLED([sidplay], [sidplay decoder plugin], [libsidplay2 not found])
m4trace:configure.ac:1015: -1- MPD_AUTO_RESULT([sidplay], [sidplay decoder plugin], [libresid-builder not found])
m4trace:configure.ac:1015: -1- MPD_AUTO_ENABLED([sidplay], [sidplay decoder plugin])
m4trace:configure.ac:1015: -1- MPD_AUTO_DISABLED([sidplay], [sidplay decoder plugin], [libresid-builder not found])
m4trace:configure.ac:1021: -1- m4_pattern_allow([^ENABLE_SIDPLAY$])
m4trace:configure.ac:1023: -1- m4_pattern_allow([^HAVE_SIDPLAYFP$])
m4trace:configure.ac:1027: -1- AM_CONDITIONAL([ENABLE_SIDPLAY], [test x$enable_sidplay = xyes])
m4trace:configure.ac:1027: -1- m4_pattern_allow([^ENABLE_SIDPLAY_TRUE$])
m4trace:configure.ac:1027: -1- m4_pattern_allow([^ENABLE_SIDPLAY_FALSE$])
m4trace:configure.ac:1027: -1- _AM_SUBST_NOTMAKE([ENABLE_SIDPLAY_TRUE])
m4trace:configure.ac:1027: -1- _AM_SUBST_NOTMAKE([ENABLE_SIDPLAY_FALSE])
m4trace:configure.ac:1030: -1- MPD_ENABLE_AUTO_PKG([wavpack], [WAVPACK], [wavpack], [WavPack decoder plugin], [libwavpack not found])
m4trace:configure.ac:1030: -1- MPD_ARG_ENABLE([wavpack], [WAVPACK], [WavPack decoder plugin], [], [
		
		MPD_AUTO_PKG(wavpack, WAVPACK, wavpack, WavPack decoder plugin, libwavpack not found)
	])
m4trace:configure.ac:1030: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:1030: -1- MPD_AUTO_PKG([wavpack], [WAVPACK], [wavpack], [WavPack decoder plugin], [libwavpack not found])
m4trace:configure.ac:1030: -1- MPD_AUTO([wavpack], [WavPack decoder plugin], [libwavpack not found], [PKG_CHECK_MODULES([WAVPACK], [wavpack],
			[found_wavpack=yes],
			[found_wavpack=no])])
m4trace:configure.ac:1030: -1- PKG_CHECK_MODULES([WAVPACK], [wavpack], [found_wavpack=yes], [found_wavpack=no])
m4trace:configure.ac:1030: -1- m4_pattern_allow([^WAVPACK_CFLAGS$])
m4trace:configure.ac:1030: -1- m4_pattern_allow([^WAVPACK_LIBS$])
m4trace:configure.ac:1030: -1- PKG_CHECK_EXISTS([wavpack], [pkg_cv_[]WAVPACK_CFLAGS=`$PKG_CONFIG --[]cflags "wavpack" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1030: -1- PKG_CHECK_EXISTS([wavpack], [pkg_cv_[]WAVPACK_LIBS=`$PKG_CONFIG --[]libs "wavpack" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1030: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1030: -1- MPD_AUTO_RESULT([wavpack], [WavPack decoder plugin], [libwavpack not found])
m4trace:configure.ac:1030: -1- MPD_AUTO_ENABLED([wavpack], [WavPack decoder plugin])
m4trace:configure.ac:1030: -1- MPD_AUTO_DISABLED([wavpack], [WavPack decoder plugin], [libwavpack not found])
m4trace:configure.ac:1030: -1- MPD_DEFINE_CONDITIONAL([enable_wavpack], [ENABLE_WAVPACK], [WavPack decoder plugin])
m4trace:configure.ac:1030: -1- AM_CONDITIONAL([ENABLE_WAVPACK], [test x$enable_wavpack = xyes])
m4trace:configure.ac:1030: -1- m4_pattern_allow([^ENABLE_WAVPACK_TRUE$])
m4trace:configure.ac:1030: -1- m4_pattern_allow([^ENABLE_WAVPACK_FALSE$])
m4trace:configure.ac:1030: -1- _AM_SUBST_NOTMAKE([ENABLE_WAVPACK_TRUE])
m4trace:configure.ac:1030: -1- _AM_SUBST_NOTMAKE([ENABLE_WAVPACK_FALSE])
m4trace:configure.ac:1030: -1- m4_pattern_allow([^ENABLE_WAVPACK$])
m4trace:configure.ac:1034: -1- MPD_ENABLE_AUTO_LIB([wildmidi], [WILDMIDI], [WildMidi], [WildMidi_Init], [-lWildMidi], [], [WildMidi decoder plugin], [libwildmidi not found])
m4trace:configure.ac:1034: -1- MPD_ARG_ENABLE([wildmidi], [WILDMIDI], [WildMidi decoder plugin], [], [
		
		MPD_AUTO_LIB(wildmidi, WILDMIDI, WildMidi, WildMidi_Init, -lWildMidi, , WildMidi decoder plugin, libwildmidi not found)
	])
m4trace:configure.ac:1034: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:1034: -1- MPD_AUTO_LIB([wildmidi], [WILDMIDI], [WildMidi], [WildMidi_Init], [-lWildMidi], [], [WildMidi decoder plugin], [libwildmidi not found])
m4trace:configure.ac:1034: -1- m4_pattern_allow([^WILDMIDI_LIBS$])
m4trace:configure.ac:1034: -1- m4_pattern_allow([^WILDMIDI_CFLAGS$])
m4trace:configure.ac:1034: -1- MPD_AUTO([wildmidi], [WildMidi decoder plugin], [libwildmidi not found], [AC_CHECK_LIB(WildMidi, WildMidi_Init,
			[found_wildmidi=yes WILDMIDI_LIBS='-lWildMidi' WILDMIDI_CFLAGS=''],
			[found_wildmidi=no],
			[-lWildMidi])])
m4trace:configure.ac:1034: -1- MPD_AUTO_RESULT([wildmidi], [WildMidi decoder plugin], [libwildmidi not found])
m4trace:configure.ac:1034: -1- MPD_AUTO_ENABLED([wildmidi], [WildMidi decoder plugin])
m4trace:configure.ac:1034: -1- MPD_AUTO_DISABLED([wildmidi], [WildMidi decoder plugin], [libwildmidi not found])
m4trace:configure.ac:1034: -1- MPD_DEFINE_CONDITIONAL([enable_wildmidi], [ENABLE_WILDMIDI], [WildMidi decoder plugin])
m4trace:configure.ac:1034: -1- AM_CONDITIONAL([ENABLE_WILDMIDI], [test x$enable_wildmidi = xyes])
m4trace:configure.ac:1034: -1- m4_pattern_allow([^ENABLE_WILDMIDI_TRUE$])
m4trace:configure.ac:1034: -1- m4_pattern_allow([^ENABLE_WILDMIDI_FALSE$])
m4trace:configure.ac:1034: -1- _AM_SUBST_NOTMAKE([ENABLE_WILDMIDI_TRUE])
m4trace:configure.ac:1034: -1- _AM_SUBST_NOTMAKE([ENABLE_WILDMIDI_FALSE])
m4trace:configure.ac:1034: -1- m4_pattern_allow([^ENABLE_WILDMIDI$])
m4trace:configure.ac:1065: -1- MPD_DEFINE_CONDITIONAL([enable_flac_encoder], [ENABLE_FLAC_ENCODER], [FLAC encoder plugin])
m4trace:configure.ac:1065: -1- AM_CONDITIONAL([ENABLE_FLAC_ENCODER], [test x$enable_flac_encoder = xyes])
m4trace:configure.ac:1065: -1- m4_pattern_allow([^ENABLE_FLAC_ENCODER_TRUE$])
m4trace:configure.ac:1065: -1- m4_pattern_allow([^ENABLE_FLAC_ENCODER_FALSE$])
m4trace:configure.ac:1065: -1- _AM_SUBST_NOTMAKE([ENABLE_FLAC_ENCODER_TRUE])
m4trace:configure.ac:1065: -1- _AM_SUBST_NOTMAKE([ENABLE_FLAC_ENCODER_FALSE])
m4trace:configure.ac:1065: -1- m4_pattern_allow([^ENABLE_FLAC_ENCODER$])
m4trace:configure.ac:1070: -1- MPD_ENABLE_AUTO_PKG([shine_encoder], [SHINE], [shine >= 3.1], [shine encoder], [libshine not found])
m4trace:configure.ac:1070: -1- MPD_ARG_ENABLE([shine_encoder], [SHINE], [shine encoder], [], [
		
		MPD_AUTO_PKG(shine_encoder, SHINE, shine >= 3.1, shine encoder, libshine not found)
	])
m4trace:configure.ac:1070: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:1070: -1- MPD_AUTO_PKG([shine_encoder], [SHINE], [shine >= 3.1], [shine encoder], [libshine not found])
m4trace:configure.ac:1070: -1- MPD_AUTO([shine_encoder], [shine encoder], [libshine not found], [PKG_CHECK_MODULES([SHINE], [shine >= 3.1],
			[found_shine_encoder=yes],
			[found_shine_encoder=no])])
m4trace:configure.ac:1070: -1- PKG_CHECK_MODULES([SHINE], [shine >= 3.1], [found_shine_encoder=yes], [found_shine_encoder=no])
m4trace:configure.ac:1070: -1- m4_pattern_allow([^SHINE_CFLAGS$])
m4trace:configure.ac:1070: -1- m4_pattern_allow([^SHINE_LIBS$])
m4trace:configure.ac:1070: -1- PKG_CHECK_EXISTS([shine >= 3.1], [pkg_cv_[]SHINE_CFLAGS=`$PKG_CONFIG --[]cflags "shine >= 3.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1070: -1- PKG_CHECK_EXISTS([shine >= 3.1], [pkg_cv_[]SHINE_LIBS=`$PKG_CONFIG --[]libs "shine >= 3.1" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1070: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1070: -1- MPD_AUTO_RESULT([shine_encoder], [shine encoder], [libshine not found])
m4trace:configure.ac:1070: -1- MPD_AUTO_ENABLED([shine_encoder], [shine encoder])
m4trace:configure.ac:1070: -1- MPD_AUTO_DISABLED([shine_encoder], [shine encoder], [libshine not found])
m4trace:configure.ac:1070: -1- MPD_DEFINE_CONDITIONAL([enable_shine_encoder], [ENABLE_SHINE], [shine encoder])
m4trace:configure.ac:1070: -1- AM_CONDITIONAL([ENABLE_SHINE], [test x$enable_shine_encoder = xyes])
m4trace:configure.ac:1070: -1- m4_pattern_allow([^ENABLE_SHINE_TRUE$])
m4trace:configure.ac:1070: -1- m4_pattern_allow([^ENABLE_SHINE_FALSE$])
m4trace:configure.ac:1070: -1- _AM_SUBST_NOTMAKE([ENABLE_SHINE_TRUE])
m4trace:configure.ac:1070: -1- _AM_SUBST_NOTMAKE([ENABLE_SHINE_FALSE])
m4trace:configure.ac:1070: -1- m4_pattern_allow([^ENABLE_SHINE$])
m4trace:configure.ac:1074: -1- MPD_ENABLE_AUTO_PKG([vorbis_encoder], [VORBISENC], [vorbisenc vorbis ogg], [Ogg Vorbis encoder], [libvorbisenc not found])
m4trace:configure.ac:1074: -1- MPD_ARG_ENABLE([vorbis_encoder], [VORBISENC], [Ogg Vorbis encoder], [], [
		
		MPD_AUTO_PKG(vorbis_encoder, VORBISENC, vorbisenc vorbis ogg, Ogg Vorbis encoder, libvorbisenc not found)
	])
m4trace:configure.ac:1074: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:1074: -1- MPD_AUTO_PKG([vorbis_encoder], [VORBISENC], [vorbisenc vorbis ogg], [Ogg Vorbis encoder], [libvorbisenc not found])
m4trace:configure.ac:1074: -1- MPD_AUTO([vorbis_encoder], [Ogg Vorbis encoder], [libvorbisenc not found], [PKG_CHECK_MODULES([VORBISENC], [vorbisenc vorbis ogg],
			[found_vorbis_encoder=yes],
			[found_vorbis_encoder=no])])
m4trace:configure.ac:1074: -1- PKG_CHECK_MODULES([VORBISENC], [vorbisenc vorbis ogg], [found_vorbis_encoder=yes], [found_vorbis_encoder=no])
m4trace:configure.ac:1074: -1- m4_pattern_allow([^VORBISENC_CFLAGS$])
m4trace:configure.ac:1074: -1- m4_pattern_allow([^VORBISENC_LIBS$])
m4trace:configure.ac:1074: -1- PKG_CHECK_EXISTS([vorbisenc vorbis ogg], [pkg_cv_[]VORBISENC_CFLAGS=`$PKG_CONFIG --[]cflags "vorbisenc vorbis ogg" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1074: -1- PKG_CHECK_EXISTS([vorbisenc vorbis ogg], [pkg_cv_[]VORBISENC_LIBS=`$PKG_CONFIG --[]libs "vorbisenc vorbis ogg" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1074: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1074: -1- MPD_AUTO_RESULT([vorbis_encoder], [Ogg Vorbis encoder], [libvorbisenc not found])
m4trace:configure.ac:1074: -1- MPD_AUTO_ENABLED([vorbis_encoder], [Ogg Vorbis encoder])
m4trace:configure.ac:1074: -1- MPD_AUTO_DISABLED([vorbis_encoder], [Ogg Vorbis encoder], [libvorbisenc not found])
m4trace:configure.ac:1074: -1- MPD_DEFINE_CONDITIONAL([enable_vorbis_encoder], [ENABLE_VORBISENC], [Ogg Vorbis encoder])
m4trace:configure.ac:1074: -1- AM_CONDITIONAL([ENABLE_VORBISENC], [test x$enable_vorbis_encoder = xyes])
m4trace:configure.ac:1074: -1- m4_pattern_allow([^ENABLE_VORBISENC_TRUE$])
m4trace:configure.ac:1074: -1- m4_pattern_allow([^ENABLE_VORBISENC_FALSE$])
m4trace:configure.ac:1074: -1- _AM_SUBST_NOTMAKE([ENABLE_VORBISENC_TRUE])
m4trace:configure.ac:1074: -1- _AM_SUBST_NOTMAKE([ENABLE_VORBISENC_FALSE])
m4trace:configure.ac:1074: -1- m4_pattern_allow([^ENABLE_VORBISENC$])
m4trace:configure.ac:1079: -1- MPD_ENABLE_AUTO_LIB([lame_encoder], [LAME], [mp3lame], [lame_init], [-lmp3lame], [], [LAME encoder plugin], [libmp3lame not found])
m4trace:configure.ac:1079: -1- MPD_ARG_ENABLE([lame_encoder], [LAME], [LAME encoder plugin], [], [
		
		MPD_AUTO_LIB(lame_encoder, LAME, mp3lame, lame_init, -lmp3lame, , LAME encoder plugin, libmp3lame not found)
	])
m4trace:configure.ac:1079: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:1079: -1- MPD_AUTO_LIB([lame_encoder], [LAME], [mp3lame], [lame_init], [-lmp3lame], [], [LAME encoder plugin], [libmp3lame not found])
m4trace:configure.ac:1079: -1- m4_pattern_allow([^LAME_LIBS$])
m4trace:configure.ac:1079: -1- m4_pattern_allow([^LAME_CFLAGS$])
m4trace:configure.ac:1079: -1- MPD_AUTO([lame_encoder], [LAME encoder plugin], [libmp3lame not found], [AC_CHECK_LIB(mp3lame, lame_init,
			[found_lame_encoder=yes LAME_LIBS='-lmp3lame' LAME_CFLAGS=''],
			[found_lame_encoder=no],
			[-lmp3lame])])
m4trace:configure.ac:1079: -1- MPD_AUTO_RESULT([lame_encoder], [LAME encoder plugin], [libmp3lame not found])
m4trace:configure.ac:1079: -1- MPD_AUTO_ENABLED([lame_encoder], [LAME encoder plugin])
m4trace:configure.ac:1079: -1- MPD_AUTO_DISABLED([lame_encoder], [LAME encoder plugin], [libmp3lame not found])
m4trace:configure.ac:1079: -1- MPD_DEFINE_CONDITIONAL([enable_lame_encoder], [ENABLE_LAME], [LAME encoder plugin])
m4trace:configure.ac:1079: -1- AM_CONDITIONAL([ENABLE_LAME], [test x$enable_lame_encoder = xyes])
m4trace:configure.ac:1079: -1- m4_pattern_allow([^ENABLE_LAME_TRUE$])
m4trace:configure.ac:1079: -1- m4_pattern_allow([^ENABLE_LAME_FALSE$])
m4trace:configure.ac:1079: -1- _AM_SUBST_NOTMAKE([ENABLE_LAME_TRUE])
m4trace:configure.ac:1079: -1- _AM_SUBST_NOTMAKE([ENABLE_LAME_FALSE])
m4trace:configure.ac:1079: -1- m4_pattern_allow([^ENABLE_LAME$])
m4trace:configure.ac:1083: -1- MPD_ENABLE_AUTO_PKG([twolame_encoder], [TWOLAME], [twolame], [TwoLAME encoder plugin], [libtwolame not found])
m4trace:configure.ac:1083: -1- MPD_ARG_ENABLE([twolame_encoder], [TWOLAME], [TwoLAME encoder plugin], [], [
		
		MPD_AUTO_PKG(twolame_encoder, TWOLAME, twolame, TwoLAME encoder plugin, libtwolame not found)
	])
m4trace:configure.ac:1083: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:1083: -1- MPD_AUTO_PKG([twolame_encoder], [TWOLAME], [twolame], [TwoLAME encoder plugin], [libtwolame not found])
m4trace:configure.ac:1083: -1- MPD_AUTO([twolame_encoder], [TwoLAME encoder plugin], [libtwolame not found], [PKG_CHECK_MODULES([TWOLAME], [twolame],
			[found_twolame_encoder=yes],
			[found_twolame_encoder=no])])
m4trace:configure.ac:1083: -1- PKG_CHECK_MODULES([TWOLAME], [twolame], [found_twolame_encoder=yes], [found_twolame_encoder=no])
m4trace:configure.ac:1083: -1- m4_pattern_allow([^TWOLAME_CFLAGS$])
m4trace:configure.ac:1083: -1- m4_pattern_allow([^TWOLAME_LIBS$])
m4trace:configure.ac:1083: -1- PKG_CHECK_EXISTS([twolame], [pkg_cv_[]TWOLAME_CFLAGS=`$PKG_CONFIG --[]cflags "twolame" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1083: -1- PKG_CHECK_EXISTS([twolame], [pkg_cv_[]TWOLAME_LIBS=`$PKG_CONFIG --[]libs "twolame" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1083: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1083: -1- MPD_AUTO_RESULT([twolame_encoder], [TwoLAME encoder plugin], [libtwolame not found])
m4trace:configure.ac:1083: -1- MPD_AUTO_ENABLED([twolame_encoder], [TwoLAME encoder plugin])
m4trace:configure.ac:1083: -1- MPD_AUTO_DISABLED([twolame_encoder], [TwoLAME encoder plugin], [libtwolame not found])
m4trace:configure.ac:1083: -1- MPD_DEFINE_CONDITIONAL([enable_twolame_encoder], [ENABLE_TWOLAME], [TwoLAME encoder plugin])
m4trace:configure.ac:1083: -1- AM_CONDITIONAL([ENABLE_TWOLAME], [test x$enable_twolame_encoder = xyes])
m4trace:configure.ac:1083: -1- m4_pattern_allow([^ENABLE_TWOLAME_TRUE$])
m4trace:configure.ac:1083: -1- m4_pattern_allow([^ENABLE_TWOLAME_FALSE$])
m4trace:configure.ac:1083: -1- _AM_SUBST_NOTMAKE([ENABLE_TWOLAME_TRUE])
m4trace:configure.ac:1083: -1- _AM_SUBST_NOTMAKE([ENABLE_TWOLAME_FALSE])
m4trace:configure.ac:1083: -1- m4_pattern_allow([^ENABLE_TWOLAME$])
m4trace:configure.ac:1087: -1- MPD_DEFINE_CONDITIONAL([enable_wave_encoder], [ENABLE_WAVE_ENCODER], [PCM wave encoder plugin])
m4trace:configure.ac:1087: -1- AM_CONDITIONAL([ENABLE_WAVE_ENCODER], [test x$enable_wave_encoder = xyes])
m4trace:configure.ac:1087: -1- m4_pattern_allow([^ENABLE_WAVE_ENCODER_TRUE$])
m4trace:configure.ac:1087: -1- m4_pattern_allow([^ENABLE_WAVE_ENCODER_FALSE$])
m4trace:configure.ac:1087: -1- _AM_SUBST_NOTMAKE([ENABLE_WAVE_ENCODER_TRUE])
m4trace:configure.ac:1087: -1- _AM_SUBST_NOTMAKE([ENABLE_WAVE_ENCODER_FALSE])
m4trace:configure.ac:1087: -1- m4_pattern_allow([^ENABLE_WAVE_ENCODER$])
m4trace:configure.ac:1109: -1- MPD_DEFINE_CONDITIONAL([enable_encoder], [ENABLE_ENCODER], [the encoder plugins])
m4trace:configure.ac:1109: -1- AM_CONDITIONAL([ENABLE_ENCODER], [test x$enable_encoder = xyes])
m4trace:configure.ac:1109: -1- m4_pattern_allow([^ENABLE_ENCODER_TRUE$])
m4trace:configure.ac:1109: -1- m4_pattern_allow([^ENABLE_ENCODER_FALSE$])
m4trace:configure.ac:1109: -1- _AM_SUBST_NOTMAKE([ENABLE_ENCODER_TRUE])
m4trace:configure.ac:1109: -1- _AM_SUBST_NOTMAKE([ENABLE_ENCODER_FALSE])
m4trace:configure.ac:1109: -1- m4_pattern_allow([^ENABLE_ENCODER$])
m4trace:configure.ac:1117: -1- MPD_ENABLE_AUTO_PKG([alsa], [ALSA], [alsa >= 0.9.0], [ALSA output plugin], [libasound not found], [$linux_auto])
m4trace:configure.ac:1117: -1- MPD_ARG_ENABLE([alsa], [ALSA], [ALSA output plugin], [$linux_auto], [
		
		MPD_AUTO_PKG(alsa, ALSA, alsa >= 0.9.0, ALSA output plugin, libasound not found)
	])
m4trace:configure.ac:1117: -3- MPD_FORMAT_DEFAULT([$linux_auto])
m4trace:configure.ac:1117: -1- MPD_AUTO_PKG([alsa], [ALSA], [alsa >= 0.9.0], [ALSA output plugin], [libasound not found])
m4trace:configure.ac:1117: -1- MPD_AUTO([alsa], [ALSA output plugin], [libasound not found], [PKG_CHECK_MODULES([ALSA], [alsa >= 0.9.0],
			[found_alsa=yes],
			[found_alsa=no])])
m4trace:configure.ac:1117: -1- PKG_CHECK_MODULES([ALSA], [alsa >= 0.9.0], [found_alsa=yes], [found_alsa=no])
m4trace:configure.ac:1117: -1- m4_pattern_allow([^ALSA_CFLAGS$])
m4trace:configure.ac:1117: -1- m4_pattern_allow([^ALSA_LIBS$])
m4trace:configure.ac:1117: -1- PKG_CHECK_EXISTS([alsa >= 0.9.0], [pkg_cv_[]ALSA_CFLAGS=`$PKG_CONFIG --[]cflags "alsa >= 0.9.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1117: -1- PKG_CHECK_EXISTS([alsa >= 0.9.0], [pkg_cv_[]ALSA_LIBS=`$PKG_CONFIG --[]libs "alsa >= 0.9.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1117: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1117: -1- MPD_AUTO_RESULT([alsa], [ALSA output plugin], [libasound not found])
m4trace:configure.ac:1117: -1- MPD_AUTO_ENABLED([alsa], [ALSA output plugin])
m4trace:configure.ac:1117: -1- MPD_AUTO_DISABLED([alsa], [ALSA output plugin], [libasound not found])
m4trace:configure.ac:1117: -1- MPD_DEFINE_CONDITIONAL([enable_alsa], [ENABLE_ALSA], [ALSA output plugin])
m4trace:configure.ac:1117: -1- AM_CONDITIONAL([ENABLE_ALSA], [test x$enable_alsa = xyes])
m4trace:configure.ac:1117: -1- m4_pattern_allow([^ENABLE_ALSA_TRUE$])
m4trace:configure.ac:1117: -1- m4_pattern_allow([^ENABLE_ALSA_FALSE$])
m4trace:configure.ac:1117: -1- _AM_SUBST_NOTMAKE([ENABLE_ALSA_TRUE])
m4trace:configure.ac:1117: -1- _AM_SUBST_NOTMAKE([ENABLE_ALSA_FALSE])
m4trace:configure.ac:1117: -1- m4_pattern_allow([^ENABLE_ALSA$])
m4trace:configure.ac:1122: -1- MPD_ENABLE_AUTO_PKG([roar], [ROAR], [libroar >= 0.4.0], [RoarAudio output plugin], [libroar not found])
m4trace:configure.ac:1122: -1- MPD_ARG_ENABLE([roar], [ROAR], [RoarAudio output plugin], [], [
		
		MPD_AUTO_PKG(roar, ROAR, libroar >= 0.4.0, RoarAudio output plugin, libroar not found)
	])
m4trace:configure.ac:1122: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:1122: -1- MPD_AUTO_PKG([roar], [ROAR], [libroar >= 0.4.0], [RoarAudio output plugin], [libroar not found])
m4trace:configure.ac:1122: -1- MPD_AUTO([roar], [RoarAudio output plugin], [libroar not found], [PKG_CHECK_MODULES([ROAR], [libroar >= 0.4.0],
			[found_roar=yes],
			[found_roar=no])])
m4trace:configure.ac:1122: -1- PKG_CHECK_MODULES([ROAR], [libroar >= 0.4.0], [found_roar=yes], [found_roar=no])
m4trace:configure.ac:1122: -1- m4_pattern_allow([^ROAR_CFLAGS$])
m4trace:configure.ac:1122: -1- m4_pattern_allow([^ROAR_LIBS$])
m4trace:configure.ac:1122: -1- PKG_CHECK_EXISTS([libroar >= 0.4.0], [pkg_cv_[]ROAR_CFLAGS=`$PKG_CONFIG --[]cflags "libroar >= 0.4.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1122: -1- PKG_CHECK_EXISTS([libroar >= 0.4.0], [pkg_cv_[]ROAR_LIBS=`$PKG_CONFIG --[]libs "libroar >= 0.4.0" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1122: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1122: -1- MPD_AUTO_RESULT([roar], [RoarAudio output plugin], [libroar not found])
m4trace:configure.ac:1122: -1- MPD_AUTO_ENABLED([roar], [RoarAudio output plugin])
m4trace:configure.ac:1122: -1- MPD_AUTO_DISABLED([roar], [RoarAudio output plugin], [libroar not found])
m4trace:configure.ac:1122: -1- MPD_DEFINE_CONDITIONAL([enable_roar], [ENABLE_ROAR], [RoarAudio output plugin])
m4trace:configure.ac:1122: -1- AM_CONDITIONAL([ENABLE_ROAR], [test x$enable_roar = xyes])
m4trace:configure.ac:1122: -1- m4_pattern_allow([^ENABLE_ROAR_TRUE$])
m4trace:configure.ac:1122: -1- m4_pattern_allow([^ENABLE_ROAR_FALSE$])
m4trace:configure.ac:1122: -1- _AM_SUBST_NOTMAKE([ENABLE_ROAR_TRUE])
m4trace:configure.ac:1122: -1- _AM_SUBST_NOTMAKE([ENABLE_ROAR_FALSE])
m4trace:configure.ac:1122: -1- m4_pattern_allow([^ENABLE_ROAR$])
m4trace:configure.ac:1132: -1- MPD_DEFINE_CONDITIONAL([enable_fifo], [HAVE_FIFO], [support for writing audio to a FIFO])
m4trace:configure.ac:1132: -1- AM_CONDITIONAL([HAVE_FIFO], [test x$enable_fifo = xyes])
m4trace:configure.ac:1132: -1- m4_pattern_allow([^HAVE_FIFO_TRUE$])
m4trace:configure.ac:1132: -1- m4_pattern_allow([^HAVE_FIFO_FALSE$])
m4trace:configure.ac:1132: -1- _AM_SUBST_NOTMAKE([HAVE_FIFO_TRUE])
m4trace:configure.ac:1132: -1- _AM_SUBST_NOTMAKE([HAVE_FIFO_FALSE])
m4trace:configure.ac:1132: -1- m4_pattern_allow([^HAVE_FIFO$])
m4trace:configure.ac:1136: -1- MPD_ENABLE_AUTO_HEADER([sndio], [SNDIO], [sndio.h], [-lsndio], [], [sndio output plugin], [libsndio not found])
m4trace:configure.ac:1136: -1- MPD_ARG_ENABLE([sndio], [SNDIO], [sndio output plugin], [], [
		
		MPD_AUTO_HEADER(sndio, SNDIO, sndio.h, -lsndio, , sndio output plugin, libsndio not found)
	])
m4trace:configure.ac:1136: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:1136: -1- MPD_AUTO_HEADER([sndio], [SNDIO], [sndio.h], [-lsndio], [], [sndio output plugin], [libsndio not found])
m4trace:configure.ac:1136: -1- m4_pattern_allow([^SNDIO_LIBS$])
m4trace:configure.ac:1136: -1- m4_pattern_allow([^SNDIO_CFLAGS$])
m4trace:configure.ac:1136: -1- MPD_AUTO([sndio], [sndio output plugin], [libsndio not found], [AC_CHECK_HEADER([sndio.h],
			[found_sndio=yes SNDIO_LIBS='-lsndio' SNDIO_CFLAGS=''],
			[found_sndio=no])])
m4trace:configure.ac:1136: -1- MPD_AUTO_RESULT([sndio], [sndio output plugin], [libsndio not found])
m4trace:configure.ac:1136: -1- MPD_AUTO_ENABLED([sndio], [sndio output plugin])
m4trace:configure.ac:1136: -1- MPD_AUTO_DISABLED([sndio], [sndio output plugin], [libsndio not found])
m4trace:configure.ac:1136: -1- MPD_DEFINE_CONDITIONAL([enable_sndio], [ENABLE_SNDIO], [sndio output plugin])
m4trace:configure.ac:1136: -1- AM_CONDITIONAL([ENABLE_SNDIO], [test x$enable_sndio = xyes])
m4trace:configure.ac:1136: -1- m4_pattern_allow([^ENABLE_SNDIO_TRUE$])
m4trace:configure.ac:1136: -1- m4_pattern_allow([^ENABLE_SNDIO_FALSE$])
m4trace:configure.ac:1136: -1- _AM_SUBST_NOTMAKE([ENABLE_SNDIO_TRUE])
m4trace:configure.ac:1136: -1- _AM_SUBST_NOTMAKE([ENABLE_SNDIO_FALSE])
m4trace:configure.ac:1136: -1- m4_pattern_allow([^ENABLE_SNDIO$])
m4trace:configure.ac:1142: -1- MPD_ENABLE_AUTO_HEADER([haiku], [HAIKU], [media/MediaDefs.h], [-lbe -lmedia], [], [Haiku output plugin], [Haiku headers not found])
m4trace:configure.ac:1142: -1- MPD_ARG_ENABLE([haiku], [HAIKU], [Haiku output plugin], [], [
		
		MPD_AUTO_HEADER(haiku, HAIKU, media/MediaDefs.h, -lbe -lmedia, , Haiku output plugin, Haiku headers not found)
	])
m4trace:configure.ac:1142: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:1142: -1- MPD_AUTO_HEADER([haiku], [HAIKU], [media/MediaDefs.h], [-lbe -lmedia], [], [Haiku output plugin], [Haiku headers not found])
m4trace:configure.ac:1142: -1- m4_pattern_allow([^HAIKU_LIBS$])
m4trace:configure.ac:1142: -1- m4_pattern_allow([^HAIKU_CFLAGS$])
m4trace:configure.ac:1142: -1- MPD_AUTO([haiku], [Haiku output plugin], [Haiku headers not found], [AC_CHECK_HEADER([media/MediaDefs.h],
			[found_haiku=yes HAIKU_LIBS='-lbe -lmedia' HAIKU_CFLAGS=''],
			[found_haiku=no])])
m4trace:configure.ac:1142: -1- MPD_AUTO_RESULT([haiku], [Haiku output plugin], [Haiku headers not found])
m4trace:configure.ac:1142: -1- MPD_AUTO_ENABLED([haiku], [Haiku output plugin])
m4trace:configure.ac:1142: -1- MPD_AUTO_DISABLED([haiku], [Haiku output plugin], [Haiku headers not found])
m4trace:configure.ac:1142: -1- MPD_DEFINE_CONDITIONAL([enable_haiku], [ENABLE_HAIKU], [Haiku output plugin])
m4trace:configure.ac:1142: -1- AM_CONDITIONAL([ENABLE_HAIKU], [test x$enable_haiku = xyes])
m4trace:configure.ac:1142: -1- m4_pattern_allow([^ENABLE_HAIKU_TRUE$])
m4trace:configure.ac:1142: -1- m4_pattern_allow([^ENABLE_HAIKU_FALSE$])
m4trace:configure.ac:1142: -1- _AM_SUBST_NOTMAKE([ENABLE_HAIKU_TRUE])
m4trace:configure.ac:1142: -1- _AM_SUBST_NOTMAKE([ENABLE_HAIKU_FALSE])
m4trace:configure.ac:1142: -1- m4_pattern_allow([^ENABLE_HAIKU$])
m4trace:configure.ac:1159: -1- MPD_DEFINE_CONDITIONAL([enable_httpd_output], [ENABLE_HTTPD_OUTPUT], [the HTTP server output])
m4trace:configure.ac:1159: -1- AM_CONDITIONAL([ENABLE_HTTPD_OUTPUT], [test x$enable_httpd_output = xyes])
m4trace:configure.ac:1159: -1- m4_pattern_allow([^ENABLE_HTTPD_OUTPUT_TRUE$])
m4trace:configure.ac:1159: -1- m4_pattern_allow([^ENABLE_HTTPD_OUTPUT_FALSE$])
m4trace:configure.ac:1159: -1- _AM_SUBST_NOTMAKE([ENABLE_HTTPD_OUTPUT_TRUE])
m4trace:configure.ac:1159: -1- _AM_SUBST_NOTMAKE([ENABLE_HTTPD_OUTPUT_FALSE])
m4trace:configure.ac:1159: -1- m4_pattern_allow([^ENABLE_HTTPD_OUTPUT$])
m4trace:configure.ac:1163: -1- MPD_ENABLE_AUTO_PKG([jack], [JACK], [jack >= 0.100], [JACK output plugin], [libjack not found])
m4trace:configure.ac:1163: -1- MPD_ARG_ENABLE([jack], [JACK], [JACK output plugin], [], [
		
		MPD_AUTO_PKG(jack, JACK, jack >= 0.100, JACK output plugin, libjack not found)
	])
m4trace:configure.ac:1163: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:1163: -1- MPD_AUTO_PKG([jack], [JACK], [jack >= 0.100], [JACK output plugin], [libjack not found])
m4trace:configure.ac:1163: -1- MPD_AUTO([jack], [JACK output plugin], [libjack not found], [PKG_CHECK_MODULES([JACK], [jack >= 0.100],
			[found_jack=yes],
			[found_jack=no])])
m4trace:configure.ac:1163: -1- PKG_CHECK_MODULES([JACK], [jack >= 0.100], [found_jack=yes], [found_jack=no])
m4trace:configure.ac:1163: -1- m4_pattern_allow([^JACK_CFLAGS$])
m4trace:configure.ac:1163: -1- m4_pattern_allow([^JACK_LIBS$])
m4trace:configure.ac:1163: -1- PKG_CHECK_EXISTS([jack >= 0.100], [pkg_cv_[]JACK_CFLAGS=`$PKG_CONFIG --[]cflags "jack >= 0.100" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1163: -1- PKG_CHECK_EXISTS([jack >= 0.100], [pkg_cv_[]JACK_LIBS=`$PKG_CONFIG --[]libs "jack >= 0.100" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1163: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1163: -1- MPD_AUTO_RESULT([jack], [JACK output plugin], [libjack not found])
m4trace:configure.ac:1163: -1- MPD_AUTO_ENABLED([jack], [JACK output plugin])
m4trace:configure.ac:1163: -1- MPD_AUTO_DISABLED([jack], [JACK output plugin], [libjack not found])
m4trace:configure.ac:1163: -1- MPD_DEFINE_CONDITIONAL([enable_jack], [ENABLE_JACK], [JACK output plugin])
m4trace:configure.ac:1163: -1- AM_CONDITIONAL([ENABLE_JACK], [test x$enable_jack = xyes])
m4trace:configure.ac:1163: -1- m4_pattern_allow([^ENABLE_JACK_TRUE$])
m4trace:configure.ac:1163: -1- m4_pattern_allow([^ENABLE_JACK_FALSE$])
m4trace:configure.ac:1163: -1- _AM_SUBST_NOTMAKE([ENABLE_JACK_TRUE])
m4trace:configure.ac:1163: -1- _AM_SUBST_NOTMAKE([ENABLE_JACK_FALSE])
m4trace:configure.ac:1163: -1- m4_pattern_allow([^ENABLE_JACK$])
m4trace:configure.ac:1171: -1- m4_pattern_allow([^HAVE_JACK_SET_INFO_FUNCTION$])
m4trace:configure.ac:1177: -1- MPD_ENABLE_AUTO_PKG([ao], [AO], [ao], [libao output plugin], [libao not found])
m4trace:configure.ac:1177: -1- MPD_ARG_ENABLE([ao], [AO], [libao output plugin], [], [
		
		MPD_AUTO_PKG(ao, AO, ao, libao output plugin, libao not found)
	])
m4trace:configure.ac:1177: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:1177: -1- MPD_AUTO_PKG([ao], [AO], [ao], [libao output plugin], [libao not found])
m4trace:configure.ac:1177: -1- MPD_AUTO([ao], [libao output plugin], [libao not found], [PKG_CHECK_MODULES([AO], [ao],
			[found_ao=yes],
			[found_ao=no])])
m4trace:configure.ac:1177: -1- PKG_CHECK_MODULES([AO], [ao], [found_ao=yes], [found_ao=no])
m4trace:configure.ac:1177: -1- m4_pattern_allow([^AO_CFLAGS$])
m4trace:configure.ac:1177: -1- m4_pattern_allow([^AO_LIBS$])
m4trace:configure.ac:1177: -1- PKG_CHECK_EXISTS([ao], [pkg_cv_[]AO_CFLAGS=`$PKG_CONFIG --[]cflags "ao" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1177: -1- PKG_CHECK_EXISTS([ao], [pkg_cv_[]AO_LIBS=`$PKG_CONFIG --[]libs "ao" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1177: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1177: -1- MPD_AUTO_RESULT([ao], [libao output plugin], [libao not found])
m4trace:configure.ac:1177: -1- MPD_AUTO_ENABLED([ao], [libao output plugin])
m4trace:configure.ac:1177: -1- MPD_AUTO_DISABLED([ao], [libao output plugin], [libao not found])
m4trace:configure.ac:1177: -1- MPD_DEFINE_CONDITIONAL([enable_ao], [ENABLE_AO], [libao output plugin])
m4trace:configure.ac:1177: -1- AM_CONDITIONAL([ENABLE_AO], [test x$enable_ao = xyes])
m4trace:configure.ac:1177: -1- m4_pattern_allow([^ENABLE_AO_TRUE$])
m4trace:configure.ac:1177: -1- m4_pattern_allow([^ENABLE_AO_FALSE$])
m4trace:configure.ac:1177: -1- _AM_SUBST_NOTMAKE([ENABLE_AO_TRUE])
m4trace:configure.ac:1177: -1- _AM_SUBST_NOTMAKE([ENABLE_AO_FALSE])
m4trace:configure.ac:1177: -1- m4_pattern_allow([^ENABLE_AO$])
m4trace:configure.ac:1181: -1- m4_pattern_allow([^OPENAL_CFLAGS$])
m4trace:configure.ac:1182: -1- m4_pattern_allow([^OPENAL_LIBS$])
m4trace:configure.ac:1190: -1- MPD_AUTO_RESULT([openal], [OpenAL output plugin], [OpenAL not found])
m4trace:configure.ac:1190: -1- MPD_AUTO_ENABLED([openal], [OpenAL output plugin])
m4trace:configure.ac:1190: -1- MPD_AUTO_DISABLED([openal], [OpenAL output plugin], [OpenAL not found])
m4trace:configure.ac:1196: -1- MPD_AUTO_PKG([openal], [OPENAL], [openal], [OpenAL output plugin], [OpenAL not found])
m4trace:configure.ac:1196: -1- MPD_AUTO([openal], [OpenAL output plugin], [OpenAL not found], [PKG_CHECK_MODULES([OPENAL], [openal],
			[found_openal=yes],
			[found_openal=no])])
m4trace:configure.ac:1196: -1- PKG_CHECK_MODULES([OPENAL], [openal], [found_openal=yes], [found_openal=no])
m4trace:configure.ac:1196: -1- m4_pattern_allow([^OPENAL_CFLAGS$])
m4trace:configure.ac:1196: -1- m4_pattern_allow([^OPENAL_LIBS$])
m4trace:configure.ac:1196: -1- PKG_CHECK_EXISTS([openal], [pkg_cv_[]OPENAL_CFLAGS=`$PKG_CONFIG --[]cflags "openal" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1196: -1- PKG_CHECK_EXISTS([openal], [pkg_cv_[]OPENAL_LIBS=`$PKG_CONFIG --[]libs "openal" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1196: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1196: -1- MPD_AUTO_RESULT([openal], [OpenAL output plugin], [OpenAL not found])
m4trace:configure.ac:1196: -1- MPD_AUTO_ENABLED([openal], [OpenAL output plugin])
m4trace:configure.ac:1196: -1- MPD_AUTO_DISABLED([openal], [OpenAL output plugin], [OpenAL not found])
m4trace:configure.ac:1200: -1- MPD_DEFINE_CONDITIONAL([enable_openal], [HAVE_OPENAL], [OpenAL support])
m4trace:configure.ac:1200: -1- AM_CONDITIONAL([HAVE_OPENAL], [test x$enable_openal = xyes])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^HAVE_OPENAL_TRUE$])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^HAVE_OPENAL_FALSE$])
m4trace:configure.ac:1200: -1- _AM_SUBST_NOTMAKE([HAVE_OPENAL_TRUE])
m4trace:configure.ac:1200: -1- _AM_SUBST_NOTMAKE([HAVE_OPENAL_FALSE])
m4trace:configure.ac:1200: -1- m4_pattern_allow([^HAVE_OPENAL$])
m4trace:configure.ac:1210: -1- MPD_DEFINE_CONDITIONAL([enable_oss], [HAVE_OSS], [Open Sound System])
m4trace:configure.ac:1210: -1- AM_CONDITIONAL([HAVE_OSS], [test x$enable_oss = xyes])
m4trace:configure.ac:1210: -1- m4_pattern_allow([^HAVE_OSS_TRUE$])
m4trace:configure.ac:1210: -1- m4_pattern_allow([^HAVE_OSS_FALSE$])
m4trace:configure.ac:1210: -1- _AM_SUBST_NOTMAKE([HAVE_OSS_TRUE])
m4trace:configure.ac:1210: -1- _AM_SUBST_NOTMAKE([HAVE_OSS_FALSE])
m4trace:configure.ac:1210: -1- m4_pattern_allow([^HAVE_OSS$])
m4trace:configure.ac:1214: -1- m4_pattern_allow([^HAVE_OSX$])
m4trace:configure.ac:1218: -1- AM_CONDITIONAL([HAVE_OSX], [test x$enable_osx = xyes])
m4trace:configure.ac:1218: -1- m4_pattern_allow([^HAVE_OSX_TRUE$])
m4trace:configure.ac:1218: -1- m4_pattern_allow([^HAVE_OSX_FALSE$])
m4trace:configure.ac:1218: -1- _AM_SUBST_NOTMAKE([HAVE_OSX_TRUE])
m4trace:configure.ac:1218: -1- _AM_SUBST_NOTMAKE([HAVE_OSX_FALSE])
m4trace:configure.ac:1221: -1- MPD_DEFINE_CONDITIONAL([enable_pipe_output], [ENABLE_PIPE_OUTPUT], [support for writing audio to a pipe])
m4trace:configure.ac:1221: -1- AM_CONDITIONAL([ENABLE_PIPE_OUTPUT], [test x$enable_pipe_output = xyes])
m4trace:configure.ac:1221: -1- m4_pattern_allow([^ENABLE_PIPE_OUTPUT_TRUE$])
m4trace:configure.ac:1221: -1- m4_pattern_allow([^ENABLE_PIPE_OUTPUT_FALSE$])
m4trace:configure.ac:1221: -1- _AM_SUBST_NOTMAKE([ENABLE_PIPE_OUTPUT_TRUE])
m4trace:configure.ac:1221: -1- _AM_SUBST_NOTMAKE([ENABLE_PIPE_OUTPUT_FALSE])
m4trace:configure.ac:1221: -1- m4_pattern_allow([^ENABLE_PIPE_OUTPUT$])
m4trace:configure.ac:1225: -1- MPD_ENABLE_AUTO_PKG([pulse], [PULSE], [libpulse >= 0.9.16], [PulseAudio output plugin], [libpulse not found])
m4trace:configure.ac:1225: -1- MPD_ARG_ENABLE([pulse], [PULSE], [PulseAudio output plugin], [], [
		
		MPD_AUTO_PKG(pulse, PULSE, libpulse >= 0.9.16, PulseAudio output plugin, libpulse not found)
	])
m4trace:configure.ac:1225: -3- MPD_FORMAT_DEFAULT([])
m4trace:configure.ac:1225: -1- MPD_AUTO_PKG([pulse], [PULSE], [libpulse >= 0.9.16], [PulseAudio output plugin], [libpulse not found])
m4trace:configure.ac:1225: -1- MPD_AUTO([pulse], [PulseAudio output plugin], [libpulse not found], [PKG_CHECK_MODULES([PULSE], [libpulse >= 0.9.16],
			[found_pulse=yes],
			[found_pulse=no])])
m4trace:configure.ac:1225: -1- PKG_CHECK_MODULES([PULSE], [libpulse >= 0.9.16], [found_pulse=yes], [found_pulse=no])
m4trace:configure.ac:1225: -1- m4_pattern_allow([^PULSE_CFLAGS$])
m4trace:configure.ac:1225: -1- m4_pattern_allow([^PULSE_LIBS$])
m4trace:configure.ac:1225: -1- PKG_CHECK_EXISTS([libpulse >= 0.9.16], [pkg_cv_[]PULSE_CFLAGS=`$PKG_CONFIG --[]cflags "libpulse >= 0.9.16" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1225: -1- PKG_CHECK_EXISTS([libpulse >= 0.9.16], [pkg_cv_[]PULSE_LIBS=`$PKG_CONFIG --[]libs "libpulse >= 0.9.16" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1225: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1225: -1- MPD_AUTO_RESULT([pulse], [PulseAudio output plugin], [libpulse not found])
m4trace:configure.ac:1225: -1- MPD_AUTO_ENABLED([pulse], [PulseAudio output plugin])
m4trace:configure.ac:1225: -1- MPD_AUTO_DISABLED([pulse], [PulseAudio output plugin], [libpulse not found])
m4trace:configure.ac:1225: -1- MPD_DEFINE_CONDITIONAL([enable_pulse], [ENABLE_PULSE], [PulseAudio output plugin])
m4trace:configure.ac:1225: -1- AM_CONDITIONAL([ENABLE_PULSE], [test x$enable_pulse = xyes])
m4trace:configure.ac:1225: -1- m4_pattern_allow([^ENABLE_PULSE_TRUE$])
m4trace:configure.ac:1225: -1- m4_pattern_allow([^ENABLE_PULSE_FALSE$])
m4trace:configure.ac:1225: -1- _AM_SUBST_NOTMAKE([ENABLE_PULSE_TRUE])
m4trace:configure.ac:1225: -1- _AM_SUBST_NOTMAKE([ENABLE_PULSE_FALSE])
m4trace:configure.ac:1225: -1- m4_pattern_allow([^ENABLE_PULSE$])
m4trace:configure.ac:1240: -1- MPD_DEFINE_CONDITIONAL([enable_recorder_output], [ENABLE_RECORDER_OUTPUT], [the recorder output])
m4trace:configure.ac:1240: -1- AM_CONDITIONAL([ENABLE_RECORDER_OUTPUT], [test x$enable_recorder_output = xyes])
m4trace:configure.ac:1240: -1- m4_pattern_allow([^ENABLE_RECORDER_OUTPUT_TRUE$])
m4trace:configure.ac:1240: -1- m4_pattern_allow([^ENABLE_RECORDER_OUTPUT_FALSE$])
m4trace:configure.ac:1240: -1- _AM_SUBST_NOTMAKE([ENABLE_RECORDER_OUTPUT_TRUE])
m4trace:configure.ac:1240: -1- _AM_SUBST_NOTMAKE([ENABLE_RECORDER_OUTPUT_FALSE])
m4trace:configure.ac:1240: -1- m4_pattern_allow([^ENABLE_RECORDER_OUTPUT$])
m4trace:configure.ac:1255: -1- MPD_DEFINE_CONDITIONAL([enable_shout], [HAVE_SHOUT], [shoutcast output])
m4trace:configure.ac:1255: -1- AM_CONDITIONAL([HAVE_SHOUT], [test x$enable_shout = xyes])
m4trace:configure.ac:1255: -1- m4_pattern_allow([^HAVE_SHOUT_TRUE$])
m4trace:configure.ac:1255: -1- m4_pattern_allow([^HAVE_SHOUT_FALSE$])
m4trace:configure.ac:1255: -1- _AM_SUBST_NOTMAKE([HAVE_SHOUT_TRUE])
m4trace:configure.ac:1255: -1- _AM_SUBST_NOTMAKE([HAVE_SHOUT_FALSE])
m4trace:configure.ac:1255: -1- m4_pattern_allow([^HAVE_SHOUT$])
m4trace:configure.ac:1260: -1- MPD_DEFINE_CONDITIONAL([enable_solaris_output], [ENABLE_SOLARIS_OUTPUT], [Solaris /dev/audio support])
m4trace:configure.ac:1260: -1- AM_CONDITIONAL([ENABLE_SOLARIS_OUTPUT], [test x$enable_solaris_output = xyes])
m4trace:configure.ac:1260: -1- m4_pattern_allow([^ENABLE_SOLARIS_OUTPUT_TRUE$])
m4trace:configure.ac:1260: -1- m4_pattern_allow([^ENABLE_SOLARIS_OUTPUT_FALSE$])
m4trace:configure.ac:1260: -1- _AM_SUBST_NOTMAKE([ENABLE_SOLARIS_OUTPUT_TRUE])
m4trace:configure.ac:1260: -1- _AM_SUBST_NOTMAKE([ENABLE_SOLARIS_OUTPUT_FALSE])
m4trace:configure.ac:1260: -1- m4_pattern_allow([^ENABLE_SOLARIS_OUTPUT$])
m4trace:configure.ac:1266: -1- m4_pattern_allow([^ENABLE_WINMM_OUTPUT$])
m4trace:configure.ac:1273: -1- AM_CONDITIONAL([ENABLE_WINMM_OUTPUT], [test x$enable_winmm_output = xyes])
m4trace:configure.ac:1273: -1- m4_pattern_allow([^ENABLE_WINMM_OUTPUT_TRUE$])
m4trace:configure.ac:1273: -1- m4_pattern_allow([^ENABLE_WINMM_OUTPUT_FALSE$])
m4trace:configure.ac:1273: -1- _AM_SUBST_NOTMAKE([ENABLE_WINMM_OUTPUT_TRUE])
m4trace:configure.ac:1273: -1- _AM_SUBST_NOTMAKE([ENABLE_WINMM_OUTPUT_FALSE])
m4trace:configure.ac:1290: -1- PKG_CHECK_MODULES([OGG], [ogg], [], [AC_MSG_ERROR([libogg not found])])
m4trace:configure.ac:1290: -1- m4_pattern_allow([^OGG_CFLAGS$])
m4trace:configure.ac:1290: -1- m4_pattern_allow([^OGG_LIBS$])
m4trace:configure.ac:1290: -1- PKG_CHECK_EXISTS([ogg], [pkg_cv_[]OGG_CFLAGS=`$PKG_CONFIG --[]cflags "ogg" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1290: -1- PKG_CHECK_EXISTS([ogg], [pkg_cv_[]OGG_LIBS=`$PKG_CONFIG --[]libs "ogg" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1290: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1293: -1- AM_CONDITIONAL([HAVE_OGG], [test x$have_ogg = xyes])
m4trace:configure.ac:1293: -1- m4_pattern_allow([^HAVE_OGG_TRUE$])
m4trace:configure.ac:1293: -1- m4_pattern_allow([^HAVE_OGG_FALSE$])
m4trace:configure.ac:1293: -1- _AM_SUBST_NOTMAKE([HAVE_OGG_TRUE])
m4trace:configure.ac:1293: -1- _AM_SUBST_NOTMAKE([HAVE_OGG_FALSE])
m4trace:configure.ac:1294: -1- AM_CONDITIONAL([HAVE_XIPH], [test x$have_xiph = xyes])
m4trace:configure.ac:1294: -1- m4_pattern_allow([^HAVE_XIPH_TRUE$])
m4trace:configure.ac:1294: -1- m4_pattern_allow([^HAVE_XIPH_FALSE$])
m4trace:configure.ac:1294: -1- _AM_SUBST_NOTMAKE([HAVE_XIPH_TRUE])
m4trace:configure.ac:1294: -1- _AM_SUBST_NOTMAKE([HAVE_XIPH_FALSE])
m4trace:configure.ac:1300: -1- m4_pattern_allow([^XMLTO$])
m4trace:configure.ac:1305: -1- m4_pattern_allow([^XMLTO$])
m4trace:configure.ac:1307: -1- m4_pattern_allow([^DOXYGEN$])
m4trace:configure.ac:1312: -1- m4_pattern_allow([^DOXYGEN$])
m4trace:configure.ac:1315: -1- AM_CONDITIONAL([ENABLE_DOCUMENTATION], [test x$enable_documentation = xyes])
m4trace:configure.ac:1315: -1- m4_pattern_allow([^ENABLE_DOCUMENTATION_TRUE$])
m4trace:configure.ac:1315: -1- m4_pattern_allow([^ENABLE_DOCUMENTATION_FALSE$])
m4trace:configure.ac:1315: -1- _AM_SUBST_NOTMAKE([ENABLE_DOCUMENTATION_TRUE])
m4trace:configure.ac:1315: -1- _AM_SUBST_NOTMAKE([ENABLE_DOCUMENTATION_FALSE])
m4trace:configure.ac:1322: -1- PKG_CHECK_MODULES([CPPUNIT], [cppunit], [], [AC_MSG_ERROR([cppunit not found])])
m4trace:configure.ac:1322: -1- m4_pattern_allow([^CPPUNIT_CFLAGS$])
m4trace:configure.ac:1322: -1- m4_pattern_allow([^CPPUNIT_LIBS$])
m4trace:configure.ac:1322: -1- PKG_CHECK_EXISTS([cppunit], [pkg_cv_[]CPPUNIT_CFLAGS=`$PKG_CONFIG --[]cflags "cppunit" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1322: -1- PKG_CHECK_EXISTS([cppunit], [pkg_cv_[]CPPUNIT_LIBS=`$PKG_CONFIG --[]libs "cppunit" 2>/dev/null`
		      test "x$?" != "x0" && pkg_failed=yes ], [pkg_failed=yes])
m4trace:configure.ac:1322: -1- _PKG_SHORT_ERRORS_SUPPORTED
m4trace:configure.ac:1326: -1- AM_CONDITIONAL([ENABLE_TEST], [test "x$enable_test" = xyes])
m4trace:configure.ac:1326: -1- m4_pattern_allow([^ENABLE_TEST_TRUE$])
m4trace:configure.ac:1326: -1- m4_pattern_allow([^ENABLE_TEST_FALSE$])
m4trace:configure.ac:1326: -1- _AM_SUBST_NOTMAKE([ENABLE_TEST_TRUE])
m4trace:configure.ac:1326: -1- _AM_SUBST_NOTMAKE([ENABLE_TEST_FALSE])
m4trace:configure.ac:1339: -1- AX_APPEND_COMPILE_FLAGS([-fvisibility=hidden])
m4trace:configure.ac:1339: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1339: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1339: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1339: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1340: -1- AX_APPEND_COMPILE_FLAGS([-ffast-math])
m4trace:configure.ac:1340: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1340: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1340: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1340: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1341: -1- AX_APPEND_COMPILE_FLAGS([-ftree-vectorize])
m4trace:configure.ac:1341: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1341: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1341: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1341: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1344: -1- AX_APPEND_COMPILE_FLAGS([-fvisibility=hidden])
m4trace:configure.ac:1344: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1344: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1344: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1344: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1345: -1- AX_APPEND_COMPILE_FLAGS([-fno-threadsafe-statics])
m4trace:configure.ac:1345: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1345: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1345: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1345: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1346: -1- AX_APPEND_COMPILE_FLAGS([-fmerge-all-constants])
m4trace:configure.ac:1346: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1346: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1346: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1346: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1347: -1- AX_APPEND_COMPILE_FLAGS([-ffast-math])
m4trace:configure.ac:1347: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1347: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1347: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1347: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1348: -1- AX_APPEND_COMPILE_FLAGS([-ftree-vectorize])
m4trace:configure.ac:1348: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1348: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1348: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1348: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1355: -1- AX_APPEND_COMPILE_FLAGS([-ffunction-sections])
m4trace:configure.ac:1355: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1355: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1355: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1355: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1356: -1- AX_APPEND_COMPILE_FLAGS([-fdata-sections])
m4trace:configure.ac:1356: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1356: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1356: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1356: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1359: -1- AX_APPEND_COMPILE_FLAGS([-ffunction-sections])
m4trace:configure.ac:1359: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1359: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1359: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1359: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1360: -1- AX_APPEND_COMPILE_FLAGS([-fdata-sections])
m4trace:configure.ac:1360: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1360: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1360: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1360: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1363: -1- AX_APPEND_LINK_FLAGS([-Wl,--gc-sections])
m4trace:configure.ac:1363: -1- AX_REQUIRE_DEFINED([AX_CHECK_LINK_FLAG])
m4trace:configure.ac:1363: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1363: -1- AX_CHECK_LINK_FLAG([$flag], [AX_APPEND_FLAG([$flag], [m4_default([], [LDFLAGS])])], [], [], [])
m4trace:configure.ac:1363: -1- AX_APPEND_FLAG([$flag], [m4_default([], [LDFLAGS])])
m4trace:configure.ac:1369: -1- AX_APPEND_COMPILE_FLAGS([-Wall])
m4trace:configure.ac:1369: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1369: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1369: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1369: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1370: -1- AX_APPEND_COMPILE_FLAGS([-Wextra])
m4trace:configure.ac:1370: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1370: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1370: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1370: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1371: -1- AX_APPEND_COMPILE_FLAGS([-Wmissing-prototypes])
m4trace:configure.ac:1371: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1371: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1371: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1371: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1372: -1- AX_APPEND_COMPILE_FLAGS([-Wshadow])
m4trace:configure.ac:1372: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1372: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1372: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1372: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1373: -1- AX_APPEND_COMPILE_FLAGS([-Wpointer-arith])
m4trace:configure.ac:1373: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1373: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1373: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1373: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1374: -1- AX_APPEND_COMPILE_FLAGS([-Wstrict-prototypes])
m4trace:configure.ac:1374: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1374: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1374: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1374: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1375: -1- AX_APPEND_COMPILE_FLAGS([-Wcast-qual])
m4trace:configure.ac:1375: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1375: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1375: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1375: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1376: -1- AX_APPEND_COMPILE_FLAGS([-Wwrite-strings])
m4trace:configure.ac:1376: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1376: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1376: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1376: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1377: -1- AX_APPEND_COMPILE_FLAGS([-pedantic])
m4trace:configure.ac:1377: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1377: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1377: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1377: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1380: -1- AX_APPEND_COMPILE_FLAGS([-Wall])
m4trace:configure.ac:1380: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1380: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1380: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1380: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1381: -1- AX_APPEND_COMPILE_FLAGS([-Wextra])
m4trace:configure.ac:1381: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1381: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1381: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1381: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1382: -1- AX_APPEND_COMPILE_FLAGS([-Wmissing-declarations])
m4trace:configure.ac:1382: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1382: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1382: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1382: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1383: -1- AX_APPEND_COMPILE_FLAGS([-Wshadow])
m4trace:configure.ac:1383: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1383: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1383: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1383: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1384: -1- AX_APPEND_COMPILE_FLAGS([-Wpointer-arith])
m4trace:configure.ac:1384: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1384: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1384: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1384: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1385: -1- AX_APPEND_COMPILE_FLAGS([-Wcast-qual])
m4trace:configure.ac:1385: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1385: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1385: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1385: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1386: -1- AX_APPEND_COMPILE_FLAGS([-Wwrite-strings])
m4trace:configure.ac:1386: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1386: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1386: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1386: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1387: -1- AX_APPEND_COMPILE_FLAGS([-Wsign-compare])
m4trace:configure.ac:1387: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1387: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1387: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1387: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1391: -1- AX_APPEND_COMPILE_FLAGS([-Wno-noexcept-type])
m4trace:configure.ac:1391: -1- AX_REQUIRE_DEFINED([AX_CHECK_COMPILE_FLAG])
m4trace:configure.ac:1391: -1- AX_REQUIRE_DEFINED([AX_APPEND_FLAG])
m4trace:configure.ac:1391: -1- AX_CHECK_COMPILE_FLAG([$flag], [AX_APPEND_FLAG([$flag], [])], [], [], [])
m4trace:configure.ac:1391: -1- AX_APPEND_FLAG([$flag], [])
m4trace:configure.ac:1403: -1- results([bzip2], [bzip2])
m4trace:configure.ac:1404: -1- results([iso9660], [ISO9660])
m4trace:configure.ac:1405: -1- results([zzip], [ZIP])
m4trace:configure.ac:1409: -1- results([avahi], [Avahi])
m4trace:configure.ac:1410: -1- results([bonjour], [Bonjour])
m4trace:configure.ac:1414: -1- results([ipv6], ["IPv6"])
m4trace:configure.ac:1415: -1- results([tcp], ["TCP"])
m4trace:configure.ac:1416: -1- results([un], [UNIX Domain Sockets])
m4trace:configure.ac:1419: -1- results([nfs], [NFS])
m4trace:configure.ac:1420: -1- results([smbclient], [SMB])
m4trace:configure.ac:1423: -1- results([aac], [AAC])
m4trace:configure.ac:1424: -1- results([adplug], [AdPlug])
m4trace:configure.ac:1425: -1- results([dsd], [DSD])
m4trace:configure.ac:1426: -1- results([sidplay], [C64 SID])
m4trace:configure.ac:1427: -1- results([ffmpeg], [FFMPEG])
m4trace:configure.ac:1428: -1- results([flac], [FLAC])
m4trace:configure.ac:1429: -1- results([fluidsynth], [FluidSynth])
m4trace:configure.ac:1430: -1- results([gme], [GME])
m4trace:configure.ac:1432: -1- results([sndfile], [libsndfile])
m4trace:configure.ac:1433: -1- results([mikmod], [MikMod])
m4trace:configure.ac:1434: -1- results([modplug], [MODPLUG])
m4trace:configure.ac:1435: -1- results([mad], [MAD])
m4trace:configure.ac:1436: -1- results([mpg123], [MPG123])
m4trace:configure.ac:1437: -1- results([mpc], [Musepack])
m4trace:configure.ac:1439: -1- results([opus], [Opus])
m4trace:configure.ac:1440: -1- results([tremor], [OggTremor])
m4trace:configure.ac:1441: -1- results([vorbis], [OggVorbis])
m4trace:configure.ac:1442: -1- results([audiofile], [WAVE])
m4trace:configure.ac:1443: -1- results([wavpack], [WavPack])
m4trace:configure.ac:1444: -1- results([wildmidi], [WildMidi])
m4trace:configure.ac:1447: -1- results([lsr], [libsamplerate])
m4trace:configure.ac:1448: -1- results([soxr], [libsoxr])
m4trace:configure.ac:1449: -1- results([libmpdclient], [libmpdclient])
m4trace:configure.ac:1450: -1- results([inotify], [inotify])
m4trace:configure.ac:1451: -1- results([sqlite], [SQLite])
m4trace:configure.ac:1454: -1- results([id3], [ID3])
m4trace:configure.ac:1457: -1- results([alsa], [ALSA])
m4trace:configure.ac:1458: -1- results([fifo], [FIFO])
m4trace:configure.ac:1459: -1- results([sndio], [SNDIO])
m4trace:configure.ac:1460: -1- results([recorder_output], [File Recorder])
m4trace:configure.ac:1461: -1- results([haiku], [Haiku])
m4trace:configure.ac:1462: -1- results([httpd_output], [HTTP Daemon])
m4trace:configure.ac:1463: -1- results([jack], [JACK])
m4trace:configure.ac:1465: -1- results([ao], [libao])
m4trace:configure.ac:1466: -1- results([oss], [OSS])
m4trace:configure.ac:1467: -1- results([openal], [OpenAL])
m4trace:configure.ac:1468: -1- results([osx], [OS X])
m4trace:configure.ac:1469: -1- results([pipe_output], [Pipeline])
m4trace:configure.ac:1471: -1- results([pulse], [PulseAudio])
m4trace:configure.ac:1472: -1- results([roar], [ROAR])
m4trace:configure.ac:1473: -1- results([shout], [SHOUTcast])
m4trace:configure.ac:1474: -1- results([solaris_output], [Solaris])
m4trace:configure.ac:1475: -1- results([winmm_output], [WinMM])
m4trace:configure.ac:1482: -1- results([flac_encoder], [FLAC])
m4trace:configure.ac:1483: -1- results([lame_encoder], [LAME])
m4trace:configure.ac:1484: -1- results([shine_encoder], [Shine])
m4trace:configure.ac:1485: -1- results([vorbis_encoder], [Ogg Vorbis])
m4trace:configure.ac:1486: -1- results([opus], [Opus])
m4trace:configure.ac:1487: -1- results([twolame_encoder], [TwoLAME])
m4trace:configure.ac:1488: -1- results([wave_encoder], [WAVE])
m4trace:configure.ac:1492: -1- results([cdio_paranoia], [CDIO_PARANOIA])
m4trace:configure.ac:1493: -1- results([curl], [CURL])
m4trace:configure.ac:1494: -1- results([smbclient], [SMBCLIENT])
m4trace:configure.ac:1495: -1- results([soundcloud], [Soundcloud])
m4trace:configure.ac:1497: -1- results([mms], [MMS])
m4trace:configure.ac:1513: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:1513: -1- m4_pattern_allow([^LTLIBOBJS$])
m4trace:configure.ac:1513: -1- AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])
m4trace:configure.ac:1513: -1- m4_pattern_allow([^am__EXEEXT_TRUE$])
m4trace:configure.ac:1513: -1- m4_pattern_allow([^am__EXEEXT_FALSE$])
m4trace:configure.ac:1513: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_TRUE])
m4trace:configure.ac:1513: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_FALSE])
m4trace:configure.ac:1513: -1- _AC_AM_CONFIG_HEADER_HOOK(["$ac_file"])
m4trace:configure.ac:1513: -1- _AM_OUTPUT_DEPENDENCY_COMMANDS
